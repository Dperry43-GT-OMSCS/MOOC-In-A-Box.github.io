{"version":3,"sources":["components/CourseCard/CourseCard.js","components/CourseLibrary/CourseLibraryToolbar/SearchBar/SearchBar.component.js","components/CourseLibrary/CourseLibraryToolbar/CourseLibraryToolbarMenu/CourseLibraryToolbarMenuItem/CourseLibraryToolbarMenuItem.component.js","components/CourseLibrary/CourseLibraryToolbar/CourseLibraryToolbarMenu/CourseLibraryToolbarMenu.component.js","components/CourseLibrary/CourseLibraryToolbar/CourseLibraryToolbar.component.js","service/firebase.service.js","components/CourseLibrary/CourseLibrary.js","components/CourseOverview/CourseOverviewNavigationPane/CourseOverviewChapterPanel/CourseOverviewChapterPanel.component.js","components/CourseOverview/CourseOverviewNavigationPane/CourseOverviewNavigationPane.component.js","components/CourseOverview/CourseOverviewCoursePane/CourseOverviewLesson/CourseOverviewLesson.component.js","components/CourseOverview/CourseOverviewCoursePane/CourseOverviewCoursePane.component.js","components/CourseOverview/CourseOverview.js","components/Login/Login.js","components/CoursesDropdown/CoursesDropdown.component.js","components/MyCourses/MyCourses.js","components/UserProfile/EditDialog/EditDialog.component.js","components/UserProfile/UserProfileSection/UserProfileSection.component.js","components/UserProfile/UserProfile.js","components/CreateCourse/CreateCourseDialog/CreateCourseDialog.component.js","components/CreateCourse/CreateCourse.component.js","components/EditCourse/EditCourseNavigationPane/EditCourseChapterPanel/EditCourseChapterPanel.component.js","components/EditCourse/EditCourseNavigationPane/EditCourseNavigationPane.component.js","components/EditCourse/EditCoursePane/EditCourseLesson/EditCourseLesson.component.js","components/EditCourse/EditCoursePane/EditCoursePane.component.js","components/EditCourse/CreateChapterDialog/CreateChapterDialog.component.js","components/EditCourse/CreateLessonDialog/CreateLessonDialog.component.js","components/EditCourse/EditCourse.component.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","maxWidth","minWidth","maxHeight","minHeight","position","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","actionsRow","bottom","left","content","paddingBottom","CourseCard","props","classes","React","useState","isFavorited","setIsFavorited","isCourseAFavorite","Card","variant","className","CardHeader","title","course","subheader","owner","displayName","action","IconButton","aria-label","onClick","removeFavoriteClicked","favoriteClicked","CardMedia","image","CardContent","Typography","color","component","description","CardActions","disableSpacing","Button","Link","to","id","SearchBar","TextField","value","searchValue","onChange","type","onSearchClicked","CourseLibraryToolbarMenuItem","FormControlLabel","control","Radio","label","CourseLibraryToolbarMenu","menuItems","options","map","option","handleClick","associatedClickFunction","display","Menu","menuId","anchorEl","element","keepMounted","open","Boolean","onClose","closeFunction","MenuItem","FormControl","FormLabel","menuLabel","RadioGroup","name","radioGroupName","menuValue","event","target","CourseLibraryToolbar","menuButtons","menuItem","clickedFunction","buttonText","menus","menuOptions","AppBar","Toolbar","searchInfo","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","getUserById","userId","collection","doc","get","getCourseById","courseId","getAllCourses","getAllUsers","updateUser","updates","a","set","merge","createUser","userAuth","uid","photoURL","email","getCurrentUser","user","auth","currentUser","logUserInUser","isGoog","provider","GoogleAuthProvider","FacebookAuthProvider","users","undefined","authUser","then","queryResults","forEach","data","push","signInWithPopup","result","u","catch","error","console","log","signOut","document","cookie","deleteUser","delete","createCourse","courseInfo","storage","userDocRef","lessonRef","chapter","lessons","add","chapters","courseDoc","usersCreatedCourses","createdCoursesRefs","length","courseRef","updateObject","favoriteCourse","favoritedCourses","favoritedCoursesRefs","removeFavoriteCourse","splice","updateCourse","addNewChapter","newChapterInfo","lessonsRef","addNewLesson","chapterInfo","lessonInfo","lessonDoc","getCourseByIdEvaluatePromise","courseResult","exists","getDocFromDocRef","docRef","myResult","CourseLibrary","sortByClicked","setState","sortByElement","currentTarget","sortByHandleClose","sortFilterValue","topicClicked","topicElement","topicHandleClose","topicFilterValue","organizationClicked","organizationElement","organizationHandleClosed","organizationFilterValue","buildMenuItems","state","find","favoritedCourse","handleSearchChange","bind","handleSearchClicked","e","this","FirebaseService","listItems","courses","item","Grid","s","class","container","spacing","Component","CourseOverviewChapterPanel","lessonItems","lesson","ListItem","setChapterInContext","setActiveLesson","listItemClicked","button","ListItemText","primary","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","xs","md","List","dense","CourseOverviewNavigationPane","courseNavigationPanels","activeLesson","Paper","CourseOverviewLesson","video","CourseOverviewCoursePane","activeChapter","CourseOverview","setCourse","chapterInContext","useParams","resolveLessons","Promise","all","results","resolve","resolveChapters","useEffect","CircularProgress","LoginPage","loginGoogle","loginFacebook","completeLogin","history","withRouter","CoursesDropdownComponent","RouterLink","includeEditIcon","CurrentCoursesComponent","currentCourses","PastCoursesComponent","pastCourses","SavedCoursesComponent","savedCourses","CreatedCoursesComponent","createdCourses","MyCourses","setUser","courseComponentList","hasCourses","pastCourse","CssBaseline","Container","EditDialog","Dialog","isOpen","handleClose","aria-labelledby","DialogTitle","field","DialogContent","DialogContentText","autoFocus","margin","fullWidth","DialogActions","handleSubmit","userKeyToDisplayMap","UserProfileSection","align","displayValue","openDialog","isDialogOpen","displayKey","setDisplayName","oldDisplayName","setOldDiplayName","isDisplayNameDialogOpen","setIsDisplayNameDialogOpen","userInterests","setUserInterests","oldUserInterests","setOldUserInterests","isUserInterestsDialogOpen","setIsUserInterestsDialogOpen","res","interests","err","Divider","CreateCourseDialog","setDescription","setTitle","courseDetails","CreateCourse","isCreateCourseDialogOpen","setIsCreateCourseDialogOpen","useHistory","sectionTitle","updateCourses","currnetCoursesSection","EditCourseChapterPanel","openLessonModal","EditCourseNavigationPane","openCreateChapterDialog","EditCourseLesson","EditCoursePane","CreateChapterDialog","CreateLessonDialog","setVideo","EditCourse","isCreateChapterDialogOpen","setIsCreateChapterDialogOpen","isCreateLessonDialogOpen","setIsCreateLessonDialogOpen","createMuiTheme","palette","light","main","dark","secondary","typography","useNextVariants","overrides","MuiButton","textTransform","App","fetchCourses","fetchUsers","render","getUserOnLoad","pastCoursesRefs","split","some","trim","startsWith","cookieValue","replace","hidden","exact","path","service","window","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"6jDAwBMA,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,SAAU,IACVC,SAAU,IACVC,UAAW,IACXC,UAAW,IACXC,SAAU,YAEZC,MAAO,CACLC,OAAQ,EACRC,WAAY,UAEdC,OAAQ,CACNC,UAAW,eACXC,WAAY,OACZC,WAAYb,EAAMc,YAAYC,OAAO,YAAa,CAChDC,SAAUhB,EAAMc,YAAYE,SAASC,YAGzCC,WAAY,CACVP,UAAW,kBAEbQ,OAAQ,CACNC,gBAAiBC,IAAI,MAEvBC,WAAY,CACVhB,SAAU,WACViB,OAAQ,EACRC,KAAM,GAERC,QAAS,CACPC,cAAe,YAIJ,SAASC,EAAWC,GACjC,IAAMC,EAAU/B,IADwB,EAERgC,IAAMC,UAAS,GAFP,gCAGFD,IAAMC,UAAS,IAHb,mBAGjCC,EAHiC,KAGpBC,EAHoB,KAMnCL,EAAMM,mBAAqBF,GAC9BC,EAAeL,EAAMM,mBAmBvB,OACE,kBAACC,EAAA,EAAD,CAAMC,QAAQ,WAAWC,UAAWR,EAAQ5B,MAC1C,kBAACqC,EAAA,EAAD,CACEC,MAAOX,EAAMY,OAAOD,MACpBE,UAAWb,EAAMY,OAAOE,MAAMC,YAC9BC,OACE,kBAACC,EAAA,EAAD,CAAYC,aAAW,mBAAmBC,QAjBpB,WACxBf,GACFC,GAAe,GACfL,EAAMoB,sBAAsBpB,EAAMY,UAElCP,GAAe,GACfL,EAAMqB,gBAAgBrB,EAAMY,WAYrBR,EAAc,kBAAC,IAAD,MAAmB,kBAAC,IAAD,SAIxC,kBAACkB,EAAA,EAAD,CACEb,UAAWR,EAAQtB,MACnB4C,MAAM,kCACNZ,MAAM,gBAER,kBAACa,EAAA,EAAD,CAAaf,UAAWR,EAAQJ,SAC9B,kBAAC4B,EAAA,EAAD,CAAYjB,QAAQ,QAAQkB,MAAM,gBAAgBC,UAAU,KACzD3B,EAAMY,OAAOgB,aAEhB,kBAACH,EAAA,EAAD,CAAYjB,QAAQ,QAAQkB,MAAM,gBAAgBC,UAAU,KACzD3B,EAAMY,OAAOE,MAAMC,cAGxB,kBAACc,EAAA,EAAD,CAAapB,UAAWR,EAAQP,WAAYoC,gBAAc,GACxD,kBAACC,EAAA,EAAD,CACEvB,QAAQ,YACRkB,MAAM,YACNC,UAAWK,IACXC,GAAE,0BAAqBjC,EAAMY,OAAOsB,KAJtC,c,sDC3FSC,MAXjB,SAAmBnC,GACf,OACE,yBAAKS,UAAU,cACX,kBAAC2B,EAAA,EAAD,CAAWC,MAAOrC,EAAMsC,YAAaC,SAAUvC,EAAMuC,SAAUL,GAAG,kBAAkBM,KAAK,SAAShC,QAAQ,WAAYkB,MAAM,UAC5H,kBAACT,EAAA,EAAD,CAAYR,UAAU,cAAcU,QAASnB,EAAMyC,iBACjD,kBAAC,IAAD,CAAYhC,UAAU,uB,+DCDjBiC,MANjB,SAAsC1C,GAClC,OACE,kBAAC2C,EAAA,EAAD,CAAkBN,MAAOrC,EAAMqC,MAAOO,QAAS,kBAACC,EAAA,EAAD,MAAWC,MAAO9C,EAAMqC,SCuC5DU,MAnCjB,SAAkC/C,GAEhC,IAAIgD,EAAYhD,EAAMiD,QAAQC,KAAK,SAAAC,GACjC,OACE,kBAAC,EAAD,CACEC,YAAaD,EAAOE,wBACpBhB,MAAOc,EAAOG,aASlB,OACE,kBAACC,EAAA,EAAD,CACIrB,GAAIlC,EAAMwD,OACVC,SAAUzD,EAAM0D,QAChBC,aAAW,EACXC,KAAMC,QAAQ7D,EAAM0D,SACpBI,QAAS9D,EAAM+D,eAEf,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAatC,UAAU,YACvB,kBAACuC,EAAA,EAAD,CAAWvC,UAAU,UAAU3B,EAAMmE,WACrC,kBAACC,EAAA,EAAD,CAAYlD,aAAW,SAASmD,KAAMrE,EAAMsE,eAAgBjC,MAAOrC,EAAMuE,UAAWhC,SAfrE,SAACiC,GACxBxE,EAAM+D,cAAcS,EAAMC,OAAOpC,SAetBW,OCWA0B,OAtCf,SAA8B1E,GAE1B,IAAI2E,EAAc3E,EAAMgD,UAAUE,KAAI,SAAA0B,GAClC,OACI,kBAAC7C,EAAA,EAAD,CACIL,MAAM,UACNjB,UAAU,cACVU,QAASyD,EAASC,iBAEjBD,EAASE,eAKlBC,EAAQ/E,EAAMgD,UAAUE,KAAI,SAAA0B,GAC5B,OACI,kBAAC,EAAD,CACIlB,QAASkB,EAASlB,QAClBK,cAAiBa,EAASb,cAC1Bd,QAAS2B,EAASI,YAClBxB,OAAQoB,EAASpB,OACjBW,UAAWS,EAASE,gBAMhC,OACI,kBAACG,EAAA,EAAD,CAAQvG,SAAS,SAAS+B,UAAU,0BAChC,kBAACyE,EAAA,EAAD,KACKP,EACD,kBAAC,EAAD,CAAWrC,YAAatC,EAAMmF,WAAW9C,MAAOE,SAAUvC,EAAMmF,WAAW5C,SAAUE,gBAAiBzC,EAAMmF,WAAWhE,WAE1H4D,I,oBC5BbK,KAASC,cAXY,CACjBC,OAAQ,0CACRC,WAAY,gCACZC,YAAa,uCACbC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAInB,IAAMC,GAAKV,KAASW,YAGPC,GAAc,SAAAC,GACvB,OAAOH,GAAGI,WAAW,SAASC,IAAIF,GAAQG,OAIjCC,GAAgB,SAAAC,GACzB,OAAOR,GAAGI,WAAW,UAChBC,IAAIG,GACJF,OAGIG,GAAgB,WACzB,OAAOT,GAAGI,WAAW,UAAUE,OAGtBI,GAAc,WACvB,OAAOV,GAAGI,WAAW,SAASE,OAGrBK,GAAU,uCAAG,WAAOR,EAAQS,GAAf,SAAAC,EAAA,+EACfb,GAAGI,WAAW,SAChBC,IAAIF,GACJW,IAAIF,EAAS,CAAEG,OAAO,KAHL,2CAAH,wDAMVC,GAAU,uCAAG,WAAOC,GAAP,SAAAJ,EAAA,+EACfb,GAAGI,WAAW,SAChBC,IAAIY,EAASC,KACbJ,IAAI,CACD1E,GAAI6E,EAASC,IACb3C,KAAM0C,EAAShG,YACfkG,SAAUF,EAASE,SACnBC,MAAOH,EAASG,OAEhB,CAAEL,OAAO,KATK,2CAAH,sDAaVM,GAAiB,WAC1B,IAAIC,EAAOhC,KAASiC,OAAOC,YAC3B,OAAIF,QAGA,GAIKG,GAAa,uCAAG,WAAOC,GAAP,qBAAAb,EAAA,6DAEhBc,EAATD,EAAoB,IAAIpC,KAASiC,KAAKK,mBACvB,IAAItC,KAASiC,KAAKM,qBAC7BC,EAAQ,GACRN,OAAcO,EACdC,OAAWD,EANU,SAUnBrB,KACDuB,MAAK,SAACC,GACHA,EAAaC,SAAQ,SAAC9B,GAClB,IAAMiB,EAAOjB,EAAI+B,OACjBd,EAAKlF,GAAKiE,EAAIjE,GACd0F,EAAMO,KAAKf,SAfE,uBAmBZhC,KAASiC,OAAOe,gBAAgBX,GAAUM,KAA1C,uCAA+C,WAAgBM,GAAhB,SAAA1B,EAAA,yDACxDmB,EAAWO,EAAOjB,KAClBQ,EAAMK,SAAQ,SAAAK,GACNA,EAAEpG,KAAO4F,EAASd,MAClBM,EAAcgB,WAIFT,IAAhBP,EARoD,gCAU9CR,GAAWgB,GAAUC,KAArB,sBAA0B,sBAAApB,EAAA,+EAErBQ,MAFqB,4CAG7BoB,OAAM,SAAAC,GACLC,QAAQC,IAAIF,MAdoC,gCAiBjDlB,GAjBiD,2CAA/C,uDAkBViB,OAAM,SAAUC,GACfC,QAAQC,IAAIF,MAtCS,mFAAH,sDA0CbG,GAAO,uCAAG,sBAAAhC,EAAA,sEACNvB,KAASiC,OAAOsB,UAAUZ,MAAK,WAExC,OADAa,SAASC,OAAS,mDACX,KACRN,OAAM,SAAUC,GAEf,OADAC,QAAQC,IAAIF,IACL,KANQ,mFAAH,qDAUPM,GAAU,uCAAG,4BAAAnC,EAAA,6DAClBS,EAAOhC,KAASiC,OAAOC,YADL,SAGTF,EAAK2B,SAAShB,MAAK,WAE5B,OADAa,SAASC,OAAS,mDACX,KACRN,OAAM,SAAUC,GAEf,OADAC,QAAQC,IAAIF,IACL,KARW,mFAAH,qDAaVQ,GAAY,uCAAG,WAAO5B,EAAM6B,GAAb,iBAAAtC,EAAA,6DACVvB,KAAS8D,UACjBC,EAAarD,GAAGK,IAAH,gBAAgBiB,EAAKlF,KAClCkH,EAAYtD,GAAGK,IAAI8C,EAAWI,QAAQC,SAC5CL,EAAWI,QAAQC,QAAUF,EAJL,SAKXtD,GAAGI,WAAW,UAAUqD,IAAI,CACrCzI,MAAOqI,EACPxI,MAAOsI,EAAWtI,MAClBiB,YAAaqH,EAAWrH,YACxB4H,SAAUP,EAAWO,WAEpBzB,KANQ,uCAMH,WAAM0B,GAAN,mBAAA9C,EAAA,6DAGE+C,EADAtC,EAAKuC,oBAAsBvC,EAAKuC,mBAAmBC,OAAS,EACtCxC,EAAKuC,mBAEL,GAGpBE,EAAY/D,GAAGK,IAAH,iBAAiBsD,EAAUvH,KAC7CwH,EAAoBvB,KAAK0B,GACnBC,EAAe,CACjBH,mBAAoBD,GAXtB,SAcWjD,GAAWW,EAAKlF,GAAI4H,GAd/B,mFANG,uDALW,mFAAH,wDA6BZC,GAAc,uCAAG,WAAO3C,EAAM6B,GAAb,mBAAAtC,EAAA,6DACpBkD,EAAY/D,GAAGK,IAAH,iBAAiB8C,EAAW/G,MAI1C8H,EADA5C,EAAK6C,sBAAwB7C,EAAK6C,qBAAqBL,OAAS,EAC7CxC,EAAK6C,qBAEL,IAGN9B,KAAK0B,GAEhBC,EAAe,CACjBG,qBAAsBD,GAbA,SAgBbvD,GAAWW,EAAKlF,GAAI4H,GAhBP,mFAAH,wDAmBdI,GAAoB,uCAAG,WAAO9C,EAAM6B,GAAb,mBAAAtC,EAAA,6DAC1BkD,EAAY/D,GAAGK,IAAH,iBAAiB8C,EAAW/G,MACxC8H,EAAmB5C,EAAK6C,sBACbE,OAAON,EAAW,GAE7BC,EAAe,CACjBG,qBAAsBD,GANM,SASnBvD,GAAWW,EAAKlF,GAAI4H,GATD,mFAAH,wDAcpBM,GAAY,uCAAG,WAAO9D,EAAUI,GAAjB,SAAAC,EAAA,+EACjBb,GAAGI,WAAW,UAChBC,IAAIG,GACJM,IAAIF,EAAS,CAAEG,OAAO,KAHH,2CAAH,wDAMZwD,GAAa,uCAAG,WAAOzJ,EAAQ0J,GAAf,iBAAA3D,EAAA,6DACnB0C,EAAU,IACR1I,MAAQ2J,EAAe3J,MAC/B0I,EAAQzH,YAAc0I,EAAe1I,YACrCyH,EAAQnH,GAAK,EACbmH,EAAQkB,WAAa,GAEjB3J,EAAO4I,UAAY5I,EAAO4I,SAASI,OAAS,IAG5ChJ,EAAO4I,SAAW,IAFlB5I,EAAO4I,SAASrB,KAAKkB,GAMnBS,EAAe,CACjBN,SAAU5I,EAAO4I,UAfI,SAkBZY,GAAaxJ,EAAOsB,GAAI4H,GAlBZ,oFAAH,wDAsBbU,GAAY,uCAAG,WAAO5J,EAAQ6J,EAAaC,GAA5B,SAAA/D,EAAA,sEAEXb,GAAGI,WAAW,UAAUC,IAAIvF,EAAOsB,IAAIgE,WAAW,WAAWqD,IAAImB,GACzE3C,KADQ,uCACH,WAAM4C,GAAN,mBAAAhE,EAAA,6DACF8B,QAAQC,IAAI,aAAciC,GAC1BlC,QAAQC,IAAR,iBAAsB9H,EAAOsB,GAA7B,oBAA2CyI,EAAUzI,KAC/CkH,EAAYtD,GAAGK,IAAH,iBAAiBvF,EAAOsB,GAAxB,oBAAsCyI,EAAUzI,KAC5DsH,EAAW5I,EAAO4I,SAAStG,KAAK,SAAAmG,GAIlC,OAHIA,IAAYoB,GACZpB,EAAQkB,WAAWpC,KAAKiB,GAErBC,KAGLS,EAAe,CACjBN,YAZF,SAcWY,GAAaxJ,EAAOsB,GAAI4H,GAdnC,mFADG,uDAFW,mFAAH,0DAsBZc,GAA+B,SAAAtE,GACxC,OAAOR,GAAGI,WAAW,UAChBC,IAAIG,GACJF,MACA2B,MAAM,SAAA8C,GACH,GAAIA,EAAaC,OAAQ,CACrB,IAAMlK,EAASiK,EAAa3C,OAE5B,OADAtH,EAAOsB,GAAKoE,EACL1F,EAEP,OAAO,SAKVmK,GAAmB,SAAAC,GAC5B,OAAOA,EAAO5E,MACT2B,MAAM,SAAAM,GACH,GAAGA,EAAOyC,OAAO,CACb,IAAMG,EAAW5C,EAAOH,OAGxB,OAFA+C,EAAS/I,GAAKmG,EAAOnG,GACrBuG,QAAQC,IAAIuC,GACLA,EAEP,OAAO,SC7BRC,G,YA/Nb,WAAYlL,GAAQ,IAAD,8BACjB,4CAAMA,KAyCRmL,cAAgB,SAAA3G,GACd,EAAK4G,SAAS,CACZC,cAAe7G,EAAM8G,iBA5CN,EAgDnBC,kBAAoB,SAAClJ,GACnB,EAAK+I,SAAS,CACZC,cAAe,KACfG,gBAAiBnJ,KAnDF,EAyDnBoJ,aAAe,SAAAjH,GACb,EAAK4G,SAAS,CACZM,aAAclH,EAAM8G,iBA3DL,EA+DnBK,iBAAmB,SAACtJ,GAClB,EAAK+I,SAAS,CACZM,aAAc,KACdE,iBAAkBvJ,KAlEH,EAuEnBwJ,oBAAsB,SAAArH,GACpB,EAAK4G,SAAS,CACZU,oBAAqBtH,EAAM8G,iBAzEZ,EA6EnBS,yBAA2B,SAAC1J,GAC1B,EAAK+I,SAAS,CACZU,oBAAqB,KACrBE,wBAAyB3J,KAhFV,EA+FnB4J,eAAiB,WA6Ef,MAAO,CA5EY,CACjBnH,WAAY,UACZtB,OAAQ,eACRqB,gBAAiB,EAAKsG,cACtBpH,cAAe,EAAKwH,kBACpB7H,QAAS,EAAKwI,MAAMb,cACpB/G,eAAgB,YAChBC,UAAW,EAAK2H,MAAMV,gBACtBxG,YAAa,CACX,CACE1B,QAAS,SACTD,wBAA0B,EAAKkI,mBAEjC,CACEjI,QAAS,cACTD,wBAA0B,EAAKkI,mBAEjC,CACEjI,QAAS,WACTD,wBAA0B,EAAKkI,qBAKnB,CAChBzG,WAAY,QACZtB,OAAQ,aACRqB,gBAAiB,EAAK4G,aACtB/H,QAAS,EAAKwI,MAAMR,aACpB3H,cAAe,EAAK4H,iBACpBrH,eAAgB,aAChBC,UAAW,EAAK2H,MAAMN,iBACtB5G,YAAa,CACX,CACE1B,QAAS,UACTD,wBAA0B,EAAKsI,kBAEjC,CACErI,QAAS,aACTD,wBAA0B,EAAKsI,kBAEjC,CACErI,QAAS,UACTD,wBAA0B,EAAKsI,kBAEjC,CACErI,QAAS,OACTD,wBAA0B,EAAKsI,oBAKZ,CACvB7G,WAAY,eACZtB,OAAQ,oBACRqB,gBAAiB,EAAKgH,oBACtBnI,QAAS,EAAKwI,MAAMJ,oBACpB/H,cAAe,EAAKgI,yBACpBzH,eAAgB,oBAChBC,UAAW,EAAK2H,MAAMF,wBACtBhH,YAAa,CACX,CACE1B,QAAS,WACTD,wBAA0B,EAAK0I,0BAEjC,CACEzI,QAAS,cACTD,wBAA0B,EAAK0I,0BAEjC,CACEzI,QAAS,cACTD,wBAA0B,EAAK0I,8BAvKpB,EA+KnBzL,kBAAoB,SAAC8G,EAAMxG,GAEzB,SAAIwG,EAAK4C,kBAAoB5C,EAAK4C,iBAAiBJ,OAAS,IACnDxC,EAAK4C,iBACTmC,MAAK,SAAAC,GAAe,OAAIA,EAAgBlK,KAAOtB,EAAOsB,OAhL3D,EAAKmK,mBAAqB,EAAKA,mBAAmBC,KAAxB,gBAC1B,EAAKC,oBAAsB,EAAKA,oBAAoBD,KAAzB,gBAE3B,EAAKnB,cAAgB,EAAKA,cAAcmB,KAAnB,gBACrB,EAAKf,kBAAoB,EAAKA,kBAAkBe,KAAvB,gBAEzB,EAAKb,aAAe,EAAKA,aAAaa,KAAlB,gBACpB,EAAKX,iBAAmB,EAAKA,iBAAiBW,KAAtB,gBAExB,EAAKT,oBAAsB,EAAKA,oBAAoBS,KAAzB,gBAC3B,EAAKP,yBAA2B,EAAKA,yBAAyBO,KAA9B,gBAEhC,EAAKL,eAAiB,EAAKA,eAAeK,KAApB,gBACtB,EAAKjL,gBAAkB,EAAKA,gBAAgBiL,KAArB,gBACvB,EAAKlL,sBAAwB,EAAKA,sBAAsBkL,KAA3B,gBAE7B,EAAKJ,MAAQ,CACX5J,YAAa,GACb+I,cAAe,KACfK,aAAc,KACdI,oBAAqB,KACrBN,gBAAiB,KACjBI,iBAAkB,KAClBI,wBAAwB,MA1BT,E,gFAgCAQ,GACjBC,KAAKrB,SAAS,CACZ9I,YAAakK,EAAE/H,OAAOpC,U,0CAINmK,M,+EA8CE5L,G,iFACd8L,GAA+BD,KAAKzM,MAAMoH,KAAMxG,G,OACtD6L,KAAKzM,MAAMyG,WAAWgG,KAAKzM,MAAMoH,KAAKlF,I,4LAGZtB,G,iFACpB8L,GAAqCD,KAAKzM,MAAMoH,KAAMxG,G,OAC5D6L,KAAKzM,MAAMyG,WAAWgG,KAAKzM,MAAMoH,KAAKlF,I,sIAgGtC,IAAMc,EAAYyJ,KAAKR,iBACjB5K,EAAkBoL,KAAKpL,gBACvBf,EAAoBmM,KAAKnM,kBACzBc,EAAwBqL,KAAKrL,sBAE7BgG,EAAOqF,KAAKzM,MAAMoH,KAClBjC,EAAa,CACjB9C,MAAOoK,KAAKP,MAAM5J,YAClBC,SAAUkK,KAAKJ,mBACflL,QAASsL,KAAKF,qBAEZI,EAAY,GAWhB,OAVIvF,IACFuF,EAAYF,KAAKzM,MAAM4M,QAAQ1J,KAAI,SAAS2J,GAC1C,OACI,kBAACC,EAAA,EAAD,CAAMD,MAAI,EAACE,EAAG,GACZ,kBAAChN,EAAD,CAAYa,OAAQiM,EAAMxL,gBAAiBA,EAAiBD,sBAAuBA,EAAuBd,kBAAmBA,EAAkB8G,EAAMyF,UAO7J,yBAAKG,MAAM,kBACT,kBAAC,GAAD,CAAsBhK,UAAWA,EAAWmC,WAAYA,IACtD,yBAAK1E,UAAU,eACf,kBAACqM,EAAA,EAAD,CAAMG,WAAS,EAACC,QAAS,GACtBP,S,GAvNezM,IAAMiN,W,sHC+DnBC,OA5Cf,SAAoCpN,GAOhC,IAAIqN,EAAc,GAalB,OAZIrN,EAAMqJ,SAAWrJ,EAAMqJ,QAAQC,SAAWtJ,EAAMqJ,QAAQC,QAAQM,OAAS,EACzEyD,EAAcrN,EAAMqJ,QAAQC,QAAQpG,KAAK,SAAAoK,GAAM,OAC7C,kBAACC,GAAA,EAAD,CAAUpM,QAAS,kBARzB,SAAyBmM,GACvBtN,EAAMwN,oBAAoBxN,EAAMqJ,SAChCrJ,EAAMyN,gBAAgBH,GAMOI,CAAgBJ,IAASpL,GAAIoL,EAAOpL,GAAIyL,QAAM,GACnE,kBAACC,GAAA,EAAD,CAAcC,QAASP,EAAO3M,YAIlC0M,EAAY,GAAK,kBAACE,GAAA,EAAD,SAAW,kBAACK,GAAA,EAAD,CAAcC,QAAQ,qBAAjC,KAMnB,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CACAC,WAAY,kBAAC,KAAD,MACZC,gBAAc,kBACd/L,GAAG,kBAEH,kBAACT,EAAA,EAAD,CAAYjB,QAAQ,aAAaR,EAAMqJ,QAAQ1I,QAE/C,kBAACuN,GAAA,EAAD,KACA,kBAACpB,EAAA,EAAD,CAAMG,WAAS,EAACC,QAAS,GACrB,kBAACJ,EAAA,EAAD,CAAMD,MAAI,EAACsB,GAAI,GAAIC,GAAI,GACnB,6BACI,kBAACC,GAAA,EAAD,CAAMC,MAAM,QACXjB,SChBVkB,OAlBf,SAAsCvO,GAElC,IAAIwO,EAAyB,GAS7B,OARIxO,EAAMY,QAAUZ,EAAMY,OAAO4I,UAAYxJ,EAAMY,OAAO4I,SAASI,OAAS,IAE1E4E,EAAyBxO,EAAMY,OAAO4I,SAAStG,KAAK,SAAAmG,GAAO,OACzD,kBAAC,GAAD,CAA4BoE,gBAAiBzN,EAAMyN,gBAAiBgB,aAAczO,EAAMyO,aAAejB,oBAAqBxN,EAAMwN,oBAAqBnE,QAASA,QAMhK,kBAACqF,GAAA,EAAD,CAAOjO,UAAU,SACd+N,ICjCIG,OAXf,SAA8B3O,GAC1B,OACI,6BACI,4BAAKA,EAAMsN,OAAO3M,OAClB,qCAAWX,EAAMsN,OAAOsB,OACxB,iDACA,2BAAI5O,EAAMsN,OAAO1L,eCadiN,OAlBf,SAAkC7O,GAC9B,OACI,kBAAC0O,GAAA,EAAD,CAAOjO,UAAU,SACb,4BAAKT,EAAMY,OAAOD,OAEdX,EAAM8O,cACN,wCAAc9O,EAAM8O,cAAcnO,OAClC,oDAGFX,EAAMyO,aACH,kBAAC,GAAD,CAAsBnB,OAAQtN,EAAMyO,eACrC,oDC8ECM,OAtEjB,SAAwB/O,GAAQ,IAAD,EAECG,qBAFD,mBAEpBS,EAFoB,KAEZoO,EAFY,OAGa7O,qBAHb,mBAGpBsO,EAHoB,KAGNhB,EAHM,OAIDtN,qBAJC,gCAKqBA,sBALrB,mBAKpB8O,EALoB,KAKFzB,EALE,KAOrBtL,EAAOgN,cAAPhN,GAPqB,SAUZiN,EAVY,8EAU3B,WAA8B9F,GAA9B,SAAA1C,EAAA,2DACQ0C,EAAQkB,YAAclB,EAAQkB,WAAWX,OAAS,GAD1D,yCAEewF,QAAQC,IACXhG,EAAQkB,WAAWrH,IAAnB,uCAAwB,WAAMkG,GAAN,eAAAzC,EAAA,sEACC+F,GAAiCtD,GADlC,cACdkE,EADc,yBAEbA,GAFa,2CAAxB,wDAIEvF,MAAK,SAAAuH,GAEH,OADAjG,EAAQC,QAAUgG,EACXjG,MATvB,gCAaa+F,QAAQG,QAAQlG,IAb7B,4CAV2B,+BA2BZmG,EA3BY,8EA2B3B,WAA+BhG,GAA/B,SAAA7C,EAAA,+EACWyI,QAAQC,IAAI7F,EAAStG,KAAK,SAAAmG,GAAO,OAAI8F,EAAe9F,QAD/D,4CA3B2B,kEA+B3B,WAA6BnH,GAA7B,eAAAyE,EAAA,sEACyB+F,GAA6CxK,GADtE,cACUtB,EADV,gBAE4B4O,EAAgB5O,EAAO4I,UAFnD,OAEI5I,EAAO4I,SAFX,OAGIwF,EAAUpO,GAHd,4CA/B2B,sBA2C3B,OANA6O,qBAAU,WACFvN,GAtCmB,oCAuCnBmE,CAAcnE,KAEnB,CAACA,IAEAtB,EAEI,yBAAKH,UAAU,kBACb,kBAACgB,EAAA,EAAD,CAAYhB,UAAU,SAASD,QAAQ,KAAKmB,UAAU,MAAtD,mBAGA,kBAACmL,EAAA,EAAD,CAAMG,WAAS,EAACC,QAAS,GACrB,kBAACJ,EAAA,EAAD,CAAMD,MAAI,EAACsB,GAAI,GACX,kBAAC,GAAD,CAA8BM,aAAcA,EAAchB,gBAAiBA,EAAiBD,oBAAqBA,EAAqB5M,OAAQA,KAElJ,kBAACkM,EAAA,EAAD,CAAMD,MAAI,EAACsB,GAAI,GACV,kBAAC,GAAD,CAA0BW,cAAeG,EAAkBR,aAAcA,EAAc7N,OAAQA,OAO1G,0CAEI,kBAAC8O,GAAA,EAAD,QCjFVC,I,mBACJ,WAAY3P,GAAQ,IAAD,8BACjB,4CAAMA,KACDkM,MAAQ,CAAE9E,UAAMS,GACrB,EAAK+H,YAAc,EAAKA,YAAYtD,KAAjB,gBACnB,EAAKuD,cAAgB,EAAKA,cAAcvD,KAAnB,gBAJJ,E,kHAQD9H,G,4FAEVkI,IAA4C,GAAM3E,MAAK,SAAAO,GAC3D,EAAKtI,MAAM8P,cAAcxH,GACzB,EAAKtI,MAAM+P,QAAQ5H,KAAK,iB,+KAKR3D,G,4FAEZkI,IAA4C,GAAO3E,MAAK,SAAAO,GAC5D,EAAKtI,MAAM8P,cAAcxH,GACzB,EAAKtI,MAAM+P,QAAQ5H,KAAK,iB,iIAO1B,OACE,yBAAK1H,UAAU,SACb,uDACA,kBAACsB,EAAA,EAAD,CAAQL,MAAM,UAAUjB,UAAU,cAAcU,QAASsL,KAAKoD,eAA9D,yBAGA,kBAAC9N,EAAA,EAAD,CAAQL,MAAM,UAAUjB,UAAU,cAAcU,QAASsL,KAAKmD,aAA9D,4B,GAnCgB1P,IAAMiN,YA2Cf6C,eAAWL,I,iDCoBTM,OArDjB,SAAkCjQ,GAC9B,OACE,kBAAC8N,GAAA,EAAD,KACQ,kBAACC,GAAA,EAAD,CACAC,WAAY,kBAAC,KAAD,MACZC,gBAAc,kBACd/L,GAAG,kBAEH,kBAACT,EAAA,EAAD,CAAYjB,QAAQ,aAAaR,EAAM4M,QAAQhD,OAA/C,eAEA,kBAACsE,GAAA,EAAD,KACA,kBAACpB,EAAA,EAAD,CAAMG,WAAS,EAACC,QAAS,GACrB,kBAACJ,EAAA,EAAD,CAAMD,MAAI,EAACsB,GAAI,GAAIC,GAAI,GACnB,6BACI,kBAACC,GAAA,EAAD,CAAMC,MAAM,QAEVtO,EAAM4M,QAAQ1J,KAAK,SAAAtC,GACjB,OACE,8BACE,kBAAC2M,GAAA,EAAD,KAEE,kBAACxL,EAAA,EAAD,CACEJ,UAAWuO,IACXjO,GAAE,0BAAqBrB,EAAOsB,KAE7BtB,EAAOD,OAERX,EAAMmQ,iBACN,kBAAClP,EAAA,EAAD,CACER,UAAU,cACViB,MAAM,UACNR,aAAW,OACXS,UAAWuO,IACXjO,GAAE,sBAAiBrB,EAAOsB,KAE1B,kBAAC,KAAD,mBCFxC,SAASkO,GAAwBpQ,GACTA,EAAMqQ,eAAezG,OAE3C,OACE,6BACE,iDACA,kBAAC,GAAD,CAA0BgD,QAAS5M,EAAMqQ,kBAM/C,SAASC,GAAqBtQ,GAC5B,OACE,6BACE,8CACA,kBAAC,GAAD,CAA0B4M,QAAS5M,EAAMuQ,eAK/C,SAASC,GAAsBxQ,GAC7B,OACE,6BACE,mDACA,kBAAC,GAAD,CAA0B4M,QAAS5M,EAAMyQ,gBAK/C,SAASC,GAAwB1Q,GAC/B,OACE,6BACE,iDACA,kBAAC,GAAD,CAA0B4M,QAAS5M,EAAM2Q,eAAgBR,iBAAiB,KA2FjES,OApFf,SAAmB5Q,GAAQ,IAAD,EAEAG,qBAFA,mBAEjBiH,EAFiB,KAEXyJ,EAFW,KASxB,GALA3Q,IAAMuP,WAAU,WACdoB,EAAQ7Q,EAAMoH,QACb,CAACpH,IAGAoH,EAAM,CACR,IAAM0J,EAAsB,GACxBC,GAAa,EAGjB,GAAI3J,EAAKiJ,gBAAkBjJ,EAAKiJ,eAAezG,OAAS,EAAG,CACzD,IAAMlG,EAAU,kBAAC0M,GAAD,CAAyBC,eAAgBjJ,EAAKiJ,iBAC9DS,EAAoB3I,KAAKzE,GACzBqN,GAAa,EAGf,GAAI3J,EAAKmJ,aAAenJ,EAAK4J,WAAWpH,OAAS,EAAG,CAClD,IAAMlG,EAAU,kBAAC4M,GAAD,CAAsBC,YAAanJ,EAAKmJ,cACxDO,EAAoB3I,KAAKzE,GACzBqN,GAAa,EAIf,GAAI3J,EAAK4C,kBAAoB5C,EAAK4C,iBAAiBJ,OAAS,EAAG,CAC7D,IAAMlG,EAAU,kBAAC8M,GAAD,CAAuBC,aAAcrJ,EAAK4C,mBAC1D8G,EAAoB3I,KAAKzE,GACzBqN,GAAa,EAIf,GAAI3J,EAAKuJ,gBAAkBvJ,EAAKuJ,eAAe/G,OAAS,EAAG,CACzD,IAAMlG,EAAU,kBAACgN,GAAD,CAAyBC,eAAgBvJ,EAAKuJ,iBAC9DG,EAAoB3I,KAAKzE,GACzBqN,GAAa,EAGf,OAAIA,EAEA,yBAAKtQ,UAAU,aACb,kBAACwQ,GAAA,EAAD,MACA,kBAACxP,EAAA,EAAD,CAAYhB,UAAU,SAASD,QAAQ,KAAKmB,UAAU,MAAtD,cAGA,kBAACuP,GAAA,EAAD,CAAW5S,SAAS,MAClB,kBAACoQ,GAAA,EAAD,CAAOjO,UAAU,SAEbqQ,EAAoB5N,KAAI,SAAAQ,GAAO,OAAIA,QAQ3C,yBAAKjD,UAAU,aACb,kBAACwQ,GAAA,EAAD,MACA,kBAACxP,EAAA,EAAD,CAAYhB,UAAU,SAASD,QAAQ,KAAKmB,UAAU,MAAtD,cAGA,kBAACuP,GAAA,EAAD,CAAW5S,SAAS,MAClB,kBAACoQ,GAAA,EAAD,CAAOjO,UAAU,SACf,wEASV,OACE,yCAEE,kBAACiP,GAAA,EAAD,Q,qEC7HSyB,OAjCjB,SAAoBnR,GAChB,OACE,6BACE,kBAACoR,GAAA,EAAD,CAAQxN,KAAM5D,EAAMqR,OAAQvN,QAAS9D,EAAMsR,YAAaC,kBAAgB,qBACtE,kBAACC,GAAA,EAAD,CAAatP,GAAG,qBAAqBlC,EAAMyR,OAC3C,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,4CACuC3R,EAAMyR,OAE7C,kBAACrP,EAAA,EAAD,CACEwP,WAAS,EACTC,OAAO,QACP3P,GAAG,OACHY,MAAO9C,EAAMyR,MACbpP,MAAOrC,EAAMqC,MACbE,SAAUvC,EAAMuC,SAChBC,KAAK,QACLsP,WAAS,KAGb,kBAACC,GAAA,EAAD,KACE,kBAAChQ,EAAA,EAAD,CAAQZ,QAASnB,EAAMsR,YAAa5P,MAAM,aAA1C,UAGA,kBAACK,EAAA,EAAD,CAAQZ,QAASnB,EAAMgS,aAActQ,MAAM,aAA3C,cC1BNuQ,GAAsB,CACxB,YAAe,eACf,MAAS,gBACT,SAAY,YA6BDC,OA1Bf,SAA4BlS,GACxB,OACE,6BACE,kBAACyB,EAAA,EAAD,CAAY0Q,MAAM,SAAS3R,QAAQ,KAAKmB,UAAU,MAChD,gCAAS3B,EAAMoS,eAEjB,kBAAC3Q,EAAA,EAAD,CAAY0Q,MAAM,SAAS3R,QAAQ,QAAQmB,UAAU,SACnD,8BACC3B,EAAMqC,MACL,kBAACpB,EAAA,EAAD,CAAYR,UAAU,cAAciB,MAAM,UAAUR,aAAW,QAC7D,kBAAC,KAAD,CAAUC,QAASnB,EAAMqS,gBAI/B,kBAAC,GAAD,CACEhB,OAAQrR,EAAMsS,aACdhB,YAAatR,EAAMsR,YACnBU,aAAchS,EAAMgS,aACpBP,MAAOQ,GAAoBjS,EAAMuS,YACjClQ,MAAOrC,EAAMqC,MACbE,SAAUvC,EAAMuC,aC4IXyN,oBA9Jf,SAAqBhQ,GAAQ,IAAD,EAGYG,mBAAS,MAHrB,mBAGnBY,EAHmB,KAGNyR,EAHM,OAIiBrS,mBAAS,MAJ1B,mBAInBsS,EAJmB,KAIHC,EAJG,OAKAvS,qBALA,gCAMoCA,oBAAS,IAN7C,mBAMnBwS,EANmB,KAMMC,EANN,OAOgBzS,mBAAS,MAPzB,mBAOnB0S,EAPmB,KAOJC,EAPI,OAQsB3S,mBAAS,MAR/B,mBAQnB4S,EARmB,KAQDC,EARC,OASwC7S,oBAAS,GATjD,mBASnB8S,EATmB,KASQC,EATR,iDAuE1B,sBAAAvM,EAAA,sEACQ+F,KAA0B3E,MAAK,SAACoL,GAChCA,IACFnT,EAAM+P,QAAQ5H,KAAK,KACnBnI,EAAMyG,gBAAWoB,OAJvB,4CAvE0B,kEAiF1B,sBAAAlB,EAAA,sEACQ+F,KAA6B3E,MAAK,SAACoL,GACnCA,IACFnT,EAAM+P,QAAQ5H,KAAK,KACnBnI,EAAMyG,gBAAWoB,OAJvB,4CAjF0B,sBAgG1B,OALI7H,EAAMoH,MAAwB,OAAhBrG,GAA0C,OAAlB8R,IACxCL,EAAexS,EAAMoH,KAAKrG,aAC1B+R,EAAiB9S,EAAMoH,KAAKgM,YAG1BpT,EAAMoH,KAEN,yBAAK3G,UAAU,eACb,kBAACwQ,GAAA,EAAD,MACA,kBAACxP,EAAA,EAAD,CAAYhB,UAAU,SAASD,QAAQ,KAAKmB,UAAU,MAAtD,gBAGA,kBAACuP,GAAA,EAAD,CAAWzQ,UAAU,6BAA6BnC,SAAS,MACzD,kBAACoQ,GAAA,EAAD,CAAOjO,UAAU,SAEf,kBAAC,GAAD,CACE2R,aAAa,iBACb/P,MAAOwQ,EACPvB,YAjEZ,WACEwB,EAAiBC,GACjBG,GAA6B,IAgEnBlB,aApDZ,WACEtF,GAA2B1M,EAAMoH,KAAKlF,GAAI,CACxCkR,UAAWP,IACV9K,MAAK,SAAAM,GACN6K,GAA6B,GAC7BJ,EAAiBD,GACjB7S,EAAMyG,WAAWzG,EAAMoH,KAAKlF,OAE3BqG,OAAM,SAAA8K,GACL5K,QAAQC,IAAI2K,OA4CNf,aAAcW,EACdZ,WA/DZ,WACEW,EAAoBH,GACpBK,GAA6B,IA8DnB3Q,SA3DZ,SAA+BiK,GAC7BsG,EAAiBtG,EAAE/H,OAAOpC,YA+DtB,kBAACiR,GAAA,EAAD,MAGA,kBAACpC,GAAA,EAAD,CAAW5S,SAAS,MAClB,kBAACoQ,GAAA,EAAD,CAAOjO,UAAU,SAEf,kBAAC,GAAD,CACE2R,aAAa,eACb/P,MAAOtB,EACPuQ,YAlHZ,WACEkB,EAAeC,GACfG,GAA2B,IAiHjBZ,aA9GZ,WACEtF,GAA2B1M,EAAMoH,KAAKlF,GAAI,CACxCnB,gBACCgH,MAAK,SAAAM,GACNuK,GAA2B,GAC3BF,EAAiB3R,GACjBf,EAAMyG,WAAWzG,EAAMoH,KAAKlF,OAG3BqG,OAAM,SAAA8K,GACL5K,QAAQC,IAAI2K,OAqGNf,aAAcK,EACdN,WAlGZ,WACEK,EAAiB3R,GACjB6R,GAA2B,IAiGjBrQ,SA9FZ,SAA6BiK,GAC3BgG,EAAehG,EAAE/H,OAAOpC,UA+FhB,kBAACiR,GAAA,EAAD,MACA,kBAAC,GAAD,CAAoBlB,aAAa,QAAQ/P,MAAOrC,EAAMoH,KAAKF,QAC3D,kBAACoM,GAAA,EAAD,MACA,kBAAC,GAAD,CAAoBlB,aAAa,WAAW/P,MA1IlC,YA2IV,kBAACN,EAAA,EAAD,CAAQL,MAAM,UAAUjB,UAAU,cAAcU,QAzIhC,4CAyIhB,YAGA,kBAACY,EAAA,EAAD,CAAQL,MAAM,UAAUjB,UAAU,cAAcU,QA5IhC,4CA4IhB,qBASN,yCAEE,kBAACuO,GAAA,EAAD,U,OC5FS6D,OAjEjB,SAA4BvT,GAAO,IAAD,EACMG,qBADN,mBACzByB,EADyB,KACZ4R,EADY,OAENrT,qBAFM,mBAEzBQ,EAFyB,KAElB8S,EAFkB,KAyB9B,OACE,6BACE,kBAACrC,GAAA,EAAD,CAAQxN,KAAM5D,EAAMqR,OAAQvN,QAAS9D,EAAMsR,YAAaC,kBAAgB,qBACtE,kBAACC,GAAA,EAAD,CAAatP,GAAG,qBAAhB,uBACA,kBAACwP,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,8EAGA,kBAACvP,EAAA,EAAD,CACEwP,WAAS,EACTC,OAAO,QACP3P,GAAG,QACHY,MAAM,eACNP,SAjCZ,SAA6BiK,GAC3BiH,EAASjH,EAAE/H,OAAOpC,QAiCRG,KAAK,OACLsP,WAAS,IAEV,kBAAC1P,EAAA,EAAD,CACCwP,WAAS,EACTC,OAAO,QACP3P,GAAG,cACHY,MAAM,qBACNP,SAtCZ,SAAmCiK,GACjCgH,EAAehH,EAAE/H,OAAOpC,QAsCdG,KAAK,OACLsP,WAAS,KAGb,kBAACC,GAAA,EAAD,KACE,kBAAChQ,EAAA,EAAD,CAAQZ,QAASnB,EAAMsR,YAAa5P,MAAM,aAA1C,UAGA,kBAACK,EAAA,EAAD,CAAQZ,QA1ClB,WAEI,IAAMuS,EAAgB,CAClB/S,QACAiB,eAGJ5B,EAAMgS,aAAa0B,IAmCkBhS,MAAM,aAArC,cCjDZ,SAASgP,GAAwB1Q,GAE/B,OACE,yBAAKS,UAAU,mBACb,wDACA,kBAAC,GAAD,CAA0BmM,QAAS5M,EAAM2Q,eAAgBR,iBAAiB,KAiFjEwD,OA5Ef,SAAsB3T,GAAQ,IAAD,EACqCG,oBAAS,GAD9C,mBACpByT,EADoB,KACMC,EADN,KAErB9D,EAAU+D,cAFW,4CAc3B,WAA4B7K,GAA5B,eAAAtC,EAAA,6DACEsC,EAAWnI,MAAQd,EAAMoH,KAAKlF,GAExBmH,EAAU,CACdnH,GAAI,EACJoH,QAAS,2DACTyK,aAAa,GAAD,OAAK9K,EAAWtI,MAAhB,eAGdsI,EAAWO,SAAW,GACtBP,EAAWI,QAAUA,EAVvB,SAayBqD,GAA6B1M,EAAMoH,KAAM6B,GAblE,qBAcE4K,GAA4B,GAd9B,UAeQ7T,EAAMgU,gBAfd,yBAgBQhU,EAAMyG,WAAWzG,EAAMoH,KAAKlF,IAhBpC,QAkBE6N,EAAQ5H,KAAR,sBAA4BnI,EAAMoH,KAAKuC,mBAAmB3J,EAAMoH,KAAKuC,mBAAmBC,OAAS,GAAG1H,KAlBtG,6CAd2B,sBAmC3B,IACI+R,EAAwB,KAQ5B,OANEA,EADEjU,EAAMoH,MAAQpH,EAAMoH,KAAKuJ,gBAAkB3Q,EAAMoH,KAAKuJ,eAAe/G,OAAS,EACxD,kBAAC,GAAD,CAAyB+G,eAAgB3Q,EAAMoH,KAAKuJ,iBAEpD,gEAKxB,yBAAKlQ,UAAU,QACb,kBAACwQ,GAAA,EAAD,MACA,kBAACxP,EAAA,EAAD,CAAYhB,UAAU,SAASD,QAAQ,KAAKmB,UAAU,MAAtD,mBAGA,kBAACuP,GAAA,EAAD,CAAWzQ,UAAU,6BAA6BnC,SAAS,MACzD,kBAACoQ,GAAA,EAAD,CAAOjO,UAAU,SAEbwT,EAEF,8BACE,kBAAClS,EAAA,EAAD,CAAQvB,QAAQ,YAAYkB,MAAM,YAAYP,QA/CxD,WACE0S,GAA4B,KA8CpB,wBAMN,kBAACP,GAAA,EAAD,MAEA,kBAAC,GAAD,CACEjC,OAAQuC,EACRtC,YA7DN,WACEuC,GAA4B,IA6DxB7B,aAnEqB,4CAoErB5K,KAAMpH,EAAMoH,S,OCbL8M,OAlDf,SAAgClU,GAO5B,IAAIqN,EAAc,GAgBlB,OAfIrN,EAAMqJ,SAAWrJ,EAAMqJ,QAAQC,SAAWtJ,EAAMqJ,QAAQC,QAAQM,OAAS,IACzEyD,EAAcrN,EAAMqJ,QAAQC,QAAQpG,KAAK,SAAAoK,GAAM,OAC7C,kBAACC,GAAA,EAAD,CAAUpM,QAAS,kBARzB,SAAyBmM,GACvBtN,EAAMwN,oBAAoBxN,EAAMqJ,SAChCrJ,EAAMyN,gBAAgBH,GAMOI,CAAgBJ,IAASpL,GAAIoL,EAAOpL,GAAIyL,QAAM,GACnE,kBAACC,GAAA,EAAD,CAAcC,QAASP,EAAO3M,aAapC,kBAACmN,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CACAC,WAAY,kBAAC,KAAD,MACZC,gBAAc,kBACd/L,GAAG,kBAEH,kBAACT,EAAA,EAAD,CAAYjB,QAAQ,aAAaR,EAAMqJ,QAAQ1I,QAE/C,kBAACuN,GAAA,EAAD,KACA,kBAACpB,EAAA,EAAD,CAAMG,WAAS,EAACC,QAAS,GACrB,kBAACJ,EAAA,EAAD,CAAMD,MAAI,EAACsB,GAAI,GAAIC,GAAI,GACnB,6BACI,kBAACC,GAAA,EAAD,CAAMC,MAAM,QACXjB,EACD,kBAACtL,EAAA,EAAD,CAAQvB,QAAQ,YAAYW,QArB9C,WACEnB,EAAMwN,oBAAoBxN,EAAMqJ,SAChCrJ,EAAMmU,iBAAgB,IAmBgDzS,MAAM,YAAYjB,UAAU,mBAAlF,0BCLT2T,OA1Bf,SAAkCpU,GAEhC,SAASwN,EAAoBnE,GAC3BrJ,EAAMwN,oBAAoBnE,GAI1B,IAAImF,EAAyB,GAO7B,OANIxO,EAAMY,QAAUZ,EAAMY,OAAO4I,UAAYxJ,EAAMY,OAAO4I,SAASI,OAAS,IACxE4E,EAAyBxO,EAAMY,OAAO4I,SAAStG,KAAK,SAAAmG,GAAO,OACzD,kBAAC,GAAD,CAAyBoE,gBAAiBzN,EAAMyN,gBAAiBgB,aAAczO,EAAMyO,aAAc0F,gBAAiBnU,EAAMmU,gBAAiB3G,oBAAqBA,EAAqBnE,QAASA,QAKhM,kBAACqF,GAAA,EAAD,CAAOjO,UAAU,SAEZ+N,EACD,kBAACzM,EAAA,EAAD,CAAQvB,QAAQ,YAAYW,QAASnB,EAAMqU,wBAAyB3S,MAAM,aAA1E,qBC1CG4S,OAXf,SAA0BtU,GACtB,OACI,6BACI,4BAAKA,EAAMsN,OAAO3M,OAClB,qCAAWX,EAAMsN,OAAOsB,OACxB,iDACA,2BAAI5O,EAAMsN,OAAO1L,eCad2S,OAlBf,SAAwBvU,GACpB,OACI,kBAAC0O,GAAA,EAAD,CAAOjO,UAAU,SACb,4BAAKT,EAAMY,OAAOD,OAEdX,EAAM8O,cACN,wCAAc9O,EAAM8O,cAAcnO,OAClC,oDAGFX,EAAMyO,aACJ,kBAAC,GAAD,CAAkBnB,OAAQtN,EAAMyO,eACjC,oDCyDE+F,OAhEjB,SAA6BxU,GAAO,IAAD,EACKG,qBADL,mBAC1ByB,EAD0B,KACb4R,EADa,OAEPrT,qBAFO,mBAE1BQ,EAF0B,KAEnB8S,EAFmB,KAwB/B,OACE,6BACE,kBAACrC,GAAA,EAAD,CAAQxN,KAAM5D,EAAMqR,OAAQvN,QAAS9D,EAAMsR,YAAaC,kBAAgB,qBACtE,kBAACC,GAAA,EAAD,CAAatP,GAAG,qBAAhB,sBACA,kBAACwP,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,sFAGA,kBAACvP,EAAA,EAAD,CACEwP,WAAS,EACTC,OAAO,QACP3P,GAAG,QACHY,MAAM,gBACNP,SAhCZ,SAA6BiK,GAC3BiH,EAASjH,EAAE/H,OAAOpC,QAgCRG,KAAK,OACLsP,WAAS,IAEV,kBAAC1P,EAAA,EAAD,CACCwP,WAAS,EACTC,OAAO,QACP3P,GAAG,cACHY,MAAM,sBACNP,SArCZ,SAAmCiK,GACjCgH,EAAehH,EAAE/H,OAAOpC,QAqCdG,KAAK,OACLsP,WAAS,KAGb,kBAACC,GAAA,EAAD,KACE,kBAAChQ,EAAA,EAAD,CAAQZ,QAASnB,EAAMsR,YAAa5P,MAAM,aAA1C,UAGA,kBAACK,EAAA,EAAD,CAAQZ,QAzClB,SAAsBqL,GAClB,IAAM/B,EAAc,CAChB9J,QACAiB,eAGJ5B,EAAMgS,aAAavH,IAmCkB/I,MAAM,aAArC,cC2BK+S,OAlFjB,SAA4BzU,GAAO,IAAD,EACMG,qBADN,mBACzByB,EADyB,KACZ4R,EADY,OAENrT,qBAFM,mBAEzBQ,EAFyB,KAElB8S,EAFkB,OAGNtT,qBAHM,mBAGzByO,EAHyB,KAGlB8F,EAHkB,KAiC9B,OACE,6BACE,kBAACtD,GAAA,EAAD,CAAQxN,KAAM5D,EAAMqR,OAAQvN,QAAS9D,EAAMsR,YAAaC,kBAAgB,qBACtE,kBAACC,GAAA,EAAD,CAAatP,GAAG,qBAAhB,qBACA,kBAACwP,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,wCAGA,kBAACvP,EAAA,EAAD,CACEwP,WAAS,EACTC,OAAO,QACP3P,GAAG,QACHY,MAAM,eACNP,SAvCZ,SAA6BiK,GAC3BiH,EAASjH,EAAE/H,OAAOpC,QAuCRG,KAAK,OACLsP,WAAS,IAEV,kBAAC1P,EAAA,EAAD,CACCwP,WAAS,EACTC,OAAO,QACP3P,GAAG,cACHY,MAAM,qBACNP,SA5CZ,SAAmCiK,GACjCgH,EAAehH,EAAE/H,OAAOpC,QA4CdG,KAAK,OACLsP,WAAS,IAEX,kBAAC1P,EAAA,EAAD,CACEwP,WAAS,EACTC,OAAO,QACP3P,GAAG,QACHY,MAAM,YACNP,SAhDZ,SAA0BiK,GACtBkI,EAASlI,EAAE/H,OAAOpC,QAgDVG,KAAK,OACLsP,WAAS,KAGb,kBAACC,GAAA,EAAD,KACE,kBAAChQ,EAAA,EAAD,CAAQZ,QAASnB,EAAMsR,YAAa5P,MAAM,aAA1C,UAGA,kBAACK,EAAA,EAAD,CAAQZ,QAnDlB,SAAsBqL,GAClB/D,QAAQC,IAAI,yBACZ,IAAMgC,EAAa,CACf/J,QACAiB,cACAgN,SAEJ5O,EAAMwK,aAAaE,IA4CkBhJ,MAAM,aAArC,cCiDKiT,OA1GjB,SAAoB3U,GAAO,IAEjBkC,EAAOgN,cAAPhN,GAFiB,EAIK/B,qBAJL,mBAIhBS,EAJgB,KAIRoO,EAJQ,OAKG7O,qBALH,gCAM2CA,oBAAS,IANpD,mBAMhByU,EANgB,KAMWC,EANX,OAOyC1U,oBAAS,GAPlD,mBAOhB2U,EAPgB,KAOUC,EAPV,OAQyB5U,qBARzB,mBAQhB8O,EARgB,KAQEzB,EARF,OASiBrN,qBATjB,mBAShBsO,EATgB,KASFhB,EATE,iDA6BvB,WAA4B/C,GAA5B,SAAA/D,EAAA,6DACIoO,GAA4B,GADhC,SAEUrI,GAA6B9L,EAAQqO,EAAkBvE,GAFjE,OAGIrE,EAAcnE,GAHlB,4CA7BuB,kEAoCvB,WAA6BuI,GAA7B,SAAA9D,EAAA,sEACU+F,GAA8B9L,EAAQ6J,GADhD,OAEIpE,EAAcnE,GAFlB,4CApCuB,+BA0CRiN,EA1CQ,8EA0CvB,WAA8B9F,GAA9B,SAAA1C,EAAA,2DACQ0C,EAAQkB,YAAclB,EAAQkB,WAAWX,OAAS,GAD1D,yCAEewF,QAAQC,IACXhG,EAAQkB,WAAWrH,IAAnB,uCAAwB,WAAMkG,GAAN,eAAAzC,EAAA,sEACC+F,GAAiCtD,GADlC,cACdkE,EADc,yBAEbA,GAFa,2CAAxB,wDAIEvF,MAAK,SAAAuH,GAEH,OADAjG,EAAQC,QAAUgG,EACXjG,MATvB,gCAaa+F,QAAQG,QAAQlG,IAb7B,4CA1CuB,+BA2DRmG,EA3DQ,8EA2DvB,WAA+BhG,GAA/B,SAAA7C,EAAA,+EACWyI,QAAQC,IAAI7F,EAAStG,KAAK,SAAAmG,GAAO,OAAI8F,EAAe9F,QAD/D,4CA3DuB,+BA+DRhD,EA/DQ,8EA+DvB,WAA6BnE,GAA7B,eAAAyE,EAAA,sEACyB+F,GAA6CxK,GADtE,cACUtB,EADV,gBAE4B4O,EAAgB5O,EAAO4I,UAFnD,OAEI5I,EAAO4I,SAFX,OAGIwF,EAAUpO,GAHd,4CA/DuB,sBA2EvB,OANA6O,qBAAU,WACFvN,GACDmE,EAAcnE,KAElB,CAACA,IAEAtB,EAEI,yBAAKH,UAAU,eACb,kBAACgB,EAAA,EAAD,CAAYhB,UAAU,SAASD,QAAQ,KAAKmB,UAAU,MAAtD,eAGA,kBAACmL,EAAA,EAAD,CAAMG,WAAS,EAACC,QAAS,GACrB,kBAACJ,EAAA,EAAD,CAAMD,MAAI,EAACsB,GAAI,GACX,kBAAC,GAAD,CAA0BM,aAAcA,EAAchB,gBAAiBA,EAAiB0G,gBA3D1G,WACIY,GAA4B,IA0DmHvH,oBAAqBA,EAAqB5M,OAAQA,EAAQyT,wBA/D7M,WACIQ,GAA6B,OAgEnB,kBAAC/H,EAAA,EAAD,CAAMD,MAAI,EAACsB,GAAI,GACV,kBAAC,GAAD,CAAgBW,cAAeG,EAAkBR,aAAcA,EAAc7N,OAAQA,MAG9F,kBAAC,GAAD,CAAsByQ,OAAQuD,EAA4B5C,aAzF7C,4CAyF6EV,YA7EpG,WACIuD,GAA6B,MA6EvB,kBAAC,GAAD,CAAsBxD,OAAQyD,EAA4BtK,aA1F7C,4CA0F6E8G,YA1EpG,WACIyD,GAA4B,OA+ExB,0CAEI,kBAACrF,GAAA,EAAD,Q,oBCvGVtR,GAAQ4W,aAAe,CAC3BC,QAAS,CACPpH,QAAS,CACPqH,MAAO,UACPC,KAAM,UACNC,KAAM,WAERC,UAAW,CACTH,MAAO,UACPC,KAAM,UACNC,KAAM,YAGVE,WAAY,CACTC,iBAAiB,GAEpBC,UAAW,CACTC,UAAW,CACTpX,KAAM,CACJqX,cAAe,YAuKRC,G,YAhKb,aAAe,IAAD,8BACZ,+CACKzJ,MAAQ,CACXU,QAAS,GACThF,MAAO,GACPN,iBAAaO,GAEf,EAAK+N,aAAe,EAAKA,aAAatJ,KAAlB,gBACpB,EAAKuJ,WAAa,EAAKA,WAAWvJ,KAAhB,gBAClB,EAAKwJ,OAAS,EAAKA,OAAOxJ,KAAZ,gBACd,EAAK7F,WAAa,EAAKA,WAAW6F,KAAhB,gBAClB,EAAKuE,QAAU,EAAKA,QAAQvE,KAAb,gBACf,EAAKyJ,cAAgB,EAAKA,cAAczJ,KAAnB,gBACrB,EAAKsJ,eAAe7N,MAAK,WACvB,EAAKgO,mBAdK,E,iHAkBG9P,G,+EACVA,E,uBACHwG,KAAKrB,SAAS,CAAE9D,iBAAaO,I,0CAGzB6E,GAA4BzG,GAC/B8B,MAAK,SAAAM,GACJ,IAAMjB,EAAOiB,EAAOH,OAEpB,GAAId,EAAKuC,oBAAsBvC,EAAKuC,mBAAmBC,OAAS,EAAG,CAE9CxC,EAAKuC,mBACrBzG,KAAI,SAAA2G,GAAS,OAAI,EAAKqC,MAAMU,QAAQT,MAAK,SAAAvL,GAAM,OAAIA,EAAOsB,KAAO2H,EAAU3H,SAE9EkF,EAAKuJ,eAAiBvJ,EAAKuC,mBACxBzG,KAAI,SAAA2G,GAAS,OAAI,EAAKqC,MAAMU,QAAQT,MAAK,SAAAvL,GAAM,OAAIA,EAAOsB,KAAO2H,EAAU3H,SAG5EkF,EAAK4O,iBAAmB5O,EAAK4O,gBAAgBpM,OAAS,IACxDxC,EAAKmJ,YAAcnJ,EAAK4O,gBACrB9S,KAAI,SAAA2G,GAAS,OAAI,EAAKqC,MAAMU,QAAQT,MAAK,SAAAvL,GAAM,OAAIA,EAAOsB,KAAO2H,EAAU3H,UAG5EkF,EAAK6C,sBAAwB7C,EAAK6C,qBAAqBL,OAAS,IAClExC,EAAK4C,iBAAmB5C,EAAK6C,qBAC1B/G,KAAI,SAAA2G,GAAS,OAAI,EAAKqC,MAAMU,QAAQT,MAAK,SAAAvL,GAAM,OAAIA,EAAOsB,KAAO2H,EAAU3H,UAGhF,EAAKkJ,SAAS,CAAE9D,YAAaF,O,6IAMjC,IAAIA,EAAOsF,KACX,GAAItF,EACFqF,KAAKhG,WAAWW,EAAKJ,UAChB,GAAI4B,SAASC,OAAOoN,MAAM,KAAKC,MAAK,SAACrJ,GAAD,OAAUA,EAAKsJ,OAAOC,WAAW,cAAa,CACvF,IAAIC,EAAczN,SAASC,OAAOyN,QAAQ,gDAAiD,MAC3F7J,KAAKhG,WAAW4P,QAEhB5J,KAAKhG,gBAAWoB,K,8BAKZT,GACNqB,QAAQC,IAAI,QAAStB,GACrBqF,KAAKhG,WAAWW,EAAKlF,IACrB0G,SAASC,OAAT,iBAA4BzB,EAAKlF,M,mKAI7B0K,EAAU,G,SACRF,KAAgC3E,MAAK,SAACC,GAC1CA,EAAaC,SAAQ,SAAC9B,GACpB,IAAMvF,EAASuF,EAAI+B,OACb5B,EAAWH,EAAIjE,GACrBtB,EAAOE,MAAMsF,MAAM2B,MAAK,SAAAX,GACtBxG,EAAOE,MAAQsG,EAAKc,UAKtBtH,EAAOsB,GAAKoE,EACZsG,EAAQzE,KAAKvH,GACb,EAAKwK,SAAS,CAAEwB,QAASA,U,kQAMzBhF,EAAQ,G,SACN8E,KACH3E,MAAK,SAACC,GACLA,EAAaC,SAAQ,SAAC9B,GACpB,IAAMiB,EAAOjB,EAAI+B,OACjBd,EAAKlF,GAAKiE,EAAIjE,GACd0F,EAAMO,KAAKf,GACX,EAAKgE,SAAS,CACZxD,gB,gIAMA,IAAD,EAMP,OAJI6E,KAAKP,MAAM5E,aACbmB,QAAQC,IAAI,cAIZ,kBAAC,KAAD,CAAkBtK,MAAOA,IACvB,kBAAC,IAAD,KACE,6BACE,yBAAKmY,QAAS9J,KAAKP,MAAM5E,aACvB,kBAACrC,EAAA,EAAD,CAAQvG,SAAS,UACf,kBAACwG,EAAA,EAAD,KACE,kBAACnD,EAAA,EAAD,CAAQvB,QAAQ,YAAYkB,MAAM,YAAYjB,UAAU,mBAAmBkB,UAAWuO,IAAYjO,GAAG,cAArG,cACA,kBAACF,EAAA,EAAD,CAAQvB,QAAQ,YAAYkB,MAAM,YAAYjB,UAAU,mBAAmBkB,UAAWuO,IAAYjO,GAAG,kBAArG,eACA,kBAACF,EAAA,EAAD,CAAQvB,QAAQ,WAAWkB,MAAM,YAAYjB,UAAU,yBAAyBkB,UAAWuO,IAAYjO,GAAG,iBAA1G,mBACA,kBAAChB,EAAA,EAAD,CAAYR,UAAU,2BAA2BkB,UAAWuO,IAAYjO,GAAG,WAAWP,MAAM,UAAUR,aAAW,QAC/G,kBAAC,IAAD,OAEF,wCAAOuL,KAAKzM,MAAMoH,YAAlB,aAAO,EAAiB/C,SAO9B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOmS,OAAK,EAACC,KAAK,KAChB,kBAAC,GAAD,CAAO3G,cAAerD,KAAKoE,WAE7B,kBAAC,IAAD,CAAO4F,KAAK,kBACV,kBAAC,GAAD,CAAe7J,QAASH,KAAKP,MAAMU,QAASxF,KAAMqF,KAAKP,MAAM5E,YAAab,WAAYgG,KAAKhG,cAE7F,kBAAC,IAAD,CAAOgQ,KAAK,uBACV,kBAAC,GAAD,CAAgBC,QAAShK,KAE3B,kBAAC,IAAD,CAAO+J,KAAK,cACV,kBAAC,GAAD,CAAWrP,KAAMqF,KAAKP,MAAM5E,eAE9B,kBAAC,IAAD,CAAOmP,KAAK,YACV,kBAAC,GAAD,CAAarP,KAAMqF,KAAKP,MAAM5E,YAAab,WAAYgG,KAAKhG,cAE9D,kBAAC,IAAD,CAAOgQ,KAAK,iBACV,kBAAC,GAAD,CAAcrP,KAAMqF,KAAKP,MAAM5E,YAAab,WAAYgG,KAAKhG,WAAYuN,cAAevH,KAAKmJ,gBAE/F,kBAAC,IAAD,CAAOa,KAAK,mBACV,kBAAC,GAAD,CAAYrP,KAAMqF,KAAKP,MAAM5E,uB,GAvJ3BpH,IAAMiN,WClCJtJ,QACW,cAA7B8S,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASjB,OAAO,kBAAC,GAAD,MAASlN,SAASoO,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBpP,MAAK,SAAAqP,GACJA,EAAaC,gBAEd9O,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAM8O,c","file":"static/js/main.635d43ea.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { Button } from '@material-ui/core';\nimport {Link} from 'react-router-dom'\nimport FavoriteBorderOutlinedIcon from '@material-ui/icons/FavoriteBorderOutlined';\n\n\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: 345,\n    minWidth: 345,\n    maxHeight: 400,\n    minHeight: 400,\n    position: 'relative',\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n  actionsRow: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0\n  }, \n  content: {\n    paddingBottom: '1rem'\n  }\n}));\n\nexport default function CourseCard(props) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n  const [isFavorited, setIsFavorited] = React.useState(false)\n\n\n  if ( props.isCourseAFavorite != isFavorited){\n    setIsFavorited(props.isCourseAFavorite);\n  }\n\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  const favoriteButtonClicked = () => {\n    if (isFavorited) {\n      setIsFavorited(false);\n      props.removeFavoriteClicked(props.course);\n    } else {\n      setIsFavorited(true);\n      props.favoriteClicked(props.course);\n    }\n   \n  }\n\n  return (\n    <Card variant=\"outlined\" className={classes.root}>\n      <CardHeader\n        title={props.course.title}\n        subheader={props.course.owner.displayName}\n        action={\n          <IconButton aria-label=\"add to favorites\" onClick={favoriteButtonClicked}>\n           { isFavorited ? <FavoriteIcon /> : <FavoriteBorderOutlinedIcon />  } \n          </IconButton>\n        }\n      />\n      <CardMedia\n        className={classes.media}\n        image=\"/static/images/cards/paella.jpg\"\n        title=\"Paella dish\"\n      />\n      <CardContent className={classes.content}>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {props.course.description}\n        </Typography> \n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {props.course.owner.displayName}\n        </Typography>\n      </CardContent>\n      <CardActions className={classes.actionsRow} disableSpacing>\n        <Button \n          variant=\"contained\" \n          color=\"secondary\"\n          component={Link}\n          to={`/courseOverview/${props.course.id}`}\n          >\n            Overview\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}","import React from 'react';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport { IconButton  } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\n\nimport './SearchBar.css';\n\nfunction SearchBar(props) {\n    return(\n      <div className=\"search-bar\">\n          <TextField value={props.searchValue} onChange={props.onChange} id=\"outlined-search\" type=\"search\" variant=\"outlined\"  color=\"black\"/>\n          <IconButton className=\"menu-button\" onClick={props.onSearchClicked}>\n            <SearchIcon className=\"search-bar-icon\" />\n          </IconButton>\n      </div>\n    )\n  }\n\n  export default SearchBar\n  \n\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Radio from '@material-ui/core/Radio';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\n\nfunction CourseLibraryToolbarMenuItem(props){\n    return (\n      <FormControlLabel value={props.value} control={<Radio />} label={props.value} />\n    )\n  }\n\n  export default CourseLibraryToolbarMenuItem","import React from 'react';\n\nimport Menu from '@material-ui/core/Menu';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport CourseLibraryToolbarMenuItem from './CourseLibraryToolbarMenuItem/CourseLibraryToolbarMenuItem.component';\n\n\n\nfunction CourseLibraryToolbarMenu(props){\n\n  let menuItems = props.options.map( option => {\n    return (\n      <CourseLibraryToolbarMenuItem\n        handleClick={option.associatedClickFunction}\n        value={option.display}>\n      </CourseLibraryToolbarMenuItem>\n    )\n  })\n\n  const onChangeFunction = (event) => {\n    props.closeFunction(event.target.value)\n  }\n\n    return (\n      <Menu\n          id={props.menuId}\n          anchorEl={props.element}\n          keepMounted\n          open={Boolean(props.element)}\n          onClose={props.closeFunction}\n        >\n          <MenuItem>\n            <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">{props.menuLabel}</FormLabel>\n            <RadioGroup aria-label=\"gender\" name={props.radioGroupName} value={props.menuValue} onChange={onChangeFunction}>\n              {menuItems}\n            </RadioGroup>\n            </FormControl>\n          </MenuItem>\n      </Menu>\n    )\n  }\n\n  export default CourseLibraryToolbarMenu","import React from 'react';\n\nimport {AppBar, Toolbar, IconButton, Typography } from '@material-ui/core';\nimport {Button} from '@material-ui/core';\n\nimport SearchBar from './SearchBar/SearchBar.component';\nimport CourseLibraryToolbarMenu from './CourseLibraryToolbarMenu/CourseLibraryToolbarMenu.component'\n\n\n//<CourseLibraryMenu handleClose={this.handleClose} sortByElement={props.state.sortByElement}></CourseLibraryMenu>\n\n\nfunction CourseLibraryToolbar(props){\n\n    let menuButtons = props.menuItems.map(menuItem => {\n        return (\n            <Button\n                color=\"inherit\" \n                className=\"menu-button\"\n                onClick={menuItem.clickedFunction}\n            >\n                {menuItem.buttonText}\n            </Button>\n        )\n    })\n\n    let menus = props.menuItems.map(menuItem => {\n        return(\n            <CourseLibraryToolbarMenu\n                element={menuItem.element}\n                closeFunction = {menuItem.closeFunction}\n                options={menuItem.menuOptions}\n                menuId={menuItem.menuId}\n                menuLabel={menuItem.buttonText}\n            >\n            </CourseLibraryToolbarMenu>\n        )\n    })\n\n    return(\n        <AppBar position=\"static\" className=\"course-library-app-bar\">\n            <Toolbar>\n                {menuButtons}\n                <SearchBar searchValue={props.searchInfo.value} onChange={props.searchInfo.onChange} onSearchClicked={props.searchInfo.onClick}></SearchBar>\n            </Toolbar>\n            {menus}\n      </AppBar>\n    )\n}\n\nexport default CourseLibraryToolbar","// import * as firebase from \"firebase/app\";\n// import \"firebase/firestore\";\n// import \"firebase/auth\";\nimport firebase from 'firebase'\nimport { useRadioGroup } from '@material-ui/core';\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyA8tAHYGUiNkFHq6452W4Qr79eibVmtRZA\",\n    authDomain: \"mooc-in-a-box.firebaseapp.com\",\n    databaseURL: \"https://mooc-in-a-box.firebaseio.com\",\n    projectId: \"mooc-in-a-box\",\n    storageBucket: \"mooc-in-a-box.appspot.com\",\n    messagingSenderId: \"594314585164\",\n    appId: \"1:594314585164:web:3ae152452d1c238af100e9\",\n    measurementId: \"G-LXH34JCXZS\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\n\n\nexport const getUserById = userId => {\n    return db.collection('Users').doc(userId).get();\n}\n\n\nexport const getCourseById = courseId => {\n    return db.collection('Course')\n        .doc(courseId)\n        .get();\n};\n\nexport const getAllCourses = () => {\n    return db.collection('Course').get();\n}\n\nexport const getAllUsers = () => {\n    return db.collection('Users').get();\n}\n\nexport const updateUser = async (userId, updates) => {\n    return db.collection('Users')\n        .doc(userId)\n        .set(updates, { merge: true })\n}\n\nexport const createUser = async (userAuth) => {\n    return db.collection('Users')\n        .doc(userAuth.uid)\n        .set({\n            id: userAuth.uid,\n            name: userAuth.displayName,\n            photoURL: userAuth.photoURL,\n            email: userAuth.email,\n        },\n            { merge: true }\n        )\n}\n\nexport const getCurrentUser = () => {\n    var user = firebase.auth().currentUser;\n    if (user) {\n        return user;\n    } else {\n        return undefined;\n    }\n}\n\nexport const logUserInUser = async (isGoog) => {\n    let provider;\n    isGoog ? provider = new firebase.auth.GoogleAuthProvider() :\n        provider = new firebase.auth.FacebookAuthProvider();\n    let users = [];\n    let currentUser = undefined;\n    let authUser = undefined;\n    // Get all users so we can see if the logged in one is one of ours.\n    // TODO(jessi): store this data so we don't need to fetch it, or directly ask for the user\n    // once they log in and if no user exists create one. Sounds like work.\n    await getAllUsers()\n        .then((queryResults) => {\n            queryResults.forEach((doc) => {\n                const user = doc.data();\n                user.id = doc.id;\n                users.push(user);\n            })\n        });\n\n    return await firebase.auth().signInWithPopup(provider).then(async function (result) {\n        authUser = result.user;\n        users.forEach(u => {\n            if (u.id === authUser.uid) {\n                currentUser = u;\n            }\n        });\n        // Didn't find an existing user.\n        if (currentUser === undefined) {\n            // Create new user\n            await createUser(authUser).then(async () => {\n                // Get the new user to return\n                return getCurrentUser();\n            }).catch(error => {\n                console.log(error);\n            });\n        }\n        return currentUser;\n    }).catch(function (error) {\n        console.log(error);\n    });\n}\n\nexport const signOut = async () => {\n    return await firebase.auth().signOut().then(function () {\n        document.cookie = 'userid=; expires=Thu, 01 Jan 1970 00:00:01 GMT;';\n        return true;\n    }).catch(function (error) {\n        console.log(error);\n        return false;\n    });\n}\n\nexport const deleteUser = async () => {\n    var user = firebase.auth().currentUser;\n\n    return await user.delete().then(function () {\n        document.cookie = 'userid=; expires=Thu, 01 Jan 1970 00:00:01 GMT;';\n        return true;\n    }).catch(function (error) {\n        console.log(error);\n        return false;\n    });\n}\n\n\nexport const createCourse = async (user, courseInfo) => {\n    var storage = firebase.storage();\n    const userDocRef = db.doc(`Users/${user.id}`)\n    const lessonRef = db.doc(courseInfo.chapter.lessons);\n    courseInfo.chapter.lessons = lessonRef;\n    return await db.collection('Course').add({\n        owner: userDocRef,\n        title: courseInfo.title,\n        description: courseInfo.description,\n        chapters: courseInfo.chapters\n    })\n        .then(async courseDoc => {\n            let usersCreatedCourses;\n            if (user.createdCoursesRefs && user.createdCoursesRefs.length > 0) {\n                usersCreatedCourses = user.createdCoursesRefs;\n            } else {\n                usersCreatedCourses = []\n            }\n\n            const courseRef = db.doc(`Course/${courseDoc.id}`)\n            usersCreatedCourses.push(courseRef);\n            const updateObject = {\n                createdCoursesRefs: usersCreatedCourses\n            }\n\n            return await updateUser(user.id, updateObject);\n        })\n}\n\nexport const favoriteCourse = async (user, courseInfo) => {\n    const courseRef = db.doc(`Course/${courseInfo.id}`)\n    let favoritedCourses;\n\n    if (user.favoritedCoursesRefs && user.favoritedCoursesRefs.length > 0 ){\n        favoritedCourses = user.favoritedCoursesRefs;\n    } else {\n        favoritedCourses = []\n    }\n\n    favoritedCourses.push(courseRef);\n\n    const updateObject = {\n        favoritedCoursesRefs: favoritedCourses\n    }\n\n    return await updateUser(user.id, updateObject);\n}\n\nexport const removeFavoriteCourse = async (user, courseInfo) => {\n    const courseRef = db.doc(`Course/${courseInfo.id}`)\n    const favoritedCourses = user.favoritedCoursesRefs;\n    favoritedCourses.splice(courseRef, 1);\n    \n    const updateObject = {\n        favoritedCoursesRefs: favoritedCourses\n    }\n\n    return await updateUser(user.id, updateObject);\n\n}\n\n\nexport const updateCourse = async (courseId, updates) => {\n    return db.collection('Course')\n        .doc(courseId)\n        .set(updates, { merge: true })\n}\n\nexport const addNewChapter = async (course, newChapterInfo) => {\n    const chapter = {} \n    chapter.title = newChapterInfo.title;\n    chapter.description = newChapterInfo.description;\n    chapter.id = 0\n    chapter.lessonsRef = [];\n\n    if (course.chapters && course.chapters.length > 0){\n        course.chapters.push(chapter);\n    } else {\n        course.chapters = [];\n        course.chapters.push(chapter);\n    }\n\n    const updateObject = {\n        chapters: course.chapters\n    }\n\n    return await updateCourse(course.id, updateObject);\n\n}\n\nexport const addNewLesson = async (course, chapterInfo, lessonInfo) => {\n\n    return await db.collection('Course').doc(course.id).collection('Lessons').add(lessonInfo)\n        .then(async lessonDoc => {\n            console.log(\"Lesson Doc\", lessonDoc)\n            console.log(`Course/${course.id}/Lessons/${lessonDoc.id}`);\n            const lessonRef = db.doc(`Course/${course.id}/Lessons/${lessonDoc.id}`);\n            const chapters = course.chapters.map( chapter => {\n                if (chapter === chapterInfo){\n                    chapter.lessonsRef.push(lessonRef);\n                }\n                return chapter\n            });\n\n            const updateObject = {\n                chapters\n            }\n            return await updateCourse(course.id, updateObject)\n        });\n}\n\n\nexport const getCourseByIdEvaluatePromise = courseId => {\n    return db.collection('Course')\n        .doc(courseId)\n        .get()\n        .then( courseResult => {\n            if (courseResult.exists) {\n                const course = courseResult.data();\n                course.id = courseId;\n                return course;\n            } else {\n                return null\n            }\n        });\n};\n\nexport const getDocFromDocRef = docRef => {\n    return docRef.get()\n        .then( result => {\n            if(result.exists){\n                const myResult = result.data();\n                myResult.id = result.id; \n                console.log(myResult);\n                return myResult;\n            }else {\n                return null;\n            }\n        })\n}","import React from 'react';\nimport './CourseLibrary.css';\nimport {Button} from '@material-ui/core';\nimport CourseCard from '../CourseCard/CourseCard';\nimport { render } from '@testing-library/react';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Grid from '@material-ui/core/Grid';\nimport {AppBar, Toolbar, IconButton, Typography } from '@material-ui/core';\nimport SearchBar from './CourseLibraryToolbar/SearchBar/SearchBar.component';\nimport CourseLibraryMenu from './CourseLibraryToolbar/CourseLibraryToolbarMenu/CourseLibraryToolbarMenu.component'\nimport CourseLibraryToolbar from './CourseLibraryToolbar/CourseLibraryToolbar.component'\n\nimport * as FirebaseService from '../../service/firebase.service';\n\n\nclass CourseLibrary extends React.Component {\n  constructor(props) {\n    super(props);\n    // Bind Search\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n    this.handleSearchClicked = this.handleSearchClicked.bind(this);\n    // Bind Sort By\n    this.sortByClicked = this.sortByClicked.bind(this);\n    this.sortByHandleClose = this.sortByHandleClose.bind(this);\n    // Bind Topic\n    this.topicClicked = this.topicClicked.bind(this);\n    this.topicHandleClose = this.topicHandleClose.bind(this);\n    // Bind Organization\n    this.organizationClicked = this.organizationClicked.bind(this);\n    this.organizationHandleClosed = this.organizationHandleClosed.bind(this);\n\n    this.buildMenuItems = this.buildMenuItems.bind(this);\n    this.favoriteClicked = this.favoriteClicked.bind(this);\n    this.removeFavoriteClicked = this.removeFavoriteClicked.bind(this);\n\n    this.state = {\n      searchValue: \"\",\n      sortByElement: null,\n      topicElement: null,\n      organizationElement: null,\n      sortFilterValue: null,\n      topicFilterValue: null,\n      organizationFilterValue:null\n\n    }\n  }\n\n  /** Search Function */\n  handleSearchChange(e){\n    this.setState({\n      searchValue: e.target.value\n    })\n  }\n\n  handleSearchClicked(e){\n  }\n\n  /** Sort By Functions */\n  sortByClicked = event => {\n    this.setState({\n      sortByElement: event.currentTarget\n    });\n  };\n\n  sortByHandleClose = (value) => {\n    this.setState({\n      sortByElement: null,\n      sortFilterValue: value\n    });\n  };\n\n\n  /** Topic Functions */\n  topicClicked = event => {\n    this.setState({\n      topicElement: event.currentTarget\n    });\n  };\n\n  topicHandleClose = (value) => {\n    this.setState({\n      topicElement: null,\n      topicFilterValue: value\n    });\n  };\n\n  /** Organization functions */\n  organizationClicked = event => {\n    this.setState({\n      organizationElement: event.currentTarget\n    });\n  };\n\n  organizationHandleClosed = (value) => {\n    this.setState({\n      organizationElement: null,\n      organizationFilterValue: value\n    });\n  };\n\n  async favoriteClicked(course) {\n    await FirebaseService.favoriteCourse(this.props.user, course);\n    this.props.updateUser(this.props.user.id)\n  }\n\n  async removeFavoriteClicked(course){\n    await FirebaseService.removeFavoriteCourse(this.props.user, course);\n    this.props.updateUser(this.props.user.id)\n\n  }\n\n  buildMenuItems = () => {\n    const sortByInfo = {\n      buttonText: \"Sort By\",\n      menuId: \"menu-sort-by\",\n      clickedFunction: this.sortByClicked,\n      closeFunction: this.sortByHandleClose,\n      element: this.state.sortByElement,\n      radioGroupName: \"menuRadio\",\n      menuValue: this.state.sortFilterValue,\n      menuOptions: [\n        {\n          display: \"Newest\",\n          associatedClickFunction:  this.sortByHandleClose\n        },\n        {\n          display: \"Recommended\",\n          associatedClickFunction:  this.sortByHandleClose\n        },\n        {\n          display: \"Trending\",\n          associatedClickFunction:  this.sortByHandleClose\n        }\n      ]\n    }\n\n    const topicInfo = {\n      buttonText: \"Topic\",\n      menuId: \"menu-topic\",\n      clickedFunction: this.topicClicked,\n      element: this.state.topicElement,\n      closeFunction: this.topicHandleClose,\n      radioGroupName: \"topicRadio\",\n      menuValue: this.state.topicFilterValue,\n      menuOptions: [\n        {\n          display: \"Science\",\n          associatedClickFunction:  this.topicHandleClose\n        },\n        {\n          display: \"Technology\",\n          associatedClickFunction:  this.topicHandleClose\n        },\n        {\n          display: \"History\",\n          associatedClickFunction:  this.topicHandleClose\n        },\n        {\n          display: \"Arts\",\n          associatedClickFunction:  this.topicHandleClose\n        }\n      ]\n    }\n\n    const organizationInfo = {\n      buttonText: \"Organization\",\n      menuId: \"menu-organization\",\n      clickedFunction: this.organizationClicked,\n      element: this.state.organizationElement,\n      closeFunction: this.organizationHandleClosed,\n      radioGroupName: \"organizationRadio\",\n      menuValue: this.state.organizationFilterValue,\n      menuOptions: [\n        {\n          display: \"Required\",\n          associatedClickFunction:  this.organizationHandleClosed\n        },\n        {\n          display: \"Recommended\",\n          associatedClickFunction:  this.organizationHandleClosed\n        },\n        {\n          display: \"All Courses\",\n          associatedClickFunction:  this.organizationHandleClosed\n        }\n      ]\n    }\n\n    return [sortByInfo, topicInfo, organizationInfo];\n  }\n\n  isCourseAFavorite = (user, course) => {\n    \n    if( user.favoritedCourses && user.favoritedCourses.length > 0 ){\n      return user.favoritedCourses\n        .find(favoritedCourse => favoritedCourse.id === course.id);\n    }\n    return false;\n  }\n\n\n  render() {\n    // Mappings\n    const menuItems = this.buildMenuItems();\n    const favoriteClicked = this.favoriteClicked;\n    const isCourseAFavorite = this.isCourseAFavorite;\n    const removeFavoriteClicked = this.removeFavoriteClicked\n\n    const user = this.props.user;\n    const searchInfo = {\n      value: this.state.searchValue,\n      onChange: this.handleSearchChange,\n      onClick: this.handleSearchClicked\n    }\n    let listItems = []\n    if (user) {\n      listItems = this.props.courses.map(function(item) {\n        return (\n            <Grid item s={4}>\n              <CourseCard course={item} favoriteClicked={favoriteClicked} removeFavoriteClicked={removeFavoriteClicked} isCourseAFavorite={isCourseAFavorite(user, item)}></CourseCard>\n            </Grid>\n        );\n      });\n    }\n    \n    return (\n      <div class=\"course-library\">\n        <CourseLibraryToolbar menuItems={menuItems} searchInfo={searchInfo}></CourseLibraryToolbar>\n          <div className=\"course-list\">\n          <Grid container spacing={3}>\n            {listItems}\n          </Grid>\n          </div>\n      </div>\n\n      );\n  }\n}\n\nexport default CourseLibrary;\n","import React, { useState, useEffect } from 'react';\nimport \"../../CourseOverview.css\";\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { Button } from '@material-ui/core';\n\n\n\n\n/**\n * Generate multiple function\n */\n\n\nfunction generate(element) {\n    return [0, 1, 2].map(value =>\n      React.cloneElement(element, {\n        key: value,\n      }),\n    );\n  }\n\n\n\nfunction CourseOverviewChapterPanel(props) {\n\n    function listItemClicked(lesson){\n      props.setChapterInContext(props.chapter);\n      props.setActiveLesson(lesson);\n    }\n\n    let lessonItems = []\n    if (props.chapter && props.chapter.lessons && props.chapter.lessons.length > 0){\n        lessonItems = props.chapter.lessons.map( lesson => \n          <ListItem onClick={() => listItemClicked(lesson)} id={lesson.id} button>\n              <ListItemText primary={lesson.title}/>\n          </ListItem>\n        )\n      } else {\n          lessonItems[0] = <ListItem> <ListItemText primary=\"No Lessons Added\" /> </ListItem>\n      }\n\n\n\n    return (\n        <ExpansionPanel>\n            <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n            >\n            <Typography variant=\"subtitle2\">{props.chapter.title}</Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n            <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                    <div>\n                        <List dense=\"true\">\n                        {lessonItems}\n                        </List>\n                    </div>\n                    </Grid>\n                </Grid>\n            </ExpansionPanelDetails>\n        </ExpansionPanel>\n    )\n}\n\nexport default CourseOverviewChapterPanel;","import React, { useState, useEffect } from 'react';\nimport './CourseOverviewNavigationPane.css';\n\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport CourseOverviewChapterPanel from './CourseOverviewChapterPanel/CourseOverviewChapterPanel.component'\n\n\n/**\n * Generate multiple function\n */\n\n\nfunction generate(element) {\n    return [0, 1, 2].map(value =>\n      React.cloneElement(element, {\n        key: value,\n      }),\n    );\n  }\n\n  \n\n\nfunction CourseOverviewNavigationPane(props) {\n\n    let courseNavigationPanels = [];\n    if (props.course && props.course.chapters && props.course.chapters.length > 0){\n      \n      courseNavigationPanels = props.course.chapters.map( chapter => \n        <CourseOverviewChapterPanel setActiveLesson={props.setActiveLesson} activeLesson={props.activeLesson}  setChapterInContext={props.setChapterInContext} chapter={chapter} />\n      )\n\n    }\n    \n    return (\n        <Paper className=\"paper\">\n          {courseNavigationPanels}\n        </Paper>\n    )\n}\n\nexport default CourseOverviewNavigationPane;","import React, { useState, useEffect } from 'react';\nimport Paper from '@material-ui/core/Paper';\n\n\nfunction CourseOverviewLesson(props) {\n    return (\n        <div>\n            <h3>{props.lesson.title}</h3>\n            <h6>Link: {props.lesson.video}</h6>\n            <strong>Description: </strong>\n            <p>{props.lesson.description}</p>\n        </div>\n    )\n}\n\nexport default CourseOverviewLesson;","import React, { useState, useEffect } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport CourseOverviewLesson from './CourseOverviewLesson/CourseOverviewLesson.component';\n\n\nfunction CourseOverviewCoursePane(props) {\n    return (\n        <Paper className=\"paper\">\n            <h1>{props.course.title}</h1>\n            {\n                props.activeChapter ?\n                <h2>Chapter: {props.activeChapter.title}</h2> :\n                <h2>No Chapter Selected </h2>\n\n            }\n            { props.activeLesson ? \n                 <CourseOverviewLesson lesson={props.activeLesson} /> :\n                <h3>No lesson selected</h3>\n            }\n        </Paper>\n    )\n}\n\nexport default CourseOverviewCoursePane;","import React, { useState, useEffect } from 'react';\nimport './CourseOverview.css';\n\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport * as FirebaseService from '../../service/firebase.service';\nimport { useParams } from \"react-router-dom\";\n\nimport CourseOverviewNavigationPane from './CourseOverviewNavigationPane/CourseOverviewNavigationPane.component';\nimport CourseOverviewCoursePane from './CourseOverviewCoursePane/CourseOverviewCoursePane.component';\n\n\nfunction CourseOverview(props) {\n\n    const [course, setCourse] = useState();\n    const [activeLesson, setActiveLesson] = useState();\n    const [error, setError] = useState();\n    const [chapterInContext, setChapterInContext] = useState();\n\n    let { id } = useParams();\n\n\n    async function resolveLessons(chapter){\n        if (chapter.lessonsRef && chapter.lessonsRef.length > 0){\n            return Promise.all(\n                chapter.lessonsRef.map( async lessonRef => {\n                    const lesson = await FirebaseService.getDocFromDocRef(lessonRef)\n                    return lesson;\n                })\n                ).then(results => {\n                    chapter.lessons = results;\n                    return chapter;\n                });\n                \n        } else {\n          return Promise.resolve(chapter);  \n        }\n    }\n\n    async function resolveChapters(chapters){\n        return Promise.all(chapters.map( chapter => resolveLessons(chapter)))\n    }\n\n    async function getCourseById(id){\n        const course = await FirebaseService.getCourseByIdEvaluatePromise(id);\n        course.chapters = await resolveChapters(course.chapters);\n        setCourse(course);\n    }\n\n    useEffect(() => {\n        if (id) {\n            getCourseById(id); \n      }\n    }, [id]);\n\n    if (course){\n        return (\n            <div className=\"courseOverview\">\n              <Typography className=\"center\" variant=\"h3\" component=\"h3\">\n                  Course Overview\n              </Typography>\n              <Grid container spacing={3}>\n                  <Grid item xs={4}>\n                      <CourseOverviewNavigationPane activeLesson={activeLesson} setActiveLesson={setActiveLesson} setChapterInContext={setChapterInContext} course={course} />\n                  </Grid>\n                  <Grid item xs={8}>\n                       <CourseOverviewCoursePane activeChapter={chapterInContext} activeLesson={activeLesson} course={course} />\n                  </Grid>\n              </Grid>\n            </div>\n          );\n    } else {\n        return (\n            <div>\n                Loading...\n                <CircularProgress></CircularProgress>\n            </div>\n        )\n    }\n\n  }\n  \n  export default CourseOverview;","import React from 'react';\nimport './Login.css';\nimport { Button } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport { withRouter } from \"react-router-dom\";\nimport * as FirebaseService from '../../service/firebase.service';\n\nclass LoginPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { user: undefined };\n    this.loginGoogle = this.loginGoogle.bind(this);\n    this.loginFacebook = this.loginFacebook.bind(this);\n\n  }\n\n  async loginGoogle(event) {\n    // TODO(jessi): set a loading state\n    await FirebaseService.logUserInUser(/* isGoog= */ true).then(u => {\n      this.props.completeLogin(u);\n      this.props.history.push(\"/myCourses\");\n    });\n    // TODO(jessi): unset loading state\n  }\n\n  async loginFacebook(event) {\n    // TODO(jessi): set a loading state\n    await FirebaseService.logUserInUser(/* isGoog= */ false).then(u => {\n      this.props.completeLogin(u);\n      this.props.history.push(\"/myCourses\");\n    });\n    // TODO(jessi): unset loading state\n  }\n\n  render() {\n    // TODO(jessi): style these buttons, remove this page from nav\n    return (\n      <div className=\"login\">\n        <h1>Sign into Mooc in a Box</h1>\n        <Button color=\"inherit\" className=\"menu-button\" onClick={this.loginFacebook}>\n          Sign in with Facebook\n      </Button>\n        <Button color=\"inherit\" className=\"menu-button\" onClick={this.loginGoogle}>\n          Sign in with Google\n      </Button>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(LoginPage);\n","import React, { useState } from 'react';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport {Button} from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\n\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Grid from '@material-ui/core/Grid';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { IconButton } from '@material-ui/core';\n\nfunction CoursesDropdownComponent(props) {\n    return (\n      <ExpansionPanel>\n              <ExpansionPanelSummary\n              expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel1a-content\"\n              id=\"panel1a-header\"\n              >\n              <Typography variant=\"subtitle2\">{props.courses.length} Course(s)</Typography>\n              </ExpansionPanelSummary>\n              <ExpansionPanelDetails>\n              <Grid container spacing={2}>\n                  <Grid item xs={12} md={6}>\n                      <div>\n                          <List dense=\"true\">\n                          {\n                            props.courses.map( course => {\n                              return (\n                                <span>\n                                  <ListItem \n                                  >\n                                    <Button\n                                      component={RouterLink} \n                                      to={`/courseOverview/${course.id}`}\n                                    >\n                                      {course.title}\n                                    </Button>\n                                    { props.includeEditIcon && \n                                      <IconButton \n                                        className=\"menu-button\" \n                                        color=\"inherit\" \n                                        aria-label=\"menu\"\n                                        component={RouterLink}\n                                        to={`/editCourse/${course.id}`}\n                                      >\n                                        <EditIcon/>\n                                      </IconButton>\n                                    }\n                                  </ListItem>\n                                </span>\n                                \n                              )\n                            })\n                          }\n                          </List>\n                      </div>\n                      </Grid>\n                  </Grid>\n              </ExpansionPanelDetails>\n          </ExpansionPanel>\n    )\n  }\n\n  export default CoursesDropdownComponent;\n","import React, { useState } from 'react';\nimport './MyCourses.css';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport { Button } from '@material-ui/core';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Link } from 'react-router-dom'\n\nimport EditIcon from '@material-ui/icons/Edit';\nimport { IconButton } from '@material-ui/core';\n\nimport CoursesDropdownComponent from '../CoursesDropdown/CoursesDropdown.component';\n\n\n\n/**\n * \n * http://localhost:3000/courseOverview/rlfxOavBn4nPZLNTRMkL\n * http://localhost:3000/courseOverview/rlfxOavBn4nPZLNTRMkL\n */\n\n/**\n * \n * \n */\n\n\n\nfunction generate(element) {\n  return React.cloneElement(element, {\n    key: element,\n  })\n}\n\nfunction CurrentCoursesComponent(props) {\n  let numberOfCourses = props.currentCourses.length;\n\n  return (\n    <div>\n      <h1> Current Courses </h1>\n      <CoursesDropdownComponent courses={props.currentCourses}></CoursesDropdownComponent>\n    </div>\n  )\n}\n\n\nfunction PastCoursesComponent(props) {\n  return (\n    <div>\n      <h1> Past Courses </h1>\n      <CoursesDropdownComponent courses={props.pastCourses}></CoursesDropdownComponent>\n    </div>\n  )\n}\n\nfunction SavedCoursesComponent(props) {\n  return (\n    <div>\n      <h1> Favorited Courses </h1>\n      <CoursesDropdownComponent courses={props.savedCourses}></CoursesDropdownComponent>\n    </div>\n  )\n}\n\nfunction CreatedCoursesComponent(props) {\n  return (\n    <div>\n      <h1> Created Courses </h1>\n      <CoursesDropdownComponent courses={props.createdCourses} includeEditIcon={true}></CoursesDropdownComponent>\n    </div>\n  )\n}\n\n\n\nfunction MyCourses(props) {\n\n  const [user, setUser] = useState();\n\n  React.useEffect(() => {\n    setUser(props.user);\n  }, [props]);\n\n\n  if (user) {\n    const courseComponentList = []\n    let hasCourses = false;\n\n\n    if (user.currentCourses && user.currentCourses.length > 0) {\n      const element = <CurrentCoursesComponent currentCourses={user.currentCourses}></CurrentCoursesComponent>\n      courseComponentList.push(element);\n      hasCourses = true;\n    }\n\n    if (user.pastCourses && user.pastCourse.length > 0) {\n      const element = <PastCoursesComponent pastCourses={user.pastCourses}></PastCoursesComponent>\n      courseComponentList.push(element);\n      hasCourses = true;\n\n    }\n\n    if (user.favoritedCourses && user.favoritedCourses.length > 0) {\n      const element = <SavedCoursesComponent savedCourses={user.favoritedCourses}></SavedCoursesComponent>\n      courseComponentList.push(element);\n      hasCourses = true;\n\n    }\n\n    if (user.createdCourses && user.createdCourses.length > 0) {\n      const element = <CreatedCoursesComponent createdCourses={user.createdCourses}></CreatedCoursesComponent>\n      courseComponentList.push(element);\n      hasCourses = true;\n\n    }\n    if (hasCourses) {\n      return (\n        <div className=\"MyCourses\">\n          <CssBaseline />\n          <Typography className=\"center\" variant=\"h3\" component=\"h3\">\n            My Courses\n          </Typography>\n          <Container maxWidth=\"lg\">\n            <Paper className=\"paper\">\n              {\n                courseComponentList.map(element => element)\n              }\n            </Paper>\n          </Container>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"MyCourses\">\n          <CssBaseline />\n          <Typography className=\"center\" variant=\"h3\" component=\"h3\">\n            My Courses\n            </Typography>\n          <Container maxWidth=\"lg\">\n            <Paper className=\"paper\">\n              <h4>You don't have any courses saved yet!</h4>\n            </Paper>\n          </Container>\n        </div>\n      )\n    }\n\n\n  } else {\n    return (\n      <div>\n        Loading..\n        <CircularProgress></CircularProgress>\n      </div>\n    )\n  }\n\n}\n\nexport default MyCourses;\n","import React from 'react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {Button} from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\n\nfunction EditDialog(props){\n    return (\n      <div>\n        <Dialog open={props.isOpen} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n          <DialogTitle id=\"form-dialog-title\">{props.field}</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              Edit the Field below to update your {props.field}\n            </DialogContentText>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"name\"\n              label={props.field}\n              value={props.value}\n              onChange={props.onChange}\n              type=\"email\"\n              fullWidth\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={props.handleClose} color=\"secondary\">\n              Cancel\n            </Button>\n            <Button onClick={props.handleSubmit} color=\"secondary\">\n              Submit\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    )\n  }\n\n  export default EditDialog","import React from 'react';\n\n\nimport Typography from '@material-ui/core/Typography';\nimport { IconButton } from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport EditDialog from '../EditDialog/EditDialog.component';\n\nconst userKeyToDisplayMap = {\n    \"displayName\": \"Display Name\",\n    \"email\": \"Email Address\",\n    \"password\": \"Password\"\n  }\n\nfunction UserProfileSection(props){\n    return (\n      <div>\n        <Typography align=\"center\" variant=\"h6\" component=\"h6\">\n          <strong>{props.displayValue}</strong>\n        </Typography>\n        <Typography align=\"center\" variant=\"body1\" component=\"body1\">\n          <span>\n          {props.value}\n            <IconButton className=\"menu-button\" color=\"inherit\" aria-label=\"menu\">\n              <EditIcon onClick={props.openDialog}/>\n            </IconButton>\n          </span>\n        </Typography>\n        <EditDialog \n          isOpen={props.isDialogOpen}\n          handleClose={props.handleClose}\n          handleSubmit={props.handleSubmit}\n          field={userKeyToDisplayMap[props.displayKey]}\n          value={props.value}\n          onChange={props.onChange}\n        />\n      </div>\n    )\n}\n\nexport default UserProfileSection\n  ","import React, { useState } from 'react';\nimport './UserProfile.css';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport Divider from '@material-ui/core/Divider';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport UserProfileSection from './UserProfileSection/UserProfileSection.component';\nimport { Button } from '@material-ui/core';\nimport { withRouter } from \"react-router-dom\";\nimport * as FirebaseService from '../../service/firebase.service';\n\nconst passwordValue = \"*******\";\n\nfunction UserProfile(props) {\n\n\n  const [displayName, setDisplayName] = useState(null);\n  const [oldDisplayName, setOldDiplayName] = useState(null);\n  const [error, setError] = useState();\n  const [isDisplayNameDialogOpen, setIsDisplayNameDialogOpen] = useState(false)\n  const [userInterests, setUserInterests] = useState(null);\n  const [oldUserInterests, setOldUserInterests] = useState(null);\n  const [isUserInterestsDialogOpen, setIsUserInterestsDialogOpen] = useState(false);\n\n\n\n  function handleDisplayNameClose() {\n    setDisplayName(oldDisplayName)\n    setIsDisplayNameDialogOpen(false)\n  }\n\n  function handleDisplayNameSubmit() {\n    FirebaseService.updateUser(props.user.id, {\n      displayName\n    }).then(result => {\n      setIsDisplayNameDialogOpen(false)\n      setOldDiplayName(displayName)\n      props.updateUser(props.user.id);\n\n    })\n      .catch(err => {\n        console.log(err);\n      })\n  }\n\n  function openDisplayNameDialog() {\n    setOldDiplayName(displayName)\n    setIsDisplayNameDialogOpen(true)\n  }\n\n  function onDisplayNameChange(e) {\n    setDisplayName(e.target.value);\n  }\n\n  /**\n   * Begin User Interests\n   */\n  function handleUserInterestsDialogClose() {\n    setUserInterests(oldUserInterests)\n    setIsUserInterestsDialogOpen(false)\n  }\n\n  function openUserInterestDialog() {\n    setOldUserInterests(userInterests)\n    setIsUserInterestsDialogOpen(true)\n  }\n\n  function onUserInterestsChange(e) {\n    setUserInterests(e.target.value);\n  }\n\n  function handleUserInterestSubmit() {\n    FirebaseService.updateUser(props.user.id, {\n      interests: userInterests\n    }).then(result => {\n      setIsUserInterestsDialogOpen(false)\n      setUserInterests(userInterests)\n      props.updateUser(props.user.id);\n    })\n      .catch(err => {\n        console.log(err);\n      })\n  }\n\n  async function signOut() {\n    await FirebaseService.signOut().then((res) => {\n      if (res) {\n        props.history.push(\"/\");\n        props.updateUser(undefined);\n      }\n      // TODO(jessi) handle error\n    });\n  }\n\n  async function deleteAccount() {\n    await FirebaseService.deleteUser().then((res) => {\n      if (res) {\n        props.history.push(\"/\");\n        props.updateUser(undefined);\n      }\n      // TODO(jessi) handle error\n    });\n  }\n\n  if (props.user && displayName === null && userInterests === null) {\n    setDisplayName(props.user.displayName)\n    setUserInterests(props.user.interests)\n  }\n\n  if (props.user) {\n    return (\n      <div className=\"userProfile\">\n        <CssBaseline />\n        <Typography className=\"center\" variant=\"h3\" component=\"h3\">\n          User Profile\n        </Typography>\n        <Container className=\"userProfile-bottom-padding\" maxWidth=\"lg\">\n          <Paper className=\"paper\">\n\n            <UserProfileSection\n              displayValue=\"User Interests\"\n              value={userInterests}\n              handleClose={handleUserInterestsDialogClose}\n              handleSubmit={handleUserInterestSubmit}\n              isDialogOpen={isUserInterestsDialogOpen}\n              openDialog={openUserInterestDialog}\n              onChange={onUserInterestsChange}\n            ></UserProfileSection>\n\n          </Paper>\n        </Container>\n        <Divider />\n\n\n        <Container maxWidth=\"lg\">\n          <Paper className=\"paper\">\n\n            <UserProfileSection\n              displayValue=\"Display Name\"\n              value={displayName}\n              handleClose={handleDisplayNameClose}\n              handleSubmit={handleDisplayNameSubmit}\n              isDialogOpen={isDisplayNameDialogOpen}\n              openDialog={openDisplayNameDialog}\n              onChange={onDisplayNameChange}\n            ></UserProfileSection>\n            <Divider />\n            <UserProfileSection displayValue=\"Email\" value={props.user.email}></UserProfileSection>\n            <Divider />\n            <UserProfileSection displayValue=\"Password\" value={passwordValue}></UserProfileSection>\n            <Button color=\"inherit\" className=\"menu-button\" onClick={signOut}>\n              Sign out\n            </Button>\n            <Button color=\"inherit\" className=\"menu-button\" onClick={deleteAccount}>\n              Delete account\n            </Button>\n          </Paper>\n        </Container>\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        Loading..\n        <CircularProgress></CircularProgress>\n      </div>\n    )\n  }\n\n}\n\nexport default withRouter(UserProfile);\n","import React, { useState } from 'react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {Button} from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\n\nfunction CreateCourseDialog(props){\n  const [description, setDescription] = useState();\n  const [title, setTitle] = useState();\n\n  \n  function onCourseTitleChange(e){\n    setTitle(e.target.value);\n  }\n\n  function onCourseDescriptionChange(e){\n    setDescription(e.target.value);\n\n  }\n\n  function handleSubmit(){\n\n      const courseDetails = {\n          title,\n          description\n      }\n\n      props.handleSubmit(courseDetails);\n  }\n\n\n    return (\n      <div>\n        <Dialog open={props.isOpen} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n          <DialogTitle id=\"form-dialog-title\">Create A New Course</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n                Create a new course. Start by entering a title and description below!\n            </DialogContentText>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"title\"\n              label=\"Course Title\"\n              onChange={onCourseTitleChange}\n              type=\"text\"\n              fullWidth\n            />\n             <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"description\"\n              label=\"Course Description\"\n              onChange={onCourseDescriptionChange}\n              type=\"text\"\n              fullWidth\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={props.handleClose} color=\"secondary\">\n              Cancel\n            </Button>\n            <Button onClick={handleSubmit} color=\"secondary\">\n              Submit\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    )\n  }\n\n  export default CreateCourseDialog","import React, { useState } from 'react';\nimport './CreateCourse.css';\nimport { Button } from '@material-ui/core';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport Divider from '@material-ui/core/Divider';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { withRouter } from \"react-router-dom\";\nimport * as FirebaseService from '../../service/firebase.service';\nimport CreateCourseDialog from './CreateCourseDialog/CreateCourseDialog.component';\nimport CoursesDropdownComponent from '../CoursesDropdown/CoursesDropdown.component';\nimport { useHistory } from \"react-router-dom\";\n\n\nfunction CreatedCoursesComponent(props) {\n\n  return (\n    <div className=\"courses-section\">\n      <h1> Courses You've Created </h1>\n      <CoursesDropdownComponent courses={props.createdCourses} includeEditIcon={true}></CoursesDropdownComponent>\n    </div>\n  )\n}\n\nfunction CreateCourse(props) {\n  const [isCreateCourseDialogOpen, setIsCreateCourseDialogOpen] = useState(false);\n  const history = useHistory();\n\n\n  function handleCreateCourseDialogClose() {\n    setIsCreateCourseDialogOpen(false);\n  }\n\n  function openCreateCourseDialog() {\n    setIsCreateCourseDialogOpen(true);\n\n  }\n\n  async function handleSubmit(courseInfo) {\n    courseInfo.owner = props.user.id;\n\n    const chapter = {\n      id: 0,\n      lessons: \"Course/rlfxOavBn4nPZLNTRMkL/Lessons/kL5CwNARpoUhexocK7P4\",\n      sectionTitle: `${courseInfo.title} - Section`\n    }\n\n    courseInfo.chapters = []\n    courseInfo.chapter = chapter;\n    // courseInfo.chapters.push(chapter);\n\n    const response = await FirebaseService.createCourse(props.user, courseInfo)\n    setIsCreateCourseDialogOpen(false);\n    await props.updateCourses();\n    await props.updateUser(props.user.id);\n    // Navigate to Edit Course page\n    history.push(`/editCourse/${props.user.createdCoursesRefs[props.user.createdCoursesRefs.length - 1].id}`)\n  }\n\n  const hasCurrentCourses = false\n  let currnetCoursesSection = null;\n  if (props.user && props.user.createdCourses && props.user.createdCourses.length > 0) {\n    currnetCoursesSection = <CreatedCoursesComponent createdCourses={props.user.createdCourses}></CreatedCoursesComponent>\n  } else {\n    currnetCoursesSection = <h3>You have not created any courses</h3>\n  }\n\n\n  return (\n    <div className=\"Home\">\n      <CssBaseline />\n      <Typography className=\"center\" variant=\"h3\" component=\"h3\">\n        Create A Course\n        </Typography>\n      <Container className=\"userProfile-bottom-padding\" maxWidth=\"lg\">\n        <Paper className=\"paper\">\n          {\n            currnetCoursesSection\n          }\n          <span>\n            <Button variant=\"contained\" color=\"secondary\" onClick={openCreateCourseDialog}>\n              Create New Course\n              </Button>\n          </span>\n        </Paper>\n      </Container>\n      <Divider />\n\n      <CreateCourseDialog\n        isOpen={isCreateCourseDialogOpen}\n        handleClose={handleCreateCourseDialogClose}\n        handleSubmit={handleSubmit}\n        user={props.user}\n      />\n\n\n    </div>\n  );\n}\n\nexport default CreateCourse;\n","import React, { useState, useEffect } from 'react';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { Button } from '@material-ui/core';\n\n\n/**\n * Generate multiple function\n */\n\n\nfunction generate(element) {\n    return [0, 1, 2].map(value =>\n      React.cloneElement(element, {\n        key: value,\n      }),\n    );\n  }\n\n\n\nfunction EditCourseChapterPanel(props) {\n\n    function listItemClicked(lesson){\n      props.setChapterInContext(props.chapter);\n      props.setActiveLesson(lesson);\n    }\n\n    let lessonItems = []\n    if (props.chapter && props.chapter.lessons && props.chapter.lessons.length > 0){\n        lessonItems = props.chapter.lessons.map( lesson => \n          <ListItem onClick={() => listItemClicked(lesson)} id={lesson.id} button>\n              <ListItemText primary={lesson.title}/>\n          </ListItem>\n        )\n      }\n\n\n      function openLessonModal(){\n        props.setChapterInContext(props.chapter);\n        props.openLessonModal(true);\n      }\n\n    \n    return (\n        <ExpansionPanel>\n            <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n            >\n            <Typography variant=\"subtitle2\">{props.chapter.title}</Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n            <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                    <div>\n                        <List dense=\"true\">\n                        {lessonItems}\n                        <Button variant=\"contained\" onClick={openLessonModal} color=\"secondary\" className=\"add-content-btn\">\n                            Add New Content\n                        </Button>\n                        </List>\n                    </div>\n                    </Grid>\n                </Grid>\n            </ExpansionPanelDetails>\n        </ExpansionPanel>\n    )\n}\n\nexport default EditCourseChapterPanel;","import React, { useState, useEffect } from 'react';\nimport './EditCourseNavigationPane.css';\n\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport {Button} from '@material-ui/core';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport { IconButton } from '@material-ui/core';\n\nimport EditCourseChapterPanel from './EditCourseChapterPanel/EditCourseChapterPanel.component';\n\n\n/**\n * Generate multiple function\n */\n\n\nfunction generate(element) {\n    return [0, 1, 2].map(value =>\n      React.cloneElement(element, {\n        key: value,\n      }),\n    );\n  }\n\n  \n\n\nfunction EditCourseNavigationPane(props) {\n\n  function setChapterInContext(chapter){\n    props.setChapterInContext(chapter);\n  }\n\n\n    let courseNavigationPanels = []\n    if (props.course && props.course.chapters && props.course.chapters.length > 0){\n        courseNavigationPanels = props.course.chapters.map( chapter => \n          <EditCourseChapterPanel  setActiveLesson={props.setActiveLesson} activeLesson={props.activeLesson} openLessonModal={props.openLessonModal} setChapterInContext={setChapterInContext} chapter={chapter} />\n        )\n      }\n\n    return (\n        <Paper className=\"paper\">\n\n            {courseNavigationPanels}\n            <Button variant=\"contained\" onClick={props.openCreateChapterDialog} color=\"secondary\">\n                Add New Chapter\n            </Button>\n\n    </Paper>\n    )\n}\n\nexport default EditCourseNavigationPane;","import React, { useState, useEffect } from 'react';\nimport Paper from '@material-ui/core/Paper';\n\n\nfunction EditCourseLesson(props) {\n    return (\n        <div>\n            <h3>{props.lesson.title}</h3>\n            <h6>Link: {props.lesson.video}</h6>\n            <strong>Description: </strong>\n            <p>{props.lesson.description}</p>\n        </div>\n    )\n}\n\nexport default EditCourseLesson;","import React, { useState, useEffect } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport EditCourseLesson from './EditCourseLesson/EditCourseLesson.component';\n\n\nfunction EditCoursePane(props) {\n    return (\n        <Paper className=\"paper\">\n            <h1>{props.course.title}</h1>\n            {\n                props.activeChapter ?\n                <h2>Chapter: {props.activeChapter.title}</h2> :\n                <h2>No Chapter Selected </h2>\n\n            }\n            { props.activeLesson ? \n                <EditCourseLesson lesson={props.activeLesson} /> :\n               <h3>No lesson selected</h3>\n           }\n        </Paper>\n    )\n}\n\nexport default EditCoursePane;","import React, { useState } from 'react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {Button} from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\n\nfunction CreateChapterDialog(props){\n  const [description, setDescription] = useState();\n  const [title, setTitle] = useState();\n\n  \n  function onCourseTitleChange(e){\n    setTitle(e.target.value);\n  }\n\n  function onCourseDescriptionChange(e){\n    setDescription(e.target.value);\n\n  }\n\n  function handleSubmit(e){\n      const chapterInfo = {\n          title,\n          description\n      }\n\n      props.handleSubmit(chapterInfo);\n  }\n\n\n    return (\n      <div>\n        <Dialog open={props.isOpen} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n          <DialogTitle id=\"form-dialog-title\">Create New Chapter</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n                Create a new chapter within your course. Enter a title and description below.\n            </DialogContentText>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"title\"\n              label=\"Chapter Title\"\n              onChange={onCourseTitleChange}\n              type=\"text\"\n              fullWidth\n            />\n             <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"description\"\n              label=\"Chapter Description\"\n              onChange={onCourseDescriptionChange}\n              type=\"text\"\n              fullWidth\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={props.handleClose} color=\"secondary\">\n              Cancel\n            </Button>\n            <Button onClick={handleSubmit} color=\"secondary\">\n              Submit\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    )\n  }\n\n  export default CreateChapterDialog","import React, { useState } from 'react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {Button} from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\n\nfunction CreateLessonDialog(props){\n  const [description, setDescription] = useState();\n  const [title, setTitle] = useState();\n  const [video, setVideo] = useState();\n\n\n  \n  function onCourseTitleChange(e){\n    setTitle(e.target.value);\n  }\n\n  function onCourseDescriptionChange(e){\n    setDescription(e.target.value);\n\n  }\n\n  function onVideoUrlChange(e){\n      setVideo(e.target.value);\n  }\n\n\n\n  function handleSubmit(e){\n      console.log(\"Handle Submit Pressed\")\n      const lessonInfo = {\n          title,\n          description,\n          video\n      }\n      props.addNewLesson(lessonInfo);\n\n  }\n\n    return (\n      <div>\n        <Dialog open={props.isOpen} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n          <DialogTitle id=\"form-dialog-title\">Create New Lesson</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n                Add a new lesson to your course\n            </DialogContentText>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"title\"\n              label=\"Lesson Title\"\n              onChange={onCourseTitleChange}\n              type=\"text\"\n              fullWidth\n            />\n             <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"description\"\n              label=\"Lesson Description\"\n              onChange={onCourseDescriptionChange}\n              type=\"text\"\n              fullWidth\n            />\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"video\"\n              label=\"Video URL\"\n              onChange={onVideoUrlChange}\n              type=\"text\"\n              fullWidth\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={props.handleClose} color=\"secondary\">\n              Cancel\n            </Button>\n            <Button onClick={handleSubmit} color=\"secondary\">\n              Submit\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    )\n  }\n\n  export default CreateLessonDialog","import React, { useEffect, useState } from 'react';\nimport {\n  Link as RouterLink,\n  useParams\n} from \"react-router-dom\";\n\nimport {Button} from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Grid from '@material-ui/core/Grid';\nimport EditIcon from '@material-ui/icons/Edit';\nimport EditCourseNavigationPane from './EditCourseNavigationPane/EditCourseNavigationPane.component';\nimport EditCoursePane from './EditCoursePane/EditCoursePane.component';\n\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport * as FirebaseService from '../../service/firebase.service';\nimport CreateChapterDialog from './CreateChapterDialog/CreateChapterDialog.component';\nimport CreateLessonDialog from './CreateLessonDialog/CreateLessonDialog.component';\n\nfunction EditCourse(props) {\n    // Get ID from Route Params\n    let { id } = useParams();\n    // Create State Variables\n    const [course, setCourse] = useState();\n    const [error, setError] = useState();\n    const [isCreateChapterDialogOpen, setIsCreateChapterDialogOpen] = useState(false);\n    const [isCreateLessonDialogOpen, setIsCreateLessonDialogOpen] = useState(false);\n    const [chapterInContext, setChapterInContext] = useState();\n    const [activeLesson, setActiveLesson] = useState();\n\n\n    function handleCreateChapterClose(){\n        setIsCreateChapterDialogOpen(false);\n    }\n\n    function handleCreateLessonDialogClose(){\n        setIsCreateLessonDialogOpen(false);\n    }\n\n    function openCreateChapterDialog(){\n        setIsCreateChapterDialogOpen(true);\n    }\n\n    function openCreateLessonDialog(){\n        setIsCreateLessonDialogOpen(true);\n    }\n\n\n    async function addNewLesson(lessonInfo){\n        setIsCreateLessonDialogOpen(false);\n        await FirebaseService.addNewLesson(course, chapterInContext, lessonInfo);\n        getCourseById(id);\n\n    }\n\n    async function addNewChapter(chapterInfo){\n        await FirebaseService.addNewChapter(course, chapterInfo);\n        getCourseById(id);\n    }\n\n\n    async function resolveLessons(chapter){\n        if (chapter.lessonsRef && chapter.lessonsRef.length > 0){\n            return Promise.all(\n                chapter.lessonsRef.map( async lessonRef => {\n                    const lesson = await FirebaseService.getDocFromDocRef(lessonRef) \n                    return lesson;\n                })\n                ).then(results => {\n                    chapter.lessons = results;\n                    return chapter;\n                });\n                \n        } else {\n          return Promise.resolve(chapter);  \n        }\n    }\n\n    async function resolveChapters(chapters){\n        return Promise.all(chapters.map( chapter => resolveLessons(chapter)))\n    }\n\n    async function getCourseById(id){\n        const course = await FirebaseService.getCourseByIdEvaluatePromise(id);\n        course.chapters = await resolveChapters(course.chapters);\n        setCourse(course);\n    }\n\n    useEffect(() => {\n        if (id) {\n           getCourseById(id);\n      }\n    }, [id]);\n\n    if (course){\n        return (\n            <div className=\"edit-course\">\n              <Typography className=\"center\" variant=\"h3\" component=\"h3\">\n                  Edit Course\n              </Typography>\n              <Grid container spacing={3}>\n                  <Grid item xs={4}>\n                      <EditCourseNavigationPane activeLesson={activeLesson} setActiveLesson={setActiveLesson} openLessonModal={openCreateLessonDialog} setChapterInContext={setChapterInContext} course={course} openCreateChapterDialog={openCreateChapterDialog} />\n                  </Grid>\n                  <Grid item xs={8}>\n                       <EditCoursePane activeChapter={chapterInContext} activeLesson={activeLesson} course={course} />\n                  </Grid>\n              </Grid>\n              <CreateChapterDialog  isOpen={isCreateChapterDialogOpen}  handleSubmit={addNewChapter}    handleClose={handleCreateChapterClose} />\n              <CreateLessonDialog   isOpen={isCreateLessonDialogOpen}   addNewLesson={addNewLesson}     handleClose={handleCreateLessonDialogClose} />\n\n            </div>\n          );\n    } else {\n        return (\n            <div>\n                Loading...\n                <CircularProgress></CircularProgress>\n            </div>\n        )\n    }\n\n\n  }\n\n  export default EditCourse;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { AppBar, Toolbar, IconButton, Typography, Button, } from '@material-ui/core';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport CourseLibrary from './components/CourseLibrary/CourseLibrary';\nimport CourseOverview from './components/CourseOverview/CourseOverview';\nimport Login from './components/Login/Login';\nimport MyCourses from './components/MyCourses/MyCourses';\nimport UserProfile from './components/UserProfile/UserProfile';\nimport CreateCourse from './components/CreateCourse/CreateCourse.component';\nimport EditCourse from './components/EditCourse/EditCourse.component';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'; \n\nimport * as FirebaseService from '../src/service/firebase.service'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: { // peaches\n      light: '#f44336',\n      main: '#f6eee7',\n      dark: '#dbbca1',\n    },\n    secondary: {  // purples\n      light: '#a17da5',\n      main: '#87618c',\n      dark: '#442b4a',\n    },\n  },\n  typography: { \n     useNextVariants: true\n  },\n  overrides: {\n    MuiButton: {\n      root: {\n        textTransform: 'none',\n      },\n    },\n  },\n})\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      courses: [],\n      users: [],\n      currentUser: undefined,\n    };\n    this.fetchCourses = this.fetchCourses.bind(this);\n    this.fetchUsers = this.fetchUsers.bind(this);\n    this.render = this.render.bind(this);\n    this.updateUser = this.updateUser.bind(this);\n    this.setUser = this.setUser.bind(this);\n    this.getUserOnLoad = this.getUserOnLoad.bind(this);\n    this.fetchCourses().then(() => {\n      this.getUserOnLoad();\n    });\n  }\n\n  async updateUser(userId) {\n    if (!userId) {\n      this.setState({ currentUser: undefined });\n      return;\n    }\n    await FirebaseService.getUserById(userId)\n      .then(result => {\n        const user = result.data();\n\n        if (user.createdCoursesRefs && user.createdCoursesRefs.length > 0) {\n\n          const newCourses = user.createdCoursesRefs\n            .map(courseRef => this.state.courses.find(course => course.id === courseRef.id));\n\n          user.createdCourses = user.createdCoursesRefs\n            .map(courseRef => this.state.courses.find(course => course.id === courseRef.id));\n        }\n\n        if (user.pastCoursesRefs && user.pastCoursesRefs.length > 0) {\n          user.pastCourses = user.pastCoursesRefs\n            .map(courseRef => this.state.courses.find(course => course.id === courseRef.id));\n        }\n\n        if (user.favoritedCoursesRefs && user.favoritedCoursesRefs.length > 0) {\n          user.favoritedCourses = user.favoritedCoursesRefs\n            .map(courseRef => this.state.courses.find(course => course.id === courseRef.id));\n        }\n\n        this.setState({ currentUser: user });\n\n      })\n  }\n\n  getUserOnLoad() {\n    let user = FirebaseService.getCurrentUser();\n    if (user) {\n      this.updateUser(user.uid);\n    } else if (document.cookie.split(';').some((item) => item.trim().startsWith('userid='))) {\n      var cookieValue = document.cookie.replace(/(?:(?:^|.*;\\s*)userid\\s*\\=\\s*([^;]*).*$)|^.*$/, \"$1\");\n      this.updateUser(cookieValue);\n    } else {\n      this.updateUser(undefined);\n    }\n    // document.cookie = \"userid=user.id\";\n  }\n\n  setUser(user) {\n    console.log(\"login\", user);\n    this.updateUser(user.id);\n    document.cookie = `userid=${user.id}`;\n  }\n\n  async fetchCourses() {\n    let courses = [];\n    await FirebaseService.getAllCourses().then((queryResults) => {\n      queryResults.forEach((doc) => {\n        const course = doc.data();\n        const courseId = doc.id;\n        course.owner.get().then(user => {\n          course.owner = user.data();\n        })\n        // course.chapter.lessons.get().then(lesson => {\n        //   course.chapter.lessons = lesson.data();\n        // })\n        course.id = courseId\n        courses.push(course);\n        this.setState({ courses: courses });\n      });\n    });\n  }\n\n  async fetchUsers() {\n    let users = [];\n    await FirebaseService.getAllUsers()\n      .then((queryResults) => {\n        queryResults.forEach((doc) => {\n          const user = doc.data();\n          user.id = doc.id;\n          users.push(user);\n          this.setState({\n            users\n          })\n        })\n      })\n  }\n\n  render() {\n\n    if (this.state.currentUser) {\n      console.log('logged in!')\n    }\n\n    return (\n      <MuiThemeProvider theme={theme}>\n        <Router>\n          <div>\n            <nav hidden={!this.state.currentUser}>\n              <AppBar position=\"static\">\n                <Toolbar>\n                  <Button variant=\"contained\" color=\"secondary\" className=\"menu-button main\" component={RouterLink} to=\"/myCourses\">My Courses</Button>\n                  <Button variant=\"contained\" color=\"secondary\" className=\"menu-button main\" component={RouterLink} to=\"/courseLibrary\">All Courses</Button>\n                  <Button variant=\"outlined\" color=\"secondary\" className=\"menu-button align-left\" component={RouterLink} to=\"/createCourse\">Create a Course</Button>\n                  <IconButton className=\"menu-button profile-icon\" component={RouterLink} to=\"/profile\" color=\"inherit\" aria-label=\"menu\">\n                    <AccountCircleIcon />\n                  </IconButton>\n                  <span>{this.props.user?.name}</span>\n                </Toolbar>\n              </AppBar>\n            </nav>\n\n            {/* A <Switch> looks through its children <Route>s and\n                renders the first one that matches the current URL. */}\n            <Switch>\n              <Route exact path=\"/\">\n                <Login completeLogin={this.setUser} />\n              </Route>\n              <Route path=\"/courseLibrary\">\n                <CourseLibrary courses={this.state.courses} user={this.state.currentUser} updateUser={this.updateUser}/>\n              </Route>\n              <Route path=\"/courseOverview/:id\">\n                <CourseOverview service={FirebaseService}></CourseOverview>\n              </Route>\n              <Route path=\"/myCourses\">\n                <MyCourses user={this.state.currentUser}></MyCourses>\n              </Route>\n              <Route path=\"/profile\">\n                <UserProfile user={this.state.currentUser} updateUser={this.updateUser}></UserProfile>\n              </Route>\n              <Route path=\"/createCourse\">\n                <CreateCourse user={this.state.currentUser} updateUser={this.updateUser} updateCourses={this.fetchCourses}></CreateCourse>\n              </Route>\n              <Route path=\"/editCourse/:id\">\n                <EditCourse user={this.state.currentUser}></EditCourse>\n              </Route>\n            </Switch>\n          </div>\n        </Router>\n      </MuiThemeProvider>\n    )\n  }\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}