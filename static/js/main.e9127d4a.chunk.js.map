{"version":3,"sources":["components/CourseCard/placeholder.png","components/CourseCard/CourseCard.js","components/CourseLibrary/CourseLibraryToolbar/SearchBar/SearchBar.component.js","components/CourseLibrary/CourseLibraryToolbar/CourseLibraryToolbarMenu/CourseLibraryToolbarMenuItem/CourseLibraryToolbarMenuItem.component.js","components/CourseLibrary/CourseLibraryToolbar/CourseLibraryToolbarMenu/CourseLibraryToolbarMenu.component.js","components/CourseLibrary/CourseLibraryToolbar/CourseLibraryToolbar.component.js","service/firebase.service.js","components/CourseLibrary/CourseLibrary.js","components/Login/Login.js","components/CoursesDropdown/CoursesDropdown.component.js","components/MyCourses/MyCourses.js","components/UserProfile/EditDialog/EditDialog.component.js","components/UserProfile/UserProfileSection/UserProfileSection.component.js","components/UserProfile/UserProfile.js","components/CreateCourse/CreateCourseDialog/CreateCourseDialog.component.js","components/CreateCourse/CreateCourse.component.js","components/CourseOverview/CourseNavigationPane/CourseChapterPanel/CourseChapterPanel.component.js","components/CourseOverview/CourseNavigationPane/CourseNavigationPane.component.js","components/CourseOverview/CourseOverviewPane/CourseLesson/CourseLesson.component.js","components/CourseOverview/CourseOverviewPane/CourseOverviewPane.component.js","components/CourseOverview/Dialogs/CreateChapterDialog/CreateChapterDialog.component.js","components/CourseOverview/Dialogs/CreateLessonDialog/CreateLessonDialog.component.js","components/CourseOverview/Dialogs/DeleteDialog/DeleteDialog.component.js","components/CourseOverview/CourseOverview.component.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","maxWidth","minWidth","maxHeight","minHeight","position","media","paddingTop","marginLeft","marginRight","expand","transform","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","actionsRow","bottom","left","width","content","overflow","textOverflow","display","WebkitLineClamp","WebkitBoxOrient","CourseCard","props","classes","React","useState","isFavorited","setIsFavorited","isEnrolled","setisEnrolled","isCourseAFavorite","isCourseEnrolled","Card","variant","className","CardHeader","title","course","subheader","owner","displayName","name","action","IconButton","aria-label","onClick","removeFavoriteClicked","favoriteClicked","CardMedia","image","thumbnailUrl","placeholder","CardContent","Typography","color","component","description","CardActions","Button","Link","to","id","enrollClicked","SearchBar","TextField","value","searchValue","onChange","type","onSearchClicked","CourseLibraryToolbarMenuItem","FormControlLabel","control","Radio","label","CourseLibraryToolbarMenu","menuItems","options","map","option","handleClick","associatedClickFunction","Menu","menuId","anchorEl","element","keepMounted","open","Boolean","onClose","closeFunction","MenuItem","FormControl","FormLabel","menuLabel","RadioGroup","radioGroupName","menuValue","event","target","CourseLibraryToolbar","menuButtons","menuItem","clickedFunction","buttonText","menus","menuOptions","AppBar","Toolbar","searchInfo","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","storageRef","storage","ref","getUserById","userId","collection","doc","get","getAllUsers","updateUser","updates","a","set","merge","createUser","userAuth","uid","photoURL","email","getCurrentUser","user","auth","currentUser","deleteUser","delete","then","document","cookie","catch","error","getCourseById","courseId","courseResult","exists","data","addImage","imageFile","child","put","getImageUrl","getDownloadURL","createCourse","courseInfo","userDocRef","newCourseObj","chapters","overview","JSON","stringify","add","courseDoc","usersCreatedCourses","createdCoursesRefs","length","courseRef","push","thumbnailFile","imageRef","imageUrl","courseUpdate","updateCourse","courseDocWithImage","updateObject","favoriteCourse","favoritedCourses","favoritedCoursesRefs","removeFavoriteCourse","filter","item","enrollInCourse","enrolledCourses","enrolledCoursesRefs","unenrollInCourse","deleteCourseInFirebase","courseDeletedResult","queryResults","updateUsersPromises","forEach","createdCoursesRefLength","favoritedCourseRefs","Promise","all","deleteAllChapters","arrayOfLessonPromises","deleteLessons","chapter","lessonsRef","deleteCourse","addNewChapter","newChapterInfo","updateLesson","chapterInfo","lessonInfo","lessonDoc","lessonRef","deleteLesson","lesson","courseChapters","chapterInside","lessonsRefs","lessons","lessonInside","result","logUserInUser","isGoog","provider","GoogleAuthProvider","FacebookAuthProvider","users","undefined","authUser","signInWithPopup","u","console","log","signOut","getDocFromDocRef","docRef","myResult","CourseLibrary","sortByClicked","setState","sortByElement","currentTarget","sortByHandleClose","sortFilterValue","topicClicked","topicElement","topicHandleClose","topicFilterValue","organizationClicked","organizationElement","organizationHandleClosed","organizationFilterValue","buildMenuItems","state","find","favoritedCourse","c","handleSearchChange","bind","handleSearchClicked","activeCourses","courses","routeClicked","e","searchValueLowerCase","toLowerCase","this","includes","FirebaseService","enrolled","history","listItems","Grid","s","class","container","spacing","Component","withRouter","LoginPage","redirectToReferrer","loginGoogle","loginFacebook","completeLogin","loadingUser","CircularProgress","from","location","pathname","CoursesDropdownComponent","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","xs","md","List","dense","ListItem","RouterLink","includeEditIcon","CurrentCoursesComponent","currentCourses","EnrolledCoursesComponent","SavedCoursesComponent","savedCourses","CreatedCoursesComponent","createdCourses","MyCourses","setUser","useEffect","courseComponentList","hasCourses","CssBaseline","Container","Paper","EditDialog","Dialog","isOpen","handleClose","aria-labelledby","DialogTitle","field","DialogContent","DialogContentText","autoFocus","margin","fullWidth","DialogActions","handleSubmit","userKeyToDisplayMap","UserProfileSection","align","displayValue","isEditable","openDialog","isDialogOpen","displayKey","setDisplayName","oldDisplayName","setOldDiplayName","isDisplayNameDialogOpen","setIsDisplayNameDialogOpen","userInterests","setUserInterests","oldUserInterests","setOldUserInterests","isUserInterestsDialogOpen","setIsUserInterestsDialogOpen","res","interests","err","Divider","CreateCourseDialog","setDescription","setTitle","editorState","setEditorState","setOverview","isTitleError","setIsTitleError","isDescriptionError","setIsDescriptionError","setThumbnailFile","EditorState","createWithContent","convertFromRaw","parse","createEmpty","required","Input","file","files","helperText","editorClassName","handleKeyCommand","command","newState","RichUtils","convertToRaw","getCurrentContent","onEditorStateChange","titleIsGood","descriptionIsGood","currentContentState","courseDetails","CreateCourse","isCreateCourseDialogOpen","setIsCreateCourseDialogOpen","useHistory","updateCourses","currnetCoursesSection","CourseChapterPanel","addNewLessonButton","lessonItems","isActiveLesson","activeLesson","selected","setChapterInContext","setActiveLesson","listItemClicked","button","ListItemText","primary","editable","openLessonModal","defaultExpanded","chapterInContext","CourseNavigationPane","addNewChapterButton","deleteCourseButton","courseNavigationPanels","openCreateChapterDialog","openDeleteDialog","size","YoutubeComponentConfig","opts","height","playerVars","autoplay","videoId","EditCourseLesson","hasYoutubeVideo","goToPreviousLesson","navigateToPreviousLesson","goToNextLesson","navigateToNextLesson","str","isJson","contentStateObj","toolbarHidden","readOnly","text","ContentState","createFromText","youtubeConfig","url","video","myParamters","split","searchParams","URLSearchParams","getVideoConfig","onReady","pauseVideo","isFirstLesson","isLastLesson","nextLesson","nextChapter","leftButton","endIcon","prevLesson","prevChapter","rightButton","startIcon","getButtonDiv","CourseOverviewPane","openEditCourseOverviewDialogButton","editLessonButton","lessonArray","i","j","openEditCourseOverviewDialog","enrolledButtonText","currentLessonIndex","indexOf","currentLessonIndexInChapter","activeChapter","numLessonsInChapter","numChapters","activeChapterIndex","getLessonInformation","indexOfCurrentLesson","addCompletedLesson","CreateChapterDialog","CreateLessonDialog","setVideo","isYoutubeError","setIsYoutubeError","wrapperClassName","descriptionJSON","tempVideo","DeleteDialog","aria-describedby","deleteType","dialogs","viewPublishedCourseButton","useParams","setCourse","isCreateChapterDialogOpen","setIsCreateChapterDialogOpen","isCreateLessonDialogOpen","setIsCreateLessonDialogOpen","isEditCourseOverviewDialogOpen","setIsEditCourseOverviewDialogOpen","isDeleteDialogOpen","setIsDeleteDialogOpen","addLesson","setAddLesson","setDeleteType","objToDelete","setObjToDelete","openCreateLessonDialog","setDeletingCourse","resolveLessons","results","resolve","resolveChapters","isDeletingCourse","updatedLesson","buttonTheme","createMuiTheme","palette","main","secondary","typography","useNextVariants","overrides","MuiButton","textTransform","light","dark","App","myCourseSelected","allCoursesSelected","createCourseSelected","fetchCourses","fetchUsers","render","getUserOnLoad","deletingCourse","some","trim","startsWith","cookieValue","replace","PrivateRoute","isLoggedIn","browserRouteChanged","hidden","exact","path","window","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.e9127d4a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/placeholder.fa9f1a41.png\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { Button } from '@material-ui/core';\nimport { Link } from 'react-router-dom'\nimport FavoriteBorderOutlinedIcon from '@material-ui/icons/FavoriteBorderOutlined';\nimport './CourseCard.css';\nimport placeholder from './placeholder.png';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: 345,\n    minWidth: 345,\n    maxHeight: 400,\n    minHeight: 400,\n    position: 'relative',\n  },\n  media: {\n    paddingTop: '56.25%', // 16:9\n    maxWidth: '50%',\n    marginLeft: \"auto\",\n    marginRight: \"auto\"\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n  actionsRow: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n\n    \"& > *\": {\n      width: '10em',\n    }\n  },\n  content: {\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    display: '-webkit-box',\n    WebkitLineClamp: '2',\n    WebkitBoxOrient: 'vertical',\n  }\n}));\n\nexport default function CourseCard(props) {\n  const classes = useStyles();\n  const [isFavorited, setIsFavorited] = React.useState(false)\n  const [isEnrolled, setisEnrolled] = React.useState(false)\n\n  if (props.isCourseAFavorite != isFavorited) {\n    setIsFavorited(props.isCourseAFavorite);\n  }\n\n  if (props.isCourseEnrolled != isEnrolled) {\n    setisEnrolled(props.isCourseEnrolled);\n  }\n\n  const favoriteButtonClicked = () => {\n    if (isFavorited) {\n      setIsFavorited(false);\n      props.removeFavoriteClicked(props.course);\n    } else {\n      setIsFavorited(true);\n      props.favoriteClicked(props.course);\n    }\n  }\n\n  const enrollClicked = () => {\n    props.enrollClicked(props.course);\n  };\n\n  return (\n    <Card variant=\"outlined\" className={classes.root}>\n      <CardHeader\n        title={props.course.title}\n        subheader={props.course.owner.displayName ? props.course.owner.displayName : props.course.owner.name}\n        action={\n          <IconButton aria-label=\"add to favorites\" onClick={favoriteButtonClicked}>\n            {isFavorited ? <FavoriteIcon /> : <FavoriteBorderOutlinedIcon />}\n          </IconButton>\n        }\n      />\n      <CardMedia\n        className={classes.media}\n        image={props.course.thumbnailUrl ? props.course.thumbnailUrl : placeholder}\n      />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" className={classes.content}>\n          {props.course.description}\n        </Typography>\n      </CardContent>\n      <CardActions className={classes.actionsRow} >\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          component={Link}\n          to={`/courseOverview/${props.course.id}`}\n        >\n          Overview\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={enrollClicked}\n        >\n          {isEnrolled ? \"Continue\" : \"Enroll\"}\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}","import React from 'react';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport { IconButton } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\n\nimport './SearchBar.css';\n\nfunction SearchBar(props) {\n  return (\n    <div className=\"search-bar\">\n      <TextField value={props.searchValue} onChange={props.onChange} id=\"outlined-search\" type=\"search\" variant=\"outlined\" color=\"secondary\" />\n      <IconButton className=\"menu-button\" onClick={props.onSearchClicked}>\n        <SearchIcon className=\"search-bar-icon\" />\n      </IconButton>\n    </div>\n  )\n}\n\nexport default SearchBar\n\n\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Radio from '@material-ui/core/Radio';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\n\nfunction CourseLibraryToolbarMenuItem(props){\n    return (\n      <FormControlLabel value={props.value} control={<Radio />} label={props.value} />\n    )\n  }\n\n  export default CourseLibraryToolbarMenuItem","import React from 'react';\n\nimport Menu from '@material-ui/core/Menu';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport CourseLibraryToolbarMenuItem from './CourseLibraryToolbarMenuItem/CourseLibraryToolbarMenuItem.component';\n\n\n\nfunction CourseLibraryToolbarMenu(props){\n\n  let menuItems = props.options.map( option => {\n    return (\n      <CourseLibraryToolbarMenuItem\n        handleClick={option.associatedClickFunction}\n        value={option.display}>\n      </CourseLibraryToolbarMenuItem>\n    )\n  })\n\n  const onChangeFunction = (event) => {\n    props.closeFunction(event.target.value)\n  }\n\n    return (\n      <Menu\n          id={props.menuId}\n          anchorEl={props.element}\n          keepMounted\n          open={Boolean(props.element)}\n          onClose={props.closeFunction}\n        >\n          <MenuItem>\n            <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">{props.menuLabel}</FormLabel>\n            <RadioGroup aria-label=\"gender\" name={props.radioGroupName} value={props.menuValue} onChange={onChangeFunction}>\n              {menuItems}\n            </RadioGroup>\n            </FormControl>\n          </MenuItem>\n      </Menu>\n    )\n  }\n\n  export default CourseLibraryToolbarMenu","import React from 'react';\n\nimport {AppBar, Toolbar, IconButton, Typography } from '@material-ui/core';\nimport {Button} from '@material-ui/core';\n\nimport SearchBar from './SearchBar/SearchBar.component';\nimport CourseLibraryToolbarMenu from './CourseLibraryToolbarMenu/CourseLibraryToolbarMenu.component'\n\n\n//<CourseLibraryMenu handleClose={this.handleClose} sortByElement={props.state.sortByElement}></CourseLibraryMenu>\n\n\nfunction CourseLibraryToolbar(props){\n\n    let menuButtons = props.menuItems.map(menuItem => {\n        return (\n            <Button\n                color=\"inherit\" \n                className=\"menu-button\"\n                onClick={menuItem.clickedFunction}\n            >\n                {menuItem.buttonText}\n            </Button>\n        )\n    })\n\n    let menus = props.menuItems.map(menuItem => {\n        return(\n            <CourseLibraryToolbarMenu\n                element={menuItem.element}\n                closeFunction = {menuItem.closeFunction}\n                options={menuItem.menuOptions}\n                menuId={menuItem.menuId}\n                menuLabel={menuItem.buttonText}\n            >\n            </CourseLibraryToolbarMenu>\n        )\n    })\n\n    return(\n        <AppBar position=\"static\" className=\"course-library-app-bar\">\n            <Toolbar>\n                {menuButtons}\n                <SearchBar searchValue={props.searchInfo.value} onChange={props.searchInfo.onChange} onSearchClicked={props.searchInfo.onClick}></SearchBar>\n            </Toolbar>\n            {menus}\n      </AppBar>\n    )\n}\n\nexport default CourseLibraryToolbar","import firebase from 'firebase'\n\n\n/**\n * Firebase Set Up\n */\nvar firebaseConfig = {\n    apiKey: \"AIzaSyA8tAHYGUiNkFHq6452W4Qr79eibVmtRZA\",\n    authDomain: \"mooc-in-a-box.firebaseapp.com\",\n    databaseURL: \"https://mooc-in-a-box.firebaseio.com\",\n    projectId: \"mooc-in-a-box\",\n    storageBucket: \"mooc-in-a-box.appspot.com\",\n    messagingSenderId: \"594314585164\",\n    appId: \"1:594314585164:web:3ae152452d1c238af100e9\",\n    measurementId: \"G-LXH34JCXZS\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\nvar storageRef = firebase.storage().ref();\n\n\n\n/*\n* -----------------------------------------------------------\n*  USER Functions\n* -----------------------------------------------------------\n*/\n\nexport const getUserById = userId => {\n    return db.collection('Users').doc(userId).get();\n}\n\nexport const getAllUsers = () => {\n    return db.collection('Users').get();\n}\n\nexport const updateUser = async (userId, updates) => {\n    return db.collection('Users')\n        .doc(userId)\n        .set(updates, { merge: true })\n}\n\nexport const createUser = async (userAuth) => {\n    return db.collection('Users')\n        .doc(userAuth.uid)\n        .set({\n            id: userAuth.uid,\n            name: userAuth.displayName,\n            photoURL: userAuth.photoURL,\n            email: userAuth.email,\n        },\n            { merge: true }\n        )\n}\n\nexport const getCurrentUser = () => {\n    var user = firebase.auth().currentUser;\n    if (user) {\n        return user;\n    } else {\n        return undefined;\n    }\n}\n\nexport const deleteUser = async () => {\n    var user = firebase.auth().currentUser;\n\n    return await user.delete().then(function () {\n        document.cookie = 'userid=; expires=Thu, 01 Jan 1970 00:00:01 GMT;';\n        return true;\n    }).catch(function (error) {\n        return false;\n    });\n}\n\n\n\n/*\n* -----------------------------------------------------------\n*  Course Functions\n* -----------------------------------------------------------\n*/\n\nexport const getCourseById = courseId => {\n    return db.collection('Course')\n        .doc(courseId)\n        .get()\n        .then(async courseResult => {\n            if (courseResult.exists) {\n                const course = courseResult.data();\n                course.id = courseId;\n                return course;\n            } else {\n                return null\n            }\n        });\n};\n\nexport const getAllCourses = () => {\n    return db.collection('Course').get();\n}\n\n\nexport const addImage = (courseId, imageFile) => {\n    const courseImageRef = storageRef.child(`images/courses/${courseId}/${imageFile.name}`);\n    return courseImageRef.put(imageFile);\n}\n\nexport const getImageUrl = (courseId, imageFile) => {\n    const courseImageRef = storageRef.child(`images/courses/${courseId}/${imageFile.name}`);\n    return courseImageRef.getDownloadURL();\n\n}\n\nexport const createCourse = async (user, courseInfo) => {\n    const userDocRef = db.doc(`Users/${user.id}`)\n\n    const newCourseObj = {\n        owner: userDocRef,\n        title: courseInfo.title,\n        description: courseInfo.description,\n        chapters: courseInfo.chapters\n    }\n\n    if (courseInfo.overview) {\n        newCourseObj.overview = JSON.stringify(courseInfo.overview)\n    }\n\n    // Create Course\n    return await db.collection('Course').add(newCourseObj)\n        .then(async courseDoc => {\n\n            let usersCreatedCourses;\n            if (user.createdCoursesRefs && user.createdCoursesRefs.length > 0) {\n                usersCreatedCourses = user.createdCoursesRefs;\n            } else {\n                usersCreatedCourses = []\n            }\n            const courseRef = db.doc(`Course/${courseDoc.id}`)\n            usersCreatedCourses.push(courseRef);\n\n\n            // Check If Image Was Included\n            if (courseInfo.thumbnailFile) {\n                // Upload Image\n                return await addImage(courseDoc.id, courseInfo.thumbnailFile)\n                    .then(async imageRef => {\n\n                        return await getImageUrl(courseDoc.id, courseInfo.thumbnailFile)\n                            .then(async imageUrl => {\n                                const courseUpdate = {\n                                    thumbnailUrl: imageUrl\n                                };\n\n                                return await updateCourse(courseDoc.id, courseUpdate)\n                                    .then(async courseDocWithImage => {\n                                        const updateObject = {\n                                            createdCoursesRefs: usersCreatedCourses\n                                        }\n\n                                        return await updateUser(user.id, updateObject);\n                                    })\n                            })\n                    });\n            } else {\n                // No Image\n                const updateObject = {\n                    createdCoursesRefs: usersCreatedCourses\n                }\n                return await updateUser(user.id, updateObject);\n            }\n        })\n}\n\nexport const favoriteCourse = async (user, courseInfo) => {\n    const courseRef = db.doc(`Course/${courseInfo.id}`)\n    let favoritedCourses;\n\n    if (user.favoritedCoursesRefs && user.favoritedCoursesRefs.length > 0) {\n        favoritedCourses = user.favoritedCoursesRefs;\n    } else {\n        favoritedCourses = []\n    }\n\n    favoritedCourses.push(courseRef);\n\n    const updateObject = {\n        favoritedCoursesRefs: favoritedCourses\n    }\n\n    return await updateUser(user.id, updateObject);\n}\n\nexport const removeFavoriteCourse = async (user, courseInfo) => {\n    const favoritedCourses = user.favoritedCoursesRefs.filter(item => item.id !== courseInfo.id);\n    const updateObject = {\n        favoritedCoursesRefs: favoritedCourses\n    }\n\n    return await updateUser(user.id, updateObject);\n}\n\n\nexport const enrollInCourse = async (user, courseInfo) => {\n    const courseRef = db.doc(`Course/${courseInfo.id}`)\n    let enrolledCourses;\n\n    if (user.enrolledCoursesRefs && user.enrolledCoursesRefs.length > 0) {\n        enrolledCourses = user.enrolledCoursesRefs;\n    } else {\n        enrolledCourses = []\n    }\n\n    enrolledCourses.push(courseRef);\n\n    const updateObject = {\n        enrolledCoursesRefs: enrolledCourses\n    }\n\n    return await updateUser(user.id, updateObject);\n}\n\nexport const unenrollInCourse = async (user, courseInfo) => {\n    const enrolledCourses = user.enrolledCoursesRefs.filter(item => item.id !== courseInfo.id);\n    const updateObject = {\n        enrolledCoursesRefs: enrolledCourses\n    }\n\n    return await updateUser(user.id, updateObject);\n}\n\n\nexport const updateCourse = async (courseId, updates) => {\n\n    if (updates.overview) {\n        updates.overview = JSON.stringify(updates.overview);\n    }\n\n    if (updates.thumbnailFile) {\n        return await addImage(courseId, updates.thumbnailFile)\n            .then(async imageRef => {\n\n                return await getImageUrl(courseId, updates.thumbnailFile)\n                    .then(async imageUrl => {\n\n                        delete updates.thumbnailFile;\n                        updates.thumbnailUrl = imageUrl\n\n                        return db.collection('Course')\n                            .doc(courseId)\n                            .set(updates, { merge: true });\n                    })\n            })\n    } else {\n        return db.collection('Course')\n            .doc(courseId)\n            .set(updates, { merge: true });\n    }\n}\n\n\nconst deleteCourseInFirebase = async (courseId) => {\n\n    return db.collection('Course').doc(courseId).delete().then(async courseDeletedResult => {\n        return await getAllUsers().then(async (queryResults) => {\n            const updateUsersPromises = []\n\n            queryResults.forEach((doc) => {\n                let updateUser = false;\n                const user = doc.data();\n                user.id = doc.id;\n                // const createdCoursesRefLength =  user.createdCoursesRefs?.length();\n                // const favoritedCourseRefs = user.favoritedCoursesRefs?.length();\n\n                if (user.createdCoursesRefs && user.createdCoursesRefs.length > 0) {\n                    const createdCoursesRefLength = user.createdCoursesRefs.length;\n                    user.createdCoursesRefs = user.createdCoursesRefs.filter(courseRef => courseRef.id !== courseId);\n                    if (user.createdCoursesRefs.length !== createdCoursesRefLength) {\n                        updateUser = true;\n                    }\n                }\n\n                if (user.favoritedCourseRefs && user.favoritedCourseRefs.length > 0) {\n                    const favoritedCourseRefs = user.favoritedCoursesRefs.length;\n                    user.favoritedCourseRefs = user.favoritedCoursesRefs.filter(courseRef => courseRef.id !== courseId);\n                    if (user.favoritedCourseRefs.length !== favoritedCourseRefs) {\n                        updateUser = true;\n                    }\n                }\n\n                if (updateUser) {\n                    updateUsersPromises.push(db.collection('Users').doc(user.id).set(user, { merge: true }));\n                }\n            })\n\n            return await Promise.all(updateUsersPromises);\n        })\n    });\n}\n\n\nconst deleteAllChapters = async (course) => {\n    const arrayOfLessonPromises = [];\n    let deleteLessons = false;\n    for (const chapter of course.chapters) {\n        if (chapter.lessonsRef?.length > 0) {\n            deleteLessons = true;\n            break;\n        }\n    }\n    if (deleteLessons) {\n        // var batch = firebase.firestore().batch()\n\n        db.collection(`/Course/${course.id}/Lessons`).get()\n            .then(queryResults => {\n                // values.map(val => {\n                //     batch.delete(val)\n                // })\n                queryResults.forEach(doc => {\n                    arrayOfLessonPromises.push(\n                        db.collection(`/Course/${course.id}/Lessons/`).doc(doc.id).delete()\n                    )\n                })\n            })\n\n        return await Promise.all(arrayOfLessonPromises);\n    }\n}\n\n// const deleteChapter = async (course, chapter) => {\n//     db.collection(`/Course/${course.id}/`)\n// }\n\n\n\nexport const deleteCourse = async (course) => {\n\n    if (course.chapters?.length > 0) {\n        await deleteAllChapters(course)\n    }\n    return await deleteCourseInFirebase(course.id);\n}\n\n\n/*\n* !!!!!!!!\n* Course Attributes Section\n* !!!!!!!!\n*/\nexport const updateCourseOverview = async (course, content) => {\n    const contentJSON = JSON.stringify(content);\n\n    const updateObject = {\n        overview: contentJSON\n    }\n\n    return await updateCourse(course.id, updateObject);\n}\n\nexport const addNewChapter = async (course, newChapterInfo) => {\n    const chapter = {}\n    chapter.title = newChapterInfo.title;\n    chapter.description = newChapterInfo.description;\n    chapter.id = 0\n    chapter.lessonsRef = [];\n\n    if (course.chapters && course.chapters.length > 0) {\n        chapter.id = course.chapters.length;\n        course.chapters.push(chapter);\n    } else {\n        course.chapters = [];\n        course.chapters.push(chapter);\n    }\n\n    const updateObject = {\n        chapters: course.chapters\n    }\n\n    return await updateCourse(course.id, updateObject);\n\n}\n\nexport const updateLesson = async (course, chapterInfo, lessonInfo, add) => {\n    if (add) { // For initial lesson creation.\n        delete lessonInfo.id; // cuz undefined is not allowed\n        return await db.collection('Course').doc(course.id).collection('Lessons').add(lessonInfo)\n            .then(async lessonDoc => {\n                const lessonRef = db.doc(`Course/${course.id}/Lessons/${lessonDoc.id}`);\n                const chapters = course.chapters.map(chapter => {\n                    if (chapter === chapterInfo) {\n                        chapter.lessonsRef.push(lessonRef);\n                    }\n                    return chapter\n                });\n\n                const updateObject = {\n                    chapters\n                }\n                return await updateCourse(course.id, updateObject)\n            });\n    } else {\n        const lessonRef = db.doc(`Course/${course.id}/Lessons/${lessonInfo.id}`);\n        return await lessonRef.set(lessonInfo, { merge: true });\n    }\n}\n\nexport const deleteLesson = async (course, chapter, lesson) => {\n\n    const courseChapters = course.chapters.map(chapterInside => {\n        if (chapterInside.title === chapter.title) {\n            const lessonsRefs = [];\n            chapterInside.lessonsRef.forEach(lessonRef => {\n                if (lessonRef.id !== lesson.id) {\n                    lessonsRefs.push(lessonRef);\n                }\n            })\n            chapterInside.lessonsRef = lessonsRefs;\n\n            const lessons = []\n            chapterInside.lessons.forEach(lessonInside => {\n                if (lessonInside.id !== lesson.id) {\n                    lessons.push(lessonInside);\n                }\n            })\n            chapterInside.lessons = lessons;\n        }\n        return chapterInside;\n    });\n\n\n    return await db.collection(`/Course/${course.id}/Lessons`).doc(lesson.id).delete().then(async result => {\n        return await updateCourse(course.id, {\n            chapters: courseChapters\n        });\n    });\n\n}\n\n\n/*\n* -----------------------------------------------------------\n*  Login Functions\n* -----------------------------------------------------------\n*/\n\nexport const logUserInUser = async (isGoog) => {\n    let provider;\n    isGoog ? provider = new firebase.auth.GoogleAuthProvider() :\n        provider = new firebase.auth.FacebookAuthProvider();\n    let users = [];\n    let currentUser = undefined;\n    let authUser = undefined;\n    // Get all users so we can see if the logged in one is one of ours.\n    // TODO(jessi): store this data so we don't need to fetch it, or directly ask for the user\n    // once they log in and if no user exists create one. Sounds like work.\n    await getAllUsers()\n        .then((queryResults) => {\n            queryResults.forEach((doc) => {\n                const user = doc.data();\n                user.id = doc.id;\n                users.push(user);\n            })\n        });\n\n    return await firebase.auth().signInWithPopup(provider).then(async function (result) {\n        authUser = result.user;\n        users.forEach(u => {\n            if (u.id === authUser.uid) {\n                currentUser = u;\n            }\n        });\n        // Didn't find an existing user.\n        if (currentUser === undefined) {\n            // Create new user\n            await createUser(authUser).then(async () => {\n                // Get the new user to return\n                return getCurrentUser();\n            }).catch(error => {\n                console.log(error);\n            });\n        }\n        return currentUser;\n    }).catch(function (error) {\n        console.log(error);\n    });\n}\n\nexport const signOut = async () => {\n    return await firebase.auth().signOut().then(function () {\n        document.cookie = 'userid=; expires=Thu, 01 Jan 1970 00:00:01 GMT;';\n        return true;\n    }).catch(function (error) {\n        console.log(error);\n        return false;\n    });\n}\n\n\n\n/*\n* -----------------------------------------------------------\n*  Utility Functions\n* -----------------------------------------------------------\n*/\n\nexport const getDocFromDocRef = docRef => {\n    return docRef.get()\n        .then(result => {\n            if (result.exists) {\n                const myResult = result.data();\n                myResult.id = result.id;\n                return myResult;\n            } else {\n                return null;\n            }\n        })\n}","import React from 'react';\nimport './CourseLibrary.css';\nimport CourseCard from '../CourseCard/CourseCard';\nimport { withRouter, Redirect } from \"react-router-dom\";\nimport Grid from '@material-ui/core/Grid';\nimport CourseLibraryToolbar from './CourseLibraryToolbar/CourseLibraryToolbar.component'\n\nimport * as FirebaseService from '../../service/firebase.service';\n\n\nclass CourseLibrary extends React.Component {\n  constructor(props) {\n    super(props);\n    // Bind Search\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n    this.handleSearchClicked = this.handleSearchClicked.bind(this);\n    // Bind Sort By\n    this.sortByClicked = this.sortByClicked.bind(this);\n    this.sortByHandleClose = this.sortByHandleClose.bind(this);\n    // Bind Topic\n    this.topicClicked = this.topicClicked.bind(this);\n    this.topicHandleClose = this.topicHandleClose.bind(this);\n    // Bind Organization\n    this.organizationClicked = this.organizationClicked.bind(this);\n    this.organizationHandleClosed = this.organizationHandleClosed.bind(this);\n\n    this.buildMenuItems = this.buildMenuItems.bind(this);\n    this.favoriteClicked = this.favoriteClicked.bind(this);\n    this.enrollClicked = this.enrollClicked.bind(this);\n    this.removeFavoriteClicked = this.removeFavoriteClicked.bind(this);\n    this.state = {\n      searchValue: \"\",\n      sortByElement: null,\n      topicElement: null,\n      organizationElement: null,\n      sortFilterValue: null,\n      topicFilterValue: null,\n      organizationFilterValue: null,\n      activeCourses: props.courses\n    }\n    props.routeClicked(\"Course Library\");\n  }\n\n  /** Search Function */\n  handleSearchChange(e) {\n    const searchValue = e.target.value;\n    const searchValueLowerCase = searchValue.toLowerCase();\n    const activeCourses = this.props.courses.filter(course =>\n      (course.title?.toLowerCase().includes(searchValueLowerCase)\n        || course.description?.toLowerCase().includes(searchValueLowerCase)\n        || course.owner.displayName?.toLowerCase().includes(searchValueLowerCase)\n      ))\n    this.setState({\n      searchValue,\n      activeCourses\n    })\n  }\n\n  handleSearchClicked(e) {\n  }\n\n  /** Sort By Functions */\n  sortByClicked = event => {\n    this.setState({\n      sortByElement: event.currentTarget\n    });\n  };\n\n  sortByHandleClose = (value) => {\n    this.setState({\n      sortByElement: null,\n      sortFilterValue: value\n    });\n  };\n\n\n  /** Topic Functions */\n  topicClicked = event => {\n    this.setState({\n      topicElement: event.currentTarget\n    });\n  };\n\n  topicHandleClose = (value) => {\n    this.setState({\n      topicElement: null,\n      topicFilterValue: value\n    });\n  };\n\n  /** Organization functions */\n  organizationClicked = event => {\n    this.setState({\n      organizationElement: event.currentTarget\n    });\n  };\n\n  organizationHandleClosed = (value) => {\n    this.setState({\n      organizationElement: null,\n      organizationFilterValue: value\n    });\n  };\n\n  async favoriteClicked(course) {\n    await FirebaseService.favoriteCourse(this.props.user, course);\n    this.props.updateUser(this.props.user.id)\n  }\n\n  async removeFavoriteClicked(course) {\n    await FirebaseService.removeFavoriteCourse(this.props.user, course);\n    this.props.updateUser(this.props.user.id)\n  }\n\n  async enrollClicked(course) {\n    let enrolled = false;\n    if (this.props.user.enrolledCourses) {\n      enrolled = this.props.user.enrolledCourses.find(c => {\n        return c.id === course.id;\n      })\n    }\n\n    if (enrolled) {\n      this.props.history.push(`/courseOverview/${course.id}`);\n      // TODO(jessi): go to most recent lesson\n    } else {\n      await FirebaseService.enrollInCourse(this.props.user, course);\n      this.props.updateUser(this.props.user.id);\n    }\n  }\n\n  buildMenuItems = () => {\n    const sortByInfo = {\n      buttonText: \"Sort By\",\n      menuId: \"menu-sort-by\",\n      clickedFunction: this.sortByClicked,\n      closeFunction: this.sortByHandleClose,\n      element: this.state.sortByElement,\n      radioGroupName: \"menuRadio\",\n      menuValue: this.state.sortFilterValue,\n      menuOptions: [\n        {\n          display: \"Newest\",\n          associatedClickFunction: this.sortByHandleClose\n        },\n        {\n          display: \"Recommended\",\n          associatedClickFunction: this.sortByHandleClose\n        },\n        {\n          display: \"Trending\",\n          associatedClickFunction: this.sortByHandleClose\n        }\n      ]\n    }\n\n    const topicInfo = {\n      buttonText: \"Topic\",\n      menuId: \"menu-topic\",\n      clickedFunction: this.topicClicked,\n      element: this.state.topicElement,\n      closeFunction: this.topicHandleClose,\n      radioGroupName: \"topicRadio\",\n      menuValue: this.state.topicFilterValue,\n      menuOptions: [\n        {\n          display: \"Science\",\n          associatedClickFunction: this.topicHandleClose\n        },\n        {\n          display: \"Technology\",\n          associatedClickFunction: this.topicHandleClose\n        },\n        {\n          display: \"History\",\n          associatedClickFunction: this.topicHandleClose\n        },\n        {\n          display: \"Arts\",\n          associatedClickFunction: this.topicHandleClose\n        }\n      ]\n    }\n\n    const organizationInfo = {\n      buttonText: \"Organization\",\n      menuId: \"menu-organization\",\n      clickedFunction: this.organizationClicked,\n      element: this.state.organizationElement,\n      closeFunction: this.organizationHandleClosed,\n      radioGroupName: \"organizationRadio\",\n      menuValue: this.state.organizationFilterValue,\n      menuOptions: [\n        {\n          display: \"Required\",\n          associatedClickFunction: this.organizationHandleClosed\n        },\n        {\n          display: \"Recommended\",\n          associatedClickFunction: this.organizationHandleClosed\n        },\n        {\n          display: \"All Courses\",\n          associatedClickFunction: this.organizationHandleClosed\n        }\n      ]\n    }\n\n    return [sortByInfo, topicInfo, organizationInfo];\n  }\n\n  isCourseAFavorite = (user, course) => {\n\n    if (user.favoritedCourses && user.favoritedCourses.length > 0) {\n      return user.favoritedCourses\n        .find(favoritedCourse => favoritedCourse.id === course.id);\n    }\n    return false;\n  }\n\n  isCourseEnrolled = (user, course) => {\n\n    if (user.enrolledCourses && user.enrolledCourses.length > 0) {\n      return user.enrolledCourses.find(c => c.id === course.id);\n    }\n    return false;\n  }\n\n  render() {\n    // Mappings\n    const menuItems = this.buildMenuItems();\n    const favoriteClicked = this.favoriteClicked;\n    const isCourseAFavorite = this.isCourseAFavorite;\n    const removeFavoriteClicked = this.removeFavoriteClicked\n    const enrollClicked = this.enrollClicked;\n    const isCourseEnrolled = this.isCourseEnrolled;\n\n    const user = this.props.user;\n    const searchInfo = {\n      value: this.state.searchValue,\n      onChange: this.handleSearchChange,\n      onClick: this.handleSearchClicked\n    }\n    let listItems = []\n    if (user) {\n\n      listItems = this.state.activeCourses.map(function (item) {\n        return (\n          <Grid item s={4}>\n            <CourseCard course={item} enrollClicked={enrollClicked} isCourseEnrolled={isCourseEnrolled(user, item)} favoriteClicked={favoriteClicked} removeFavoriteClicked={removeFavoriteClicked} isCourseAFavorite={isCourseAFavorite(user, item)}></CourseCard>\n          </Grid>\n        );\n      });\n    }\n\n    return (\n      <div class=\"course-library\">\n        <CourseLibraryToolbar menuItems={menuItems} searchInfo={searchInfo}></CourseLibraryToolbar>\n        <div className=\"course-list\">\n          <Grid container spacing={3}>\n            {listItems}\n          </Grid>\n        </div>\n      </div>\n\n    );\n  }\n}\n\nexport default withRouter(CourseLibrary);\n","import React from 'react';\nimport './Login.css';\nimport { Button } from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { withRouter, Redirect } from \"react-router-dom\";\nimport * as FirebaseService from '../../service/firebase.service';\n\nclass LoginPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { redirectToReferrer: false };\n    this.loginGoogle = this.loginGoogle.bind(this);\n    this.loginFacebook = this.loginFacebook.bind(this);\n\n  }\n\n  async loginGoogle(event) {\n    // TODO(jessi): set a loading state\n    await FirebaseService.logUserInUser(/* isGoog= */ true).then(u => {\n      this.props.completeLogin(u);\n      this.props.history.push(\"/courseLibrary\");\n      this.setState({ redirectToReferrer: true });\n    });\n    // TODO(jessi): unset loading state\n  }\n\n  async loginFacebook(event) {\n    // TODO(jessi): set a loading state\n    await FirebaseService.logUserInUser(/* isGoog= */ false).then(u => {\n      this.props.completeLogin(u);\n      this.props.history.push(\"/courseLibrary\");\n      this.setState({ redirectToReferrer: true });\n    });\n    // TODO(jessi): unset loading state\n  }\n\n  render() {\n    // Show loading screen while we load the user.\n    if (this.props.loadingUser) {\n      return (\n        <div>\n          Loading..\n          <CircularProgress></CircularProgress>\n        </div>\n      )\n    }\n\n    // Redirect if logged in or complete login.\n    const { from } = this.props.location.state || { from: { pathname: '/' } }\n    const { redirectToReferrer } = this.state\n    if (redirectToReferrer === true || this.props.user) {\n      return <Redirect to={from} />\n    }\n\n\n    // TODO(jessi): style these buttons\n    return (\n      <div className=\"login\">\n        <h1>Sign into Mooc in a Box</h1>\n        <Button color=\"inherit\" className=\"menu-button\" onClick={this.loginFacebook}>\n          Sign in with Facebook\n      </Button>\n        <Button color=\"inherit\" className=\"menu-button\" onClick={this.loginGoogle}>\n          Sign in with Google\n      </Button>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(LoginPage);\n","import React, { useState } from 'react';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport { Button } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\n\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Grid from '@material-ui/core/Grid';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { IconButton } from '@material-ui/core';\nimport './CoursesDropdown.css';\n\nfunction CoursesDropdownComponent(props) {\n  return (\n    <ExpansionPanel>\n      <ExpansionPanelSummary\n        expandIcon={<ExpandMoreIcon />}\n        aria-controls=\"panel1a-content\"\n        id=\"panel1a-header\"\n      >\n        <Typography variant=\"subtitle2\">{props.courses.length} Course(s)</Typography>\n      </ExpansionPanelSummary>\n      <ExpansionPanelDetails>\n        <Grid container spacing={2}>\n          <Grid item xs={12} md={6}>\n            <div>\n              <List dense=\"true\">\n                {\n                  props.courses.map(course => {\n                    return (\n                      <span>\n                        <ListItem\n                        >\n                          <Button id=\"course-link\"\n                            component={RouterLink}\n                            to={`/courseOverview/${course.id}`}\n                          >\n                            {course.title}\n                          </Button>\n                          {props.includeEditIcon &&\n                            <IconButton id=\"edit-button\"\n                              className=\"menu-button\"\n                              color=\"inherit\"\n                              aria-label=\"menu\"\n                              component={RouterLink}\n                              to={`/editCourse/${course.id}`}\n                            >\n                              <EditIcon />\n                            </IconButton>\n                          }\n                        </ListItem>\n                      </span>\n\n                    )\n                  })\n                }\n              </List>\n            </div>\n          </Grid>\n        </Grid>\n      </ExpansionPanelDetails>\n    </ExpansionPanel>\n  )\n}\n\nexport default CoursesDropdownComponent;\n","import React, { useState } from 'react';\nimport './MyCourses.css';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport { Button } from '@material-ui/core';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Link } from 'react-router-dom'\n\nimport EditIcon from '@material-ui/icons/Edit';\nimport { IconButton } from '@material-ui/core';\n\nimport CoursesDropdownComponent from '../CoursesDropdown/CoursesDropdown.component';\n\n\n\n/**\n * \n * http://localhost:3000/courseOverview/rlfxOavBn4nPZLNTRMkL\n * http://localhost:3000/courseOverview/rlfxOavBn4nPZLNTRMkL\n */\n\n\nfunction generate(element) {\n  return React.cloneElement(element, {\n    key: element,\n  })\n}\n\nfunction CurrentCoursesComponent(props) {\n  let numberOfCourses = props.currentCourses.length;\n\n  return (\n    <div>\n      <h2> Current Courses </h2>\n      <CoursesDropdownComponent courses={props.currentCourses}></CoursesDropdownComponent>\n    </div>\n  )\n}\n\n\nfunction EnrolledCoursesComponent(props) {\n  return (\n    <div>\n      <h2> Current Courses </h2>\n      <CoursesDropdownComponent courses={props.enrolledCourses}></CoursesDropdownComponent>\n    </div>\n  )\n}\n\nfunction SavedCoursesComponent(props) {\n  return (\n    <div>\n      <h2> Favorited Courses </h2>\n      <CoursesDropdownComponent courses={props.savedCourses}></CoursesDropdownComponent>\n    </div>\n  )\n}\n\nfunction CreatedCoursesComponent(props) {\n  return (\n    <div>\n      <h2> Created Courses </h2>\n      <CoursesDropdownComponent courses={props.createdCourses} includeEditIcon={true}></CoursesDropdownComponent>\n    </div>\n  )\n}\n\n\n\nfunction MyCourses(props) {\n\n  const [user, setUser] = useState();\n  props.routeClicked(\"My Courses\");\n\n\n  React.useEffect(() => {\n    setUser(props.user);\n  }, [props]);\n\n\n  if (user) {\n    const courseComponentList = []\n    let hasCourses = false;\n\n\n    if (user.currentCourses && user.currentCourses.length > 0) {\n      const element = <CurrentCoursesComponent currentCourses={user.currentCourses}></CurrentCoursesComponent>\n      courseComponentList.push(element);\n      hasCourses = true;\n    }\n\n    if (user.enrolledCourses && user.enrolledCourses.length > 0) {\n      const element = <EnrolledCoursesComponent enrolledCourses={user.enrolledCourses}></EnrolledCoursesComponent>\n      courseComponentList.push(element);\n      hasCourses = true;\n\n    }\n\n    if (user.favoritedCourses && user.favoritedCourses.length > 0) {\n      const element = <SavedCoursesComponent savedCourses={user.favoritedCourses}></SavedCoursesComponent>\n      courseComponentList.push(element);\n      hasCourses = true;\n\n    }\n\n    if (user.createdCourses && user.createdCourses.length > 0) {\n      const element = <CreatedCoursesComponent createdCourses={user.createdCourses}></CreatedCoursesComponent>\n      courseComponentList.push(element);\n      hasCourses = true;\n\n    }\n    if (hasCourses) {\n      return (\n        <div className=\"MyCourses\">\n          <CssBaseline />\n          <Container maxWidth=\"lg\">\n            <Paper className=\"paper\">\n              {\n                courseComponentList.map(element => element)\n              }\n            </Paper>\n          </Container>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"MyCourses\">\n          <CssBaseline />\n          <Container maxWidth=\"lg\">\n            <Paper className=\"paper\">\n              <h4>You don't have any courses saved yet!</h4>\n            </Paper>\n          </Container>\n        </div>\n      )\n    }\n\n\n  } else {\n    return (\n      <div>\n        Loading..\n        <CircularProgress></CircularProgress>\n      </div>\n    )\n  }\n\n}\n\nexport default MyCourses;\n","import React from 'react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Button } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\n\nfunction EditDialog(props) {\n  return (\n    <div>\n      <Dialog open={props.isOpen} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">{props.field}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Edit the Field below to update your {props.field}\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label={props.field}\n            value={props.value}\n            onChange={props.onChange}\n            type=\"email\"\n            color=\"secondary\"\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.handleClose} color=\"secondary\">\n            Cancel\n            </Button>\n          <Button onClick={props.handleSubmit} color=\"secondary\">\n            Submit\n            </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n\nexport default EditDialog","import React from 'react';\n\n\nimport Typography from '@material-ui/core/Typography';\nimport { IconButton } from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport EditDialog from '../EditDialog/EditDialog.component';\n\nconst userKeyToDisplayMap = {\n    \"displayName\": \"Display Name\",\n    \"email\": \"Email Address\",\n    \"password\": \"Password\"\n  }\n\nfunction UserProfileSection(props){\n    function getEditIconIfNecessary(){\n      return props.isEditable ? \n        <IconButton className=\"menu-button\" color=\"inherit\" aria-label=\"menu\">\n          <EditIcon onClick={props.openDialog}/>\n        </IconButton>\n        :\n        <div></div>\n    }\n\n\n    return (\n      <div>\n        <Typography align=\"center\" variant=\"h6\" component=\"h6\">\n          <strong>{props.displayValue}</strong>\n        </Typography>\n        <Typography align=\"center\" variant=\"body1\" component=\"body1\">\n          <span>\n            {props.value}\n            {getEditIconIfNecessary()}\n          </span>\n        </Typography>\n        <EditDialog \n          isOpen={props.isDialogOpen}\n          handleClose={props.handleClose}\n          handleSubmit={props.handleSubmit}\n          field={userKeyToDisplayMap[props.displayKey]}\n          value={props.value}\n          onChange={props.onChange}\n        />\n      </div>\n    )\n}\n\nexport default UserProfileSection\n  ","import React, { useState } from 'react';\nimport './UserProfile.css';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport Divider from '@material-ui/core/Divider';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport UserProfileSection from './UserProfileSection/UserProfileSection.component';\nimport { Button } from '@material-ui/core';\nimport { withRouter } from \"react-router-dom\";\nimport * as FirebaseService from '../../service/firebase.service';\n\nconst passwordValue = \"*******\";\n\nfunction UserProfile(props) {\n\n\n  const [displayName, setDisplayName] = useState(null);\n  const [oldDisplayName, setOldDiplayName] = useState(null);\n  const [error, setError] = useState();\n  const [isDisplayNameDialogOpen, setIsDisplayNameDialogOpen] = useState(false)\n  const [userInterests, setUserInterests] = useState(null);\n  const [oldUserInterests, setOldUserInterests] = useState(null);\n  const [isUserInterestsDialogOpen, setIsUserInterestsDialogOpen] = useState(false);\n\n  props.routeClicked(\"User Profile\");\n\n\n\n  function handleDisplayNameClose() {\n    setDisplayName(oldDisplayName)\n    setIsDisplayNameDialogOpen(false)\n  }\n\n  function handleDisplayNameSubmit() {\n    FirebaseService.updateUser(props.user.id, {\n      displayName\n    }).then(result => {\n      setIsDisplayNameDialogOpen(false)\n      setOldDiplayName(displayName)\n      props.updateUser(props.user.id);\n\n    })\n      .catch(err => {\n        console.log(err);\n      })\n  }\n\n  function openDisplayNameDialog() {\n    setOldDiplayName(displayName)\n    setIsDisplayNameDialogOpen(true)\n  }\n\n  function onDisplayNameChange(e) {\n    setDisplayName(e.target.value);\n  }\n\n  /**\n   * Begin User Interests\n   */\n  function handleUserInterestsDialogClose() {\n    setUserInterests(oldUserInterests)\n    setIsUserInterestsDialogOpen(false)\n  }\n\n  function openUserInterestDialog() {\n    setOldUserInterests(userInterests)\n    setIsUserInterestsDialogOpen(true)\n  }\n\n  function onUserInterestsChange(e) {\n    setUserInterests(e.target.value);\n  }\n\n  function handleUserInterestSubmit() {\n    FirebaseService.updateUser(props.user.id, {\n      interests: userInterests\n    }).then(result => {\n      setIsUserInterestsDialogOpen(false)\n      setUserInterests(userInterests)\n      props.updateUser(props.user.id);\n    })\n      .catch(err => {\n        console.log(err);\n      })\n  }\n\n  async function signOut() {\n    await FirebaseService.signOut().then((res) => {\n      if (res) {\n        props.history.push(\"/\");\n        props.updateUser(undefined);\n      }\n      // TODO(jessi) handle error\n    });\n  }\n\n  async function deleteAccount() {\n    await FirebaseService.deleteUser().then((res) => {\n      if (res) {\n        props.history.push(\"/\");\n        props.updateUser(undefined);\n      }\n      // TODO(jessi) handle error\n    });\n  }\n\n  if (props.user && displayName === null && userInterests === null) {\n    setDisplayName(props.user.displayName)\n    setUserInterests(props.user.interests)\n  }\n\n  if (props.user) {\n    return (\n      <div className=\"userProfile\">\n        <CssBaseline />\n        <Container className=\"userProfile-bottom-padding\" maxWidth=\"lg\">\n          <Paper className=\"paper\">\n\n            <UserProfileSection\n              isEditable={true}\n              displayValue=\"User Interests\"\n              value={userInterests}\n              handleClose={handleUserInterestsDialogClose}\n              handleSubmit={handleUserInterestSubmit}\n              isDialogOpen={isUserInterestsDialogOpen}\n              openDialog={openUserInterestDialog}\n              onChange={onUserInterestsChange}\n              isEditable={true}\n            ></UserProfileSection>\n\n          </Paper>\n        </Container>\n        <Divider />\n\n\n        <Container maxWidth=\"lg\">\n          <Paper className=\"paper\">\n\n            <UserProfileSection\n              isEditable={true}\n              displayValue=\"Display Name\"\n              value={displayName}\n              handleClose={handleDisplayNameClose}\n              handleSubmit={handleDisplayNameSubmit}\n              isDialogOpen={isDisplayNameDialogOpen}\n              openDialog={openDisplayNameDialog}\n              onChange={onDisplayNameChange}\n            />\n            <Divider />\n            <UserProfileSection\n              isEditable={false}\n              displayValue=\"Email\"\n              value={props.user.email}\n            />\n            <Divider />\n            <div className=\"logout-btns\">\n              <Button color=\"inherit\" className=\"menu-button\" onClick={signOut}>\n                Sign out\n              </Button>\n              <Button color=\"inherit\" className=\"menu-button\" onClick={deleteAccount}>\n                Delete account\n              </Button>\n            </div>\n          </Paper>\n        </Container>\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        Loading..\n        <CircularProgress></CircularProgress>\n      </div>\n    )\n  }\n\n}\n\nexport default withRouter(UserProfile);\n","import React, { useState, useEffect } from 'react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Input from '@material-ui/core/Input';\nimport { Button, Divider } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport { Editor } from 'react-draft-wysiwyg';\nimport { EditorState, convertFromRaw, convertToRaw, RichUtils } from 'draft-js';\nimport '../../../../node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport './CreateCourseDialog.css'\n\n\nfunction CreateCourseDialog(props) {\n  const [description, setDescription] = useState(props.course?.description);\n  const [title, setTitle] = useState(props.course?.title);\n  const [editorState, setEditorState] = useState();\n  const [overview, setOverview] = useState(props.course?.overview);\n  const [isTitleError, setIsTitleError] = useState(false);\n  const [isDescriptionError, setIsDescriptionError] = useState(false);\n  const [thumbnailFile, setThumbnailFile] = useState();\n\n\n\n  function onCourseTitleChange(e) {\n    setTitle(e.target.value);\n  }\n\n  function onCourseDescriptionChange(e) {\n    setDescription(e.target.value);\n\n  }\n\n  function onEditorStateChange(editorState) {\n    setEditorState(editorState);\n  };\n\n  function onFileUploadChange({ target }) {\n    console.log(\"Upload happened\");\n    // const fileReader = new FileReader();\n    // const name = target.accept.includes('image') ? 'images' : 'videos';\n    const file = target.files[0];\n    setThumbnailFile(file);\n  }\n\n\n  function handleKeyCommand(command) {\n    const newState = RichUtils.handleKeyCommand(editorState, command);\n    if (newState) {\n      setEditorState(newState);\n      setOverview(convertToRaw(newState.getCurrentContent()));\n\n      return 'handled';\n    }\n    return 'not-handled';\n  };\n\n  function isValidTitle() {\n    if (title && title.length > 0) {\n      setIsTitleError(false)\n      return true;\n    } else {\n      setIsTitleError(true);\n      return false;\n    }\n\n  }\n\n  function isValidDescription() {\n    if (description && description.length > 0) {\n      setIsDescriptionError(false)\n      return true;\n    } else {\n      setIsDescriptionError(true);\n      return false;\n    }\n  }\n\n  function handleSubmit() {\n\n    const titleIsGood = isValidTitle();\n    const descriptionIsGood = isValidDescription();\n\n    if (titleIsGood && descriptionIsGood) {\n      const currentContentState = editorState.getCurrentContent();\n      setOverview(convertToRaw(currentContentState));\n\n      const courseDetails = {\n        title,\n        description,\n        overview: convertToRaw(currentContentState),\n        thumbnailFile\n      }\n      props.handleSubmit(courseDetails);\n    }\n  }\n\n  function handleClose() {\n    setIsTitleError(false)\n    setIsDescriptionError(false)\n    setDescription(props.course?.description)\n    setTitle(props.course?.title)\n    setOverview(props.course?.overview)\n    props.handleClose();\n  }\n\n  useEffect(() => {\n    if (overview) {\n      setEditorState(EditorState.createWithContent(convertFromRaw(JSON.parse(overview))));\n    }\n    else {\n      setEditorState(EditorState.createEmpty());\n    }\n  }, []);\n\n  return (\n    <div>\n      <Dialog open={props.isOpen} onClose={handleClose} aria-labelledby=\"form-dialog-title\" maxWidth=\"md\">\n        <DialogTitle id=\"form-dialog-title\">\n          {\n            props.course ? \"Edit Course\" : \"Create A New Course\"\n          }\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            {\n              props.course ?\n                \"Edit the existing course's title, display card, or overview.\"\n                :\n                \"Create a new course. Start by entering at least the title and description below.\"\n            }\n          </DialogContentText>\n          <TextField\n            autoFocus\n            required\n            error={isTitleError}\n            margin=\"normal\"\n            id=\"title\"\n            label=\"Course Title\"\n            onChange={onCourseTitleChange}\n            type=\"text\"\n            color=\"secondary\"\n            value={title}\n            fullWidth\n          />\n\n          <Divider />\n\n          <h3 class=\"section-heading\">Course Card</h3>\n          <span id=\"thumbnail-span\">\n            <p id=\"thumbnail-text\">Course Thumbnail</p>\n            <Input\n              label=\"Upload Course Thumbnail\"\n              type=\"file\"\n              onChange={onFileUploadChange}\n            >\n            </Input>\n          </span>\n          <TextField\n            margin=\"normal\"\n            id=\"description\"\n            error={isDescriptionError}\n            label=\"Course Description\"\n            required\n            onChange={onCourseDescriptionChange}\n            helperText=\"This field is shown under the thumbnail\"\n            type=\"text\"\n            color=\"secondary\"\n            value={description}\n            fullWidth\n          />\n\n          <Divider />\n\n          <h3 class=\"section-heading\">Course Overview</h3>\n          <div className=\"course-overview-section\">\n            <Editor\n              editorState={editorState}\n              editorClassName=\"editor-textbox\"\n              handleKeyCommand={handleKeyCommand}\n              onEditorStateChange={onEditorStateChange}\n              label=\"Course Overview\"\n            />\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"secondary\">\n            Cancel\n            </Button>\n          <Button onClick={handleSubmit} color=\"secondary\">\n            Submit\n            </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n\nexport default CreateCourseDialog","import React, { useState } from 'react';\nimport './CreateCourse.css';\nimport { Button } from '@material-ui/core';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport Divider from '@material-ui/core/Divider';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { withRouter } from \"react-router-dom\";\nimport * as FirebaseService from '../../service/firebase.service';\nimport CreateCourseDialog from './CreateCourseDialog/CreateCourseDialog.component';\nimport CoursesDropdownComponent from '../CoursesDropdown/CoursesDropdown.component';\nimport { useHistory } from \"react-router-dom\";\n\n\nfunction CreatedCoursesComponent(props) {\n\n  return (\n    <div className=\"courses-section\">\n      <h2> Courses You've Created </h2>\n      <CoursesDropdownComponent courses={props.createdCourses} includeEditIcon={true}></CoursesDropdownComponent>\n    </div>\n  )\n}\n\nfunction CreateCourse(props) {\n  const [isCreateCourseDialogOpen, setIsCreateCourseDialogOpen] = useState(false);\n  const history = useHistory();\n\n  props.routeClicked(\"Create Course\");\n\n\n  function handleCreateCourseDialogClose() {\n    setIsCreateCourseDialogOpen(false);\n  }\n\n  function openCreateCourseDialog() {\n    setIsCreateCourseDialogOpen(true);\n\n  }\n\n  async function handleSubmit(courseInfo) {\n    courseInfo.owner = props.user.id;\n\n    courseInfo.chapters = []\n\n    const response = await FirebaseService.createCourse(props.user, courseInfo)\n    setIsCreateCourseDialogOpen(false);\n    await props.updateCourses();\n    await props.updateUser(props.user.id);\n    // Navigate to Edit Course page\n    history.push(`/editCourse/${props.user.createdCoursesRefs[props.user.createdCoursesRefs.length - 1].id}`)\n  }\n\n  const hasCurrentCourses = false\n  let currnetCoursesSection = null;\n  if (props.user && props.user.createdCourses && props.user.createdCourses.length > 0) {\n    currnetCoursesSection = <CreatedCoursesComponent createdCourses={props.user.createdCourses}></CreatedCoursesComponent>\n  } else {\n    currnetCoursesSection = <h3>You have not created any courses</h3>\n  }\n\n\n  return (\n    <div className=\"CreateCourse\">\n      <CssBaseline />\n      <Container className=\"userProfile-bottom-padding\" maxWidth=\"lg\">\n        <Paper className=\"paper\">\n          {\n            currnetCoursesSection\n          }\n          <span>\n            <Button variant=\"contained\" color=\"secondary\" onClick={openCreateCourseDialog}>\n              Create New Course\n              </Button>\n          </span>\n        </Paper>\n      </Container>\n\n      <CreateCourseDialog\n        isOpen={isCreateCourseDialogOpen}\n        handleClose={handleCreateCourseDialogClose}\n        handleSubmit={handleSubmit}\n        user={props.user}\n      />\n\n\n    </div>\n  );\n}\n\nexport default CreateCourse;\n","import React, { useState, useEffect } from 'react';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { Button } from '@material-ui/core';\n\n\nimport './CourseChapterPanel.css';\n\nfunction CourseChapterPanel(props) {\n\n    function listItemClicked(lesson) {\n        props.setChapterInContext(props.chapter);\n        props.setActiveLesson(lesson);\n    }\n\n    let lessonItems = []\n\n    const lessonsLength = props.chapter?.lessons?.length;\n    if (lessonsLength > 0) {\n        lessonItems = props.chapter.lessons.map(lesson => {\n            const isActiveLesson = (lesson === props.activeLesson);\n\n            return (\n                <span>\n                    <ListItem selected={isActiveLesson} onClick={() => listItemClicked(lesson)} id={lesson.id} button>\n                        <ListItemText primary={lesson.title} />\n                    </ListItem>\n                </span>\n            )\n        });\n    } else {\n        lessonItems[0] = <ListItem> <ListItemText primary=\"No Lessons Added\" /> </ListItem>\n    }\n\n\n    function openLessonModal() {\n        props.setChapterInContext(props.chapter);\n        props.openLessonModal(/**addLesson=*/true);\n    }\n\n    let addNewLessonButton;\n\n    if (props.editable) {\n        addNewLessonButton = <Button variant=\"contained\" onClick={openLessonModal} color=\"secondary\" id=\"add-lesson\">Add New Lesson</Button>\n    }\n\n\n    return (\n        <ExpansionPanel\n            defaultExpanded={props.chapter === props.chapterInContext}\n        >\n            <ExpansionPanelSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"panel1a-content\"\n                id=\"panel1a-header\"\n            >\n                <Typography variant=\"subtitle2\">{props.chapter.title}</Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n\n                <List dense=\"true\" className=\"lessons-list\">\n                    {lessonItems}\n                    {addNewLessonButton}\n                </List>\n\n            </ExpansionPanelDetails>\n        </ExpansionPanel>\n    )\n}\n\nexport default CourseChapterPanel;","import React from 'react';\nimport './CourseNavigationPane.css';\nimport Paper from '@material-ui/core/Paper';\nimport { IconButton, Button } from '@material-ui/core';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\n\n\nimport CourseChapterPanel from './CourseChapterPanel/CourseChapterPanel.component';\n\n\n/**\n * Generate multiple function\n */\n\n\nfunction generate(element) {\n  return [0, 1, 2].map(value =>\n    React.cloneElement(element, {\n      key: value,\n    }),\n  );\n}\n\n\n\n\nfunction CourseNavigationPane(props) {\n\n  function setChapterInContext(chapter) {\n    props.setChapterInContext(chapter);\n  }\n\n  const courseOverviewClicked = () => {\n    props.setActiveLesson(undefined);\n    props.setChapterInContext(undefined);\n  }\n\n  const openDeleteDialog = (e) => {\n    props.openDeleteDialog(\"Course\", props.course);\n  }\n\n  let courseNavigationPanels = []\n  const chaptersLength = props.course?.chapters?.length;\n\n  if (chaptersLength > 0) {\n    courseNavigationPanels = props.course.chapters.map(chapter =>\n      <CourseChapterPanel editable={props.editable} setActiveLesson={props.setActiveLesson} activeLesson={props.activeLesson} openLessonModal={props.openLessonModal} chapterInContext={props.chapterInContext} setChapterInContext={setChapterInContext} chapter={chapter} />\n    )\n  }\n\n  let addNewChapterButton;\n  let deleteCourseButton;\n  if (props.editable) {\n    addNewChapterButton = <Button id=\"new-chapter\" variant=\"contained\" onClick={props.openCreateChapterDialog} color=\"secondary\"> Add New Chapter </Button>\n    deleteCourseButton = <IconButton id=\"delete-button\" onClick={openDeleteDialog}> <DeleteForeverIcon /> </IconButton>\n  }\n\n\n  return (\n    <Paper className=\"paper\">\n      <span>\n        <Button id=\"course-overview\" size=\"medium\"\n          onClick={courseOverviewClicked}>\n          {props.course.title}\n        </Button>\n        {deleteCourseButton}\n        <br />\n      </span>\n      {courseNavigationPanels}\n      {addNewChapterButton}\n    </Paper>\n  )\n}\n\nexport default CourseNavigationPane;","import React, { useState } from 'react';\nimport YouTube from 'react-youtube';\nimport { IconButton, Button, Typography } from '@material-ui/core';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport { Editor } from 'react-draft-wysiwyg';\nimport { EditorState, convertFromRaw, ContentState } from \"draft-js\";\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport './CourseLesson.css';\n\n// Youtube Constants\n\nconst YoutubeComponentConfig = {\n    opts: {\n        height: '390',\n        width: '640',\n        playerVars: {\n            autoplay: 0,\n        },\n    },\n    videoId: \"BKorP55Aqvg\"\n\n}\n\n\nfunction EditCourseLesson(props) {\n\n    let hasYoutubeVideo = false;\n\n    function _onReady(event) {\n        // access to player in all event handlers via event.target\n        event.target.pauseVideo();\n    }\n\n\n    function openDeleteDialog(e) {\n        props.openDeleteDialog(\"Lesson\", props.lesson);\n    }\n\n\n    function goToPreviousLesson() {\n        props.navigateToPreviousLesson(props.lesson);\n    }\n\n    function goToNextLesson() {\n        props.navigateToNextLesson(props.lesson);\n    }\n\n    function getButtonDiv() {\n        if (props.isFirstLesson && props.isLastLesson) {\n            return '';\n        }\n\n        let leftButton, rightButton;\n\n        if (props.nextLesson || props.nextChapter) {\n            leftButton =\n                <Button variant=\"contained\" onClick={goToNextLesson} className=\"next-button\" color=\"secondary\" endIcon={<ArrowForwardIosIcon />}>\n                    {props.nextLesson ? \"Next Lesson\" : \"Next Chapter\"}\n                </Button>\n        }\n\n        if (props.prevLesson || props.prevChapter) {\n            rightButton =\n                <Button variant=\"contained\" onClick={goToPreviousLesson} className=\"previous-button\" color=\"secondary\" startIcon={<ArrowBackIosIcon />}>\n                    {props.prevLesson ? \"Previous Lesson\" : \"Previous Chapter\"}\n                </Button>\n        }\n\n        return (\n            <div className=\"button-div\">\n                {leftButton}\n                {rightButton}\n            </div>\n        )\n    }\n\n    function getVideoConfig() {\n        const youtubeConfig = { ...YoutubeComponentConfig };\n        const url = props.lesson?.video;\n        if (url && url.includes(\"youtube\") && (url.includes(\"v=\"))) {\n            const myParamters = url.split(\"?\");\n            var searchParams = new URLSearchParams(myParamters[1]);\n            youtubeConfig.videoId = searchParams.get('v');\n            hasYoutubeVideo = true;\n        }\n        return youtubeConfig;\n    }\n\n    function isJson(str) {\n        try {\n            JSON.parse(str);\n        } catch (e) {\n            return false;\n        }\n        return true;\n    }\n\n    let content = undefined;\n    if (props.lesson?.description && isJson(props.lesson.description)) {\n        const contentStateObj = JSON.parse(props.lesson.description);\n        const editorState = EditorState.createWithContent(convertFromRaw(contentStateObj));\n        content = <Editor\n            toolbarHidden\n            editorState={editorState}\n            readOnly={true}\n        />\n    }\n    else {\n        const text = props.lesson?.description ? props.lesson.description : \"No text entered.\";\n        content = <Editor\n            toolbarHidden\n            editorState={EditorState.createWithContent(ContentState.createFromText(text))}\n            readOnly={true}\n        />\n    }\n\n    if (props.lesson) {\n        const youtubeConfig = getVideoConfig();\n\n        return (\n            <div>\n                <div id=\"lesson-header\">\n                    <p id=\"class-title\"> {props.lesson.title} </p>\n                    {props.editable ?\n                        <IconButton id=\"delete-lesson\" onClick={openDeleteDialog}>\n                            <DeleteForeverIcon />\n                        </IconButton>\n                        :\n                        ''\n                    }\n                </div>\n                <div id=\"content\">\n                    {\n                        hasYoutubeVideo\n                            ?\n                            <YouTube videoId={youtubeConfig.videoId} opts={youtubeConfig.opts} onReady={_onReady} />\n                            :\n                            \"\"\n                    }\n                    {content}\n                    {getButtonDiv()}\n                </div>\n            </div>\n        )\n    } else {\n        return (\n            <div>\n                <h5> No Lesson Details </h5>\n            </div>\n        )\n    }\n}\n\nexport default EditCourseLesson;","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport CourseLesson from './CourseLesson/CourseLesson.component';\nimport { Button, IconButton, useRadioGroup } from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { Editor } from 'react-draft-wysiwyg';\nimport { EditorState, convertFromRaw, ContentState } from \"draft-js\";\n\nimport './CourseOverviewPane.css';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\n\nfunction CourseOverviewPane(props) {\n\n    let lessonArray = [];\n    for (let i = 0; i < props.course.chapters.length; i++) {\n        for (let j = 0; j < props.course.chapters[i].lessons?.length; j++) {\n            lessonArray.push(props.course.chapters[i].lessons[j]);\n        }\n    }\n\n    function navigateToNextLesson(lesson) {\n        const indexOfCurrentLesson = props.activeChapter.lessons.indexOf(lesson);\n\n        const enrolledInCurrentCourse = props.user.enrolledCourses.find(course => {\n            return course.id === props.course.id;\n        })\n        if (enrolledInCurrentCourse) props.addCompletedLesson(props.activeChapter.lessons[indexOfCurrentLesson]);\n\n        if (indexOfCurrentLesson !== props.activeChapter.lessons.length - 1) {\n            props.setActiveLesson(props.activeChapter.lessons[indexOfCurrentLesson + 1]);\n            return;\n        } else {\n            const activeChapterIndex = props.course.chapters.indexOf(props.activeChapter);\n            const nextChapter = props.course.chapters[activeChapterIndex + 1];\n            props.setChapterInContext(nextChapter);\n            props.setActiveLesson(nextChapter.lessons[0]);\n        }\n    }\n\n    function navigateToPreviousLesson(lesson) {\n        const indexOfCurrentLesson = props.activeChapter.lessons.indexOf(lesson);\n\n        if (indexOfCurrentLesson !== 0) {\n            props.setActiveLesson(props.activeChapter.lessons[indexOfCurrentLesson - 1]);\n            return;\n        } else {\n            const activeChapterIndex = props.course.chapters.indexOf(props.activeChapter);\n            const prevChapter = props.course.chapters[activeChapterIndex - 1];\n            props.setChapterInContext(prevChapter);\n            props.setActiveLesson(prevChapter.lessons[prevChapter.lessons.length - 1]);\n        }\n\n    }\n\n    function openLessonModal() {\n        props.openLessonModal(/**addLesson=*/false);\n    }\n\n\n    let openEditCourseOverviewDialogButton;\n    let editLessonButton;\n    if (props.editable) {\n        openEditCourseOverviewDialogButton = <IconButton variant=\"contained\" onClick={props.openEditCourseOverviewDialog} color=\"secondary\" id=\"edit-lesson\"> <EditIcon /> </IconButton>\n        editLessonButton = <IconButton variant=\"contained\" onClick={openLessonModal} color=\"secondary\" id=\"edit-lesson\"> <EditIcon /> </IconButton>\n    }\n\n    let content = undefined;\n    if (props.course.overview) {\n        const contentStateObj = JSON.parse(props.course.overview);\n        const editorState = EditorState.createWithContent(convertFromRaw(contentStateObj));\n        content = <Editor\n            toolbarHidden\n            editorState={editorState}\n            readOnly={true}\n        />\n    }\n    else {\n        content = <Editor\n            toolbarHidden\n            editorState={EditorState.createWithContent(ContentState.createFromText(\"No text entered.\"))}\n            readOnly={true}\n        />\n    }\n\n    function getLessonInformation() {\n        let prevLesson, nextLesson, prevChapter, nextChapter = false;\n\n        if (props.activeLesson) {\n            const currentLessonIndex = lessonArray.indexOf(props.activeLesson);\n            const currentLessonIndexInChapter = props.activeChapter.lessons.indexOf(props.activeLesson);\n            const numLessonsInChapter = props.activeChapter.lessons.length;\n            const numChapters = props.course.chapters.length;\n            const activeChapterIndex = props.course.chapters.indexOf(props.activeChapter);\n\n            prevLesson = currentLessonIndexInChapter > 0;\n            nextLesson = currentLessonIndexInChapter < numLessonsInChapter - 1;\n            prevChapter = currentLessonIndexInChapter === 0 && currentLessonIndex > 0\n            nextChapter = currentLessonIndexInChapter === numLessonsInChapter - 1\n                && currentLessonIndex < lessonArray.length - 1\n                && activeChapterIndex !== numChapters - 1;\n        }\n\n        return [prevLesson, nextLesson, prevChapter, nextChapter]\n    }\n\n    let enrolledButtonText;\n    if (props.user.enrolledCourses && props.user.enrolledCourses.length > 0) {\n        const enrolledInCurrentCourse = props.user.enrolledCourses.find(course => {\n            return course.id === props.course.id;\n        })\n        enrolledButtonText = enrolledInCurrentCourse ? \"Unenroll\" : \"Enroll\";\n    } else {\n        enrolledButtonText = \"Enroll\";\n    }\n\n\n    let prevLesson, nextLesson, prevChapter, nextChapter = false;\n    if (props.activeLesson) {\n        [prevLesson, nextLesson, prevChapter, nextChapter] = getLessonInformation();\n    }\n\n    return (\n        <Paper className=\"paper\">\n            {props.activeChapter ?\n                <div>\n                    {editLessonButton}\n                    <CourseLesson\n                        navigateToNextLesson={navigateToNextLesson}\n                        navigateToPreviousLesson={navigateToPreviousLesson}\n                        prevLesson={prevLesson}\n                        nextLesson={nextLesson}\n                        prevChapter={prevChapter}\n                        nextChapter={nextChapter}\n                        lesson={props.activeLesson}\n                        editable={props.editable}\n                        openDeleteDialog={props.openDeleteDialog}\n                    />\n                </div> :\n                <div>\n                    {openEditCourseOverviewDialogButton}\n                    {content}\n                    <Button onClick={props.enrollInCourse} color=\"secondary\" variant=\"contained\"> {enrolledButtonText} </Button>\n                </div>\n            }\n        </Paper>\n    )\n}\n\nexport default CourseOverviewPane;","import React, { useState } from 'react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Button } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\n\nfunction CreateChapterDialog(props) {\n  const [description, setDescription] = useState();\n  const [title, setTitle] = useState();\n\n  function onCourseTitleChange(e) {\n    setTitle(e.target.value);\n  }\n\n  function onCourseDescriptionChange(e) {\n    setDescription(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    const chapterInfo = {\n      title,\n      description,\n    }\n\n    props.handleSubmit(chapterInfo);\n  }\n\n\n  return (\n    <div>\n      <Dialog open={props.isOpen} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Create New Chapter</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Create a new chapter within your course. Enter a title and description below.\n            </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"title\"\n            label=\"Chapter Title\"\n            onChange={onCourseTitleChange}\n            type=\"text\"\n            color=\"secondary\"\n            fullWidth\n          />\n          <TextField\n            margin=\"dense\"\n            id=\"description\"\n            label=\"Chapter Description\"\n            onChange={onCourseDescriptionChange}\n            type=\"text\"\n            color=\"secondary\"\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.handleClose} color=\"secondary\">\n            Cancel\n            </Button>\n          <Button onClick={handleSubmit} color=\"secondary\">\n            Submit\n            </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n\nexport default CreateChapterDialog","import React, { useState, useEffect } from 'react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Button } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport { Editor } from 'react-draft-wysiwyg';\nimport { EditorState, convertFromRaw, ContentState, convertToRaw, RichUtils } from \"draft-js\";\n\n// import './CreateLessonDialog.css';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\n\nfunction CreateLessonDialog(props) {\n  const [description, setDescription] = useState();\n  const [title, setTitle] = useState();\n  const [video, setVideo] = useState();\n  const [isDescriptionError, setIsDescriptionError] = useState(false);\n  const [isTitleError, setIsTitleError] = useState(false);\n  const [isYoutubeError, setIsYoutubeError] = useState(false);\n  const [editorState, setEditorState] = useState();\n\n  function onEditorStateChange(editorState) {\n    setEditorState(editorState);\n    const currentContentState = editorState.getCurrentContent();\n    setDescription(JSON.stringify(convertToRaw(currentContentState)));\n  };\n\n  function handleKeyCommand(command) {\n    const newState = RichUtils.handleKeyCommand(editorState, command);\n    if (newState) {\n      setEditorState(newState);\n      return 'handled';\n    }\n    return 'not-handled';\n  };\n\n  function onCourseTitleChange(e) {\n    setTitle(e.target.value);\n  }\n\n  function onVideoUrlChange(e) {\n    setVideo(e.target.value);\n  }\n\n  function isValidTitle() {\n    if (title && title.length > 0) {\n      setIsTitleError(false)\n      return true;\n    } else {\n      setIsTitleError(true);\n      return false;\n    }\n\n  }\n\n  function isValidDescription() {\n    if (description && (isJson(description) || description.length > 0)) {\n      setIsDescriptionError(false)\n      return true;\n    } else {\n      setIsDescriptionError(true);\n      return false;\n    }\n  }\n\n  function isValidYoutubeURL() {\n    if (video === undefined || video.length === 0) {\n      setIsYoutubeError(false);\n      return true;\n    } else if (video && video.includes(\"youtube\") && (video.includes(\"v=\"))) {\n      setIsYoutubeError(false);\n      return true;\n    } else {\n      setIsYoutubeError(true);\n      return false;\n    }\n  }\n\n  function handleSubmit(e) {\n    const id = props.lesson?.id ? props.lesson.id : undefined;\n\n    const currentContentState = editorState.getCurrentContent();\n    const descriptionJSON = JSON.stringify(convertToRaw(currentContentState));\n    setDescription(descriptionJSON);\n\n    let tempVideo = \"\";\n    if (isValidTitle() && isValidDescription() && isValidYoutubeURL()) {\n      if (video === undefined || video.length === 0) {\n        setVideo(\"\"); // So firebase won't die with undefined.\n      } else {\n        tempVideo = video;\n      }\n      const lessonInfo = {\n        id,\n        title,\n        description: descriptionJSON,\n        video: tempVideo,\n      }\n      props.updateLesson(lessonInfo, props.add);\n    }\n  }\n\n  function handleClose() {\n    // Reset State\n    setTitle();\n    setVideo();\n    setDescription();\n    setIsTitleError(false);\n    setIsDescriptionError(false);\n    setIsYoutubeError(false);\n    setEditorState(EditorState.createEmpty());\n    props.handleClose();\n  }\n\n  function isJson(str) {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n\n  useEffect(() => {\n    if (!props.add && props.lesson) {\n      setTitle(props.lesson.title);\n      setDescription(props.lesson.description);\n      setVideo(props.lesson.video);\n      if (props.lesson.description) {\n        if (isJson(props.lesson.description)) {\n          setEditorState(EditorState.createWithContent(convertFromRaw(JSON.parse(props.lesson.description))));\n        } else {\n          // For backwards compatibility\n          setEditorState(EditorState.createWithContent(ContentState.createFromText(props.lesson.description)));\n        }\n      }\n      else {\n        setEditorState(EditorState.createEmpty());\n      }\n    } else {\n      setTitle()\n      setDescription()\n      setVideo()\n      setEditorState(EditorState.createEmpty());\n    }\n\n  }, [props]);\n\n  return (\n    <div>\n      <Dialog open={props.isOpen} onClose={handleClose} aria-labelledby=\"form-dialog-title\" maxWidth=\"md\">\n        <DialogTitle id=\"form-dialog-title\">{props.add ? \"Create New\" : \"Edit\"} Lesson</DialogTitle>\n        <DialogContent>\n          {props.add ?\n            <DialogContentText>\n              Add a new lesson to your course\n            </DialogContentText>\n            :\n            <DialogContentText>\n              Edit existing lesson\n            </DialogContentText>\n          }\n\n          <TextField\n            autoFocus\n            required\n            margin=\"normal\"\n            error={isTitleError}\n            id=\"title\"\n            label=\"Lesson Title\"\n            onChange={onCourseTitleChange}\n            type=\"text\"\n            color=\"secondary\"\n            value={title}\n            helperText={isTitleError ? \"Title is a required field\" : \"\"}\n            fullWidth\n          />\n          <TextField\n            margin=\"normal\"\n            error={isYoutubeError}\n            id=\"video\"\n            label=\"Video URL (optional)\"\n            onChange={onVideoUrlChange}\n            type=\"text\"\n            color=\"secondary\"\n            value={video}\n            helperText={isYoutubeError ? \"Youtube URL is malformed. It must have the form: https://www.youtube.com?v=<SomeCharacterString>\" : \"\"}\n            fullWidth\n          />\n          <Editor\n            editorState={editorState}\n            wrapperClassName=\"editor-wrapper\"\n            editorClassName=\"editor-textbox\"\n            handleKeyCommand={handleKeyCommand}\n            onEditorStateChange={onEditorStateChange}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.handleClose} color=\"secondary\">\n            Cancel\n            </Button>\n          <Button onClick={handleSubmit} color=\"secondary\">\n            Submit\n            </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n\nexport default CreateLessonDialog","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default function DeleteDialog(props) {\n\n  const handleSubmit = () => {\n    props.handleSubmit();\n  }\n\n\n  return (\n    <div>\n      <Dialog\n        open={props.isOpen}\n        onClose={props.handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{`Delete ${props.deleteType}?`}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Are you sure you want to delete this {props.deleteType?.toLowerCase()}?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.handleClose} color=\"secondary\" autoFocus>\n            Cancel\n          </Button>\n          <Button onClick={handleSubmit} color=\"secondary\" >\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React, { useEffect, useState } from 'react';\nimport './CourseOverview.css';\nimport {\n    Link as RouterLink,\n    useParams,\n    useHistory\n} from \"react-router-dom\";\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { withRouter } from \"react-router-dom\";\nimport { Button } from '@material-ui/core';\nimport * as FirebaseService from '../../service/firebase.service';\nimport CourseNavigationPane from './CourseNavigationPane/CourseNavigationPane.component';\n\nimport CourseOverviewPane from './CourseOverviewPane/CourseOverviewPane.component';\nimport CreateChapterDialog from './Dialogs/CreateChapterDialog/CreateChapterDialog.component';\nimport CreateLessonDialog from './Dialogs/CreateLessonDialog/CreateLessonDialog.component';\nimport EditCourseOverviewDialog from './Dialogs/EditCourseOverviewDialog/EditCourseOverviewDialog.component';\nimport CreateCourseDialog from '../CreateCourse/CreateCourseDialog/CreateCourseDialog.component';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport DeleteDialog from './Dialogs/DeleteDialog/DeleteDialog.component';\n\n\n\n\nfunction CourseOverview(props) {\n    // Get ID from Route Params\n    let { id } = useParams();\n    // Create State Variables\n    const [course, setCourse] = useState();\n    const [error, setError] = useState();\n    const [isCreateChapterDialogOpen, setIsCreateChapterDialogOpen] = useState(false);\n    const [isCreateLessonDialogOpen, setIsCreateLessonDialogOpen] = useState(false);\n    const [isEditCourseOverviewDialogOpen, setIsEditCourseOverviewDialogOpen] = useState(false);\n    const [isDeleteDialogOpen, setIsDeleteDialogOpen] = useState(false);\n    const [chapterInContext, setChapterInContext] = useState();\n    const [activeLesson, setActiveLesson] = useState();\n    const [addLesson, setAddLesson] = useState();\n    const [deleteType, setDeleteType] = useState();\n    const [objToDelete, setObjToDelete] = useState();\n    const [isDeleting, setIsDeleting] = useState(false);\n    const history = useHistory();\n\n\n    props.routeClicked(\"Course Overview\");\n\n\n\n    function handleCreateChapterClose() {\n        setIsCreateChapterDialogOpen(false);\n    }\n\n    function openCreateChapterDialog() {\n        setIsCreateChapterDialogOpen(true);\n    }\n\n    function handleCreateLessonDialogClose() {\n        setIsCreateLessonDialogOpen(false);\n    }\n\n    function openCreateLessonDialog(addLesson) {\n        setAddLesson(addLesson);\n        setIsCreateLessonDialogOpen(true);\n    }\n\n    function handleEditCourseOverviewDialogClose() {\n        setIsEditCourseOverviewDialogOpen(false);\n    }\n\n    function openEditCourseOverviewDialog() {\n        setIsEditCourseOverviewDialogOpen(true);\n    }\n\n    function viewPublished() {\n        props.history.push(`/courseOverview/${course.id}`);\n    }\n\n    function openDeleteDialog(deleteType, objToDelete) {\n        setIsDeleteDialogOpen(true);\n        setDeleteType(deleteType);\n        setObjToDelete(objToDelete)\n    }\n\n    function handleCloseDeleteDialog() {\n        setIsDeleteDialogOpen(false);\n    }\n\n    async function handleDeleteSubmit() {\n\n        props.setDeletingCourse(true)\n\n        if (deleteType === 'Course') {\n            await FirebaseService.deleteCourse(objToDelete);\n            await props.updateCourses()\n            await props.updateUser(props.user.id);\n            history.push('/courseLibrary');\n\n        } else if (deleteType === 'Lesson') {\n\n            await FirebaseService.deleteLesson(course, chapterInContext, objToDelete);\n            setActiveLesson();\n            setChapterInContext();\n            await props.updateCourses();\n            await props.updateUser(props.user.id);\n        }\n\n        props.setDeletingCourse(false);\n\n    }\n\n    async function updateLesson(lessonInfo, add) {\n\n        await FirebaseService.updateLesson(course, chapterInContext, lessonInfo, add).then(() => {\n            getCourseById(id);\n            setAddLesson(add);\n            setIsCreateLessonDialogOpen(false);\n        }).catch((err) => { console.log(err) });\n    }\n\n    async function updateCourse(courseInfo) {\n        setIsEditCourseOverviewDialogOpen(false);\n        if (courseInfo.thumbnailFile === undefined) {\n            courseInfo.thumbnailFile = \"\";\n        }\n        await FirebaseService.updateCourse(course.id, courseInfo);\n        props.updateCourses();\n        getCourseById(id);\n    }\n\n    async function addNewChapter(chapterInfo) {\n        await FirebaseService.addNewChapter(course, chapterInfo);\n        getCourseById(id);\n        setIsCreateChapterDialogOpen(false);\n    }\n\n\n    async function resolveLessons(chapter) {\n        const lessonsRefLength = chapter.lessonsRef?.length;\n        if (lessonsRefLength > 0) {\n            return Promise.all(\n                chapter.lessonsRef.map(async lessonRef => {\n                    const lesson = await FirebaseService.getDocFromDocRef(lessonRef)\n                    return lesson;\n                })\n            ).then(results => {\n                chapter.lessons = results;\n                return chapter;\n            });\n\n        } else {\n            return Promise.resolve(chapter);\n        }\n    }\n\n    async function resolveChapters(chapters) {\n        return Promise.all(chapters.map(chapter => resolveLessons(chapter)))\n    }\n\n    async function getCourseById(id) {\n        const course = await FirebaseService.getCourseById(id);\n        course.chapters = await resolveChapters(course.chapters);\n        if (chapterInContext) {\n            const chapter = course.chapters.find(chapter => chapter.id === chapterInContext.id);\n            setChapterInContext(chapter);\n        }\n        setCourse(course);\n    }\n\n    async function enrollInCourse() {\n        let enrolled = false;\n        if (props.user.enrolledCourses) {\n            enrolled = props.user.enrolledCourses.find(c => {\n                return c.id === course.id;\n            })\n        }\n\n        if (enrolled) {\n            await FirebaseService.unenrollInCourse(props.user, course);\n        } else {\n            await FirebaseService.enrollInCourse(props.user, course);\n        }\n\n        props.updateUser(props.user.id);\n    }\n\n    function addCompletedLesson(lesson) {\n        console.log(lesson)\n\n        // TODO(jessi): Add lesson to list of completed lessons in Firebase.\n    }\n\n    useEffect(() => {\n        if (id && !props.isDeletingCourse) {\n            getCourseById(id);\n        }\n    }, []);\n\n    useEffect(() => {\n        // after adding/editing a lesson, ensure we navigate to the freshest version\n        if (course && chapterInContext) {\n            if (!addLesson) {\n                const updatedLesson = course.chapters[chapterInContext.id].lessons.find(lesson => {\n                    if (lesson.id === activeLesson.id) {\n                        return lesson;\n                    }\n                });\n                if (updatedLesson) {\n                    setActiveLesson(updatedLesson);\n                }\n            } else {\n                const lessons = course.chapters[chapterInContext.id].lessons;\n                setActiveLesson(lessons[lessons.length - 1]);\n            }\n        }\n    }, [course]);\n\n    let dialogs;\n    let viewPublishedCourseButton;\n    if (props.editable) {\n        dialogs = <div>\n            <CreateChapterDialog isOpen={isCreateChapterDialogOpen} handleSubmit={addNewChapter} handleClose={handleCreateChapterClose} />\n            <CreateLessonDialog\n                isOpen={isCreateLessonDialogOpen}\n                add={addLesson}\n                lesson={activeLesson}\n                updateLesson={updateLesson}\n                handleClose={handleCreateLessonDialogClose} />\n\n            <CreateCourseDialog\n                isOpen={isEditCourseOverviewDialogOpen}\n                handleClose={handleEditCourseOverviewDialogClose}\n                course={course}\n                handleSubmit={updateCourse}\n            />\n            <DeleteDialog\n                isOpen={isDeleteDialogOpen}\n                handleClose={handleCloseDeleteDialog}\n                handleSubmit={handleDeleteSubmit}\n                deleteType={deleteType}\n                objToDelete={objToDelete}\n            />\n        </div>\n\n        viewPublishedCourseButton = <Button variant=\"contained\" color=\"secondary\" id=\"view-published\" onClick={viewPublished}> View Published Course </Button>\n    }\n\n\n\n    if (course) {\n        return (\n            <div className=\"edit-course\">\n                <Grid container spacing={6}>\n                    <Grid item xs={3}>\n                        <CourseNavigationPane\n                            editable={props.editable}\n                            activeLesson={activeLesson}\n                            setActiveLesson={setActiveLesson}\n                            addCompletedLesson={addCompletedLesson}\n                            openLessonModal={openCreateLessonDialog}\n                            chapterInContext={chapterInContext}\n                            setChapterInContext={setChapterInContext}\n                            course={course}\n                            openCreateChapterDialog={openCreateChapterDialog}\n                            openDeleteDialog={openDeleteDialog}\n                        />\n                        {viewPublishedCourseButton}\n                    </Grid>\n                    <Grid item xs={9}>\n                        <CourseOverviewPane\n                            setActiveLesson={setActiveLesson}\n                            addCompletedLesson={addCompletedLesson}\n                            setChapterInContext={setChapterInContext}\n                            editable={props.editable}\n                            user={props.user}\n                            activeChapter={chapterInContext}\n                            activeLesson={activeLesson}\n                            course={course}\n                            openEditCourseOverviewDialog={openEditCourseOverviewDialog}\n                            openLessonModal={openCreateLessonDialog}\n                            openDeleteDialog={openDeleteDialog}\n                            enrollInCourse={enrollInCourse}\n                        />\n                    </Grid>\n                </Grid>\n                {dialogs}\n            </div>\n        );\n    } else {\n        return (\n            <div>\n                Loading...\n                <CircularProgress></CircularProgress>\n            </div>\n        )\n    }\n\n\n}\n\nexport default withRouter(CourseOverview);","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { AppBar, Toolbar, IconButton, Typography, Button, } from '@material-ui/core';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link as RouterLink,\n  Redirect,\n  withRouter,\n  browserHistory\n} from \"react-router-dom\";\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport CourseLibrary from './components/CourseLibrary/CourseLibrary';\nimport Login from './components/Login/Login';\nimport MyCourses from './components/MyCourses/MyCourses';\nimport UserProfile from './components/UserProfile/UserProfile';\nimport CreateCourse from './components/CreateCourse/CreateCourse.component';\nimport CourseOverview from './components/CourseOverview/CourseOverview.component';\nimport { MuiThemeProvider, ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nimport * as FirebaseService from '../src/service/firebase.service'\n\nconst buttonTheme = createMuiTheme({\n  palette: {\n    primary: { // peaches\n      main: '#87618c',\n    },\n    secondary: {  // purples\n      main: '#442b4a',\n    },\n  },\n  typography: {\n    useNextVariants: true\n  },\n  overrides: {\n    MuiButton: {\n      root: {\n        textTransform: 'none',\n      },\n    },\n  },\n});\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: { // peaches\n      light: '#f44336',\n      main: '#f6eee7',\n      dark: '#dbbca1',\n    },\n    secondary: {  // purples\n      light: '#a17da5',\n      main: '#87618c',\n      dark: '#442b4a',\n    },\n  },\n  typography: {\n    useNextVariants: true\n  },\n  overrides: {\n    MuiButton: {\n      root: {\n        textTransform: 'none',\n      },\n    },\n  },\n})\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      courses: [],\n      users: [],\n      currentUser: undefined,\n      loadingUser: true,\n      myCourseSelected: false,\n      allCoursesSelected: false,\n      createCourseSelected: false,\n      isDeletingCourse: false\n    };\n    this.fetchCourses = this.fetchCourses.bind(this);\n    this.fetchUsers = this.fetchUsers.bind(this);\n    this.render = this.render.bind(this);\n    this.updateUser = this.updateUser.bind(this);\n    this.setUser = this.setUser.bind(this);\n    this.getUserOnLoad = this.getUserOnLoad.bind(this);\n    this.routeClicked = this.routeClicked.bind(this);\n    this.deletingCourse = this.deletingCourse.bind(this);\n    this.fetchCourses().then(() => {\n      this.getUserOnLoad();\n    });\n  }\n\n  async updateUser(userId) {\n    if (!userId) {\n      this.setState({ currentUser: undefined });\n      this.setState({ loadingUser: false });\n      return;\n    }\n    await FirebaseService.getUserById(userId)\n      .then(result => {\n        const user = result.data();\n\n        if (user.createdCoursesRefs && user.createdCoursesRefs.length > 0) {\n\n          const newCourses = user.createdCoursesRefs\n            .map(courseRef => this.state.courses.find(course => course.id === courseRef.id));\n\n          user.createdCourses = user.createdCoursesRefs\n            .map(courseRef => this.state.courses.find(course => course.id === courseRef.id));\n        }\n\n        if (user.enrolledCoursesRefs && user.enrolledCoursesRefs.length > 0) {\n          user.enrolledCourses = user.enrolledCoursesRefs\n            .map(courseRef => this.state.courses.find(course => course.id === courseRef.id));\n        }\n\n        if (user.favoritedCoursesRefs && user.favoritedCoursesRefs.length > 0) {\n          user.favoritedCourses = user.favoritedCoursesRefs\n            .map(courseRef => this.state.courses.find(course => course.id === courseRef.id));\n        }\n\n        this.setState({ currentUser: user });\n        this.setState({ loadingUser: false });\n\n      })\n  }\n\n  deletingCourse(value) {\n    this.setState({\n      isDeletingCourse: value\n    }\n    )\n  }\n\n  getUserOnLoad() {\n    let user = FirebaseService.getCurrentUser();\n    if (user) {\n      this.updateUser(user.uid);\n    } else if (document.cookie.split(';').some((item) => item.trim().startsWith('userid='))) {\n      var cookieValue = document.cookie.replace(/(?:(?:^|.*;\\s*)userid\\s*\\=\\s*([^;]*).*$)|^.*$/, \"$1\");\n      this.updateUser(cookieValue);\n    } else {\n      this.updateUser(undefined);\n    }\n  }\n\n  setUser(user) {\n    this.updateUser(user.id);\n    document.cookie = `userid=${user.id}`;\n  }\n\n  async fetchCourses() {\n    let courses = [];\n    await FirebaseService.getAllCourses().then((queryResults) => {\n      queryResults.forEach((doc) => {\n        const course = doc.data();\n        const courseId = doc.id;\n        course.owner.get().then(user => {\n          course.owner = user.data();\n        })\n        course.id = courseId\n        courses.push(course);\n        this.setState({ courses: courses });\n      });\n    });\n  }\n\n  async fetchUsers() {\n    let users = [];\n    await FirebaseService.getAllUsers()\n      .then((queryResults) => {\n        queryResults.forEach((doc) => {\n          const user = doc.data();\n          user.id = doc.id;\n          users.push(user);\n          this.setState({\n            users\n          })\n        })\n      })\n  }\n\n  routeClicked(location) {\n    if (location === \"Course Library\" && !this.state.allCoursesSelected) {\n      this.setState({\n        allCoursesSelected: true,\n        myCourseSelected: false,\n        createCourseSelected: false,\n      })\n    } else if (location === \"My Courses\" && !this.state.myCourseSelected) {\n      this.setState({\n        allCoursesSelected: false,\n        myCourseSelected: true,\n        createCourseSelected: false,\n      })\n    } else if (location === \"Create Course\" && !this.state.createCourseSelected) {\n      this.setState({\n        allCoursesSelected: false,\n        myCourseSelected: false,\n        createCourseSelected: true,\n      })\n    } else if ((location !== \"Course Library\" && location !== \"My Courses\" && location !== \"Create Course\")\n      && (this.state.allCoursesSelected || this.state.myCourseSelected || this.state.createCourseSelected)) {\n      this.setState({\n        allCoursesSelected: false,\n        myCourseSelected: false,\n        createCourseSelected: false,\n      })\n    }\n\n  }\n\n  render() {\n\n    // If not logged in redirect to the login page with redirect info. Url will\n    // briefly flash to login while we figure out if we have a user.\n    const PrivateRoute = ({ isLoggedIn, ...props }) =>\n      this.state.currentUser\n        ? <Route {...props} />\n        : <Redirect to={{\n          pathname: '/login',\n          state: { from: props.location }\n        }} />\n\n    return (\n      <MuiThemeProvider theme={theme}>\n        <Router onChange={this.browserRouteChanged}>\n          <div>\n            <nav hidden={!this.state.currentUser}>\n              <AppBar position=\"static\">\n                <Toolbar>\n                  <MuiThemeProvider theme={buttonTheme}>\n                    <Button variant=\"contained\" color={this.state.allCoursesSelected ? \"secondary\" : \"primary\"} className=\"menu-button main\" component={RouterLink} to=\"/courseLibrary\">All Courses</Button>\n                    <Button variant=\"contained\" color={this.state.myCourseSelected ? \"secondary\" : \"primary\"} className=\"menu-button main\" component={RouterLink} to=\"/myCourses\">My Courses</Button>\n                    <Button variant=\"outlined\" color={this.state.createCourseSelected ? \"secondary\" : \"primary\"} className=\"menu-button align-left\" component={RouterLink} to=\"/createCourse\">Create a Course</Button>\n                  </MuiThemeProvider>\n                  <IconButton className=\"menu-button profile-icon\" component={RouterLink} to=\"/profile\" color=\"inherit\" aria-label=\"menu\">\n                    <AccountCircleIcon />\n                  </IconButton>\n                </Toolbar>\n              </AppBar>\n            </nav>\n\n            {/* A <Switch> looks through its children <Route>s and\n                renders the first one that matches the current URL. */}\n            <Switch>\n              <Route exact path=\"/login\">\n                <Login routeClicked={this.routeClicked} completeLogin={this.setUser} user={this.state.currentUser} loadingUser={this.state.loadingUser} />\n              </Route>\n              <PrivateRoute path=\"/(courseLibrary|)\">\n                <CourseLibrary routeClicked={this.routeClicked} courses={this.state.courses} user={this.state.currentUser} updateUser={this.updateUser} />\n              </PrivateRoute>\n              <PrivateRoute path=\"/courseOverview/:id\">\n                <CourseOverview routeClicked={this.routeClicked} editable={false} user={this.state.currentUser}></CourseOverview>\n              </PrivateRoute>\n              <PrivateRoute path=\"/myCourses\">\n                <MyCourses routeClicked={this.routeClicked} user={this.state.currentUser}></MyCourses>\n              </PrivateRoute>\n              <PrivateRoute path=\"/profile\">\n                <UserProfile routeClicked={this.routeClicked} user={this.state.currentUser} updateUser={this.updateUser}></UserProfile>\n              </PrivateRoute>\n              <PrivateRoute path=\"/createCourse\">\n                <CreateCourse routeClicked={this.routeClicked} user={this.state.currentUser} updateUser={this.updateUser} updateCourses={this.fetchCourses}></CreateCourse>\n              </PrivateRoute>\n              <PrivateRoute path=\"/editCourse/:id\">\n                <CourseOverview setDeletingCourse={this.deletingCourse} isDeletingCourse={this.state.isDeletingCourse} routeClicked={this.routeClicked} editable={true} user={this.state.currentUser} updateUser={this.updateUser} updateCourses={this.fetchCourses}></CourseOverview>\n              </PrivateRoute>\n            </Switch>\n          </div>\n        </Router>\n      </MuiThemeProvider>\n    )\n  }\n};\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}