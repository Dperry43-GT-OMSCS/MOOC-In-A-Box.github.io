{"version":3,"sources":["components/CourseCard/CourseCard.js","components/CourseLibrary/CourseLibraryToolbar/SearchBar/SearchBar.component.js","components/CourseLibrary/CourseLibraryToolbar/CourseLibraryToolbarMenu/CourseLibraryToolbarMenuItem/CourseLibraryToolbarMenuItem.component.js","components/CourseLibrary/CourseLibraryToolbar/CourseLibraryToolbarMenu/CourseLibraryToolbarMenu.component.js","components/CourseLibrary/CourseLibraryToolbar/CourseLibraryToolbar.component.js","service/firebase.service.js","components/CourseLibrary/CourseLibrary.js","components/Login/Login.js","components/CoursesDropdown/CoursesDropdown.component.js","components/MyCourses/MyCourses.js","components/UserProfile/EditDialog/EditDialog.component.js","components/UserProfile/UserProfileSection/UserProfileSection.component.js","components/UserProfile/UserProfile.js","components/CreateCourse/CreateCourseDialog/CreateCourseDialog.component.js","components/CreateCourse/CreateCourse.component.js","components/CourseOverview/CourseNavigationPane/CourseChapterPanel/CourseChapterPanel.component.js","components/CourseOverview/CourseNavigationPane/CourseNavigationPane.component.js","components/CourseOverview/CourseOverviewPane/CourseLesson/CourseLesson.component.js","components/CourseOverview/CourseOverviewPane/CourseOverviewPane.component.js","components/CourseOverview/Dialogs/CreateChapterDialog/CreateChapterDialog.component.js","components/CourseOverview/Dialogs/CreateLessonDialog/CreateLessonDialog.component.js","components/CourseOverview/Dialogs/EditCourseOverviewDialog/EditCourseOverviewDialog.component.js","components/CourseOverview/CourseOverview.component.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","maxWidth","minWidth","maxHeight","minHeight","position","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","actionsRow","bottom","left","content","paddingBottom","CourseCard","props","classes","React","useState","isFavorited","setIsFavorited","isCourseAFavorite","Card","variant","className","CardHeader","title","course","subheader","owner","displayName","action","IconButton","aria-label","onClick","removeFavoriteClicked","favoriteClicked","CardMedia","image","CardContent","Typography","color","component","description","CardActions","disableSpacing","Button","Link","to","id","SearchBar","TextField","value","searchValue","onChange","type","onSearchClicked","CourseLibraryToolbarMenuItem","FormControlLabel","control","Radio","label","CourseLibraryToolbarMenu","menuItems","options","map","option","handleClick","associatedClickFunction","display","Menu","menuId","anchorEl","element","keepMounted","open","Boolean","onClose","closeFunction","MenuItem","FormControl","FormLabel","menuLabel","RadioGroup","name","radioGroupName","menuValue","event","target","CourseLibraryToolbar","menuButtons","menuItem","clickedFunction","buttonText","menus","menuOptions","AppBar","Toolbar","searchInfo","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","getUserById","userId","collection","doc","get","getAllUsers","updateUser","updates","a","set","merge","createUser","userAuth","uid","photoURL","email","getCurrentUser","user","auth","currentUser","deleteUser","delete","then","document","cookie","catch","error","console","log","getCourseById","courseId","courseResult","exists","data","createCourse","courseInfo","userDocRef","lessonRef","chapter","lessons","add","chapters","courseDoc","usersCreatedCourses","createdCoursesRefs","length","courseRef","push","updateObject","favoriteCourse","favoritedCourses","favoritedCoursesRefs","removeFavoriteCourse","filter","item","updateCourse","updateCourseOverview","contentJSON","JSON","stringify","overview","addNewChapter","newChapterInfo","lessonsRef","updateLesson","chapterInfo","lessonInfo","lessonDoc","logUserInUser","isGoog","provider","GoogleAuthProvider","FacebookAuthProvider","users","undefined","authUser","queryResults","forEach","signInWithPopup","result","u","signOut","getDocFromDocRef","docRef","myResult","CourseLibrary","sortByClicked","setState","sortByElement","currentTarget","sortByHandleClose","sortFilterValue","topicClicked","topicElement","topicHandleClose","topicFilterValue","organizationClicked","organizationElement","organizationHandleClosed","organizationFilterValue","buildMenuItems","state","find","favoritedCourse","handleSearchChange","bind","handleSearchClicked","activeCourses","courses","e","this","includes","FirebaseService","listItems","Grid","s","class","container","spacing","Component","LoginPage","redirectToReferrer","loginGoogle","loginFacebook","completeLogin","history","loadingUser","CircularProgress","from","location","pathname","withRouter","CoursesDropdownComponent","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","xs","md","List","dense","ListItem","RouterLink","includeEditIcon","CurrentCoursesComponent","currentCourses","PastCoursesComponent","pastCourses","SavedCoursesComponent","savedCourses","CreatedCoursesComponent","createdCourses","MyCourses","setUser","useEffect","courseComponentList","hasCourses","pastCourse","CssBaseline","Container","Paper","EditDialog","Dialog","isOpen","handleClose","aria-labelledby","DialogTitle","field","DialogContent","DialogContentText","autoFocus","margin","fullWidth","DialogActions","handleSubmit","userKeyToDisplayMap","UserProfileSection","align","displayValue","isEditable","openDialog","isDialogOpen","displayKey","setDisplayName","oldDisplayName","setOldDiplayName","isDisplayNameDialogOpen","setIsDisplayNameDialogOpen","userInterests","setUserInterests","oldUserInterests","setOldUserInterests","isUserInterestsDialogOpen","setIsUserInterestsDialogOpen","res","interests","err","Divider","CreateCourseDialog","setDescription","setTitle","courseDetails","CreateCourse","isCreateCourseDialogOpen","setIsCreateCourseDialogOpen","useHistory","sectionTitle","updateCourses","currnetCoursesSection","CourseChapterPanel","addNewLessonButton","lessonItems","lesson","isActiveLesson","activeLesson","selected","setChapterInContext","setActiveLesson","listItemClicked","button","ListItemText","primary","editable","openLessonModal","defaultExpanded","chapterInContext","CourseNavigationPane","addNewChapterButton","courseNavigationPanels","openCreateChapterDialog","YoutubeComponentConfig","opts","width","playerVars","autoplay","videoId","EditCourseLesson","goToPreviousLesson","navigateToPreviousLesson","goToNextLesson","navigateToNextLesson","youtubeConfig","url","video","myParamters","split","searchParams","URLSearchParams","getVideoConfig","onReady","pauseVideo","isFirstLesson","isLastLesson","nextLesson","nextChapter","leftButton","endIcon","prevLesson","prevChapter","rightButton","startIcon","getButtonDiv","CourseOverviewPane","openEditCourseOverviewDialogButton","lessonArray","i","j","openEditCourseOverviewDialog","contentStateObj","parse","editorState","EditorState","createWithContent","convertFromRaw","toolbarHidden","readOnly","ContentState","createFromText","currentLessonIndex","indexOf","currentLessonIndexInChapter","activeChapter","numLessonsInChapter","numChapters","activeChapterIndex","getLessonInformation","indexOfCurrentLesson","CreateChapterDialog","CreateLessonDialog","initialTitle","initialDescription","initialVideo","setVideo","defaultValue","titleUpdate","descrUpdate","videoUpdate","EditCourseOverviewDialog","contentState","setContentState","setEditorState","createEmpty","editorClassName","handleKeyCommand","command","newState","RichUtils","onEditorStateChange","currentContentState","getCurrentContent","convertToRaw","dialogs","viewPublishedCourseButton","useParams","setCourse","isCreateChapterDialogOpen","setIsCreateChapterDialogOpen","isCreateLessonDialogOpen","setIsCreateLessonDialogOpen","isEditCourseOverviewDialogOpen","setIsEditCourseOverviewDialogOpen","openCreateLessonDialog","addLesson","resolveLessons","Promise","all","results","resolve","resolveChapters","createMuiTheme","palette","light","main","dark","secondary","typography","useNextVariants","overrides","MuiButton","textTransform","App","fetchCourses","fetchUsers","render","getUserOnLoad","pastCoursesRefs","some","trim","startsWith","cookieValue","replace","PrivateRoute","isLoggedIn","hidden","exact","path","window","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"svBAwBMA,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,SAAU,IACVC,SAAU,IACVC,UAAW,IACXC,UAAW,IACXC,SAAU,YAEZC,MAAO,CACLC,OAAQ,EACRC,WAAY,UAEdC,OAAQ,CACNC,UAAW,eACXC,WAAY,OACZC,WAAYb,EAAMc,YAAYC,OAAO,YAAa,CAChDC,SAAUhB,EAAMc,YAAYE,SAASC,YAGzCC,WAAY,CACVP,UAAW,kBAEbQ,OAAQ,CACNC,gBAAiBC,IAAI,MAEvBC,WAAY,CACVhB,SAAU,WACViB,OAAQ,EACRC,KAAM,GAERC,QAAS,CACPC,cAAe,YAIJ,SAASC,EAAWC,GACjC,IAAMC,EAAU/B,IADwB,EAERgC,IAAMC,UAAS,GAFP,gCAGFD,IAAMC,UAAS,IAHb,mBAGjCC,EAHiC,KAGpBC,EAHoB,KAMnCL,EAAMM,mBAAqBF,GAC9BC,EAAeL,EAAMM,mBAmBvB,OACE,kBAACC,EAAA,EAAD,CAAMC,QAAQ,WAAWC,UAAWR,EAAQ5B,MAC1C,kBAACqC,EAAA,EAAD,CACEC,MAAOX,EAAMY,OAAOD,MACpBE,UAAWb,EAAMY,OAAOE,MAAMC,YAC9BC,OACE,kBAACC,EAAA,EAAD,CAAYC,aAAW,mBAAmBC,QAjBpB,WACxBf,GACFC,GAAe,GACfL,EAAMoB,sBAAsBpB,EAAMY,UAElCP,GAAe,GACfL,EAAMqB,gBAAgBrB,EAAMY,WAYrBR,EAAc,kBAAC,IAAD,MAAmB,kBAAC,IAAD,SAIxC,kBAACkB,EAAA,EAAD,CACEb,UAAWR,EAAQtB,MACnB4C,MAAM,kCACNZ,MAAM,gBAER,kBAACa,EAAA,EAAD,CAAaf,UAAWR,EAAQJ,SAC9B,kBAAC4B,EAAA,EAAD,CAAYjB,QAAQ,QAAQkB,MAAM,gBAAgBC,UAAU,KACzD3B,EAAMY,OAAOgB,aAEhB,kBAACH,EAAA,EAAD,CAAYjB,QAAQ,QAAQkB,MAAM,gBAAgBC,UAAU,KACzD3B,EAAMY,OAAOE,MAAMC,cAGxB,kBAACc,EAAA,EAAD,CAAapB,UAAWR,EAAQP,WAAYoC,gBAAc,GACxD,kBAACC,EAAA,EAAD,CACEvB,QAAQ,YACRkB,MAAM,YACNC,UAAWK,IACXC,GAAE,0BAAqBjC,EAAMY,OAAOsB,KAJtC,c,sDC3FOC,MAXf,SAAmBnC,GACjB,OACE,yBAAKS,UAAU,cACb,kBAAC2B,EAAA,EAAD,CAAWC,MAAOrC,EAAMsC,YAAaC,SAAUvC,EAAMuC,SAAUL,GAAG,kBAAkBM,KAAK,SAAShC,QAAQ,WAAWkB,MAAM,cAC3H,kBAACT,EAAA,EAAD,CAAYR,UAAU,cAAcU,QAASnB,EAAMyC,iBACjD,kBAAC,IAAD,CAAYhC,UAAU,uB,+DCDbiC,MANjB,SAAsC1C,GAClC,OACE,kBAAC2C,EAAA,EAAD,CAAkBN,MAAOrC,EAAMqC,MAAOO,QAAS,kBAACC,EAAA,EAAD,MAAWC,MAAO9C,EAAMqC,SCuC5DU,MAnCjB,SAAkC/C,GAEhC,IAAIgD,EAAYhD,EAAMiD,QAAQC,KAAK,SAAAC,GACjC,OACE,kBAAC,EAAD,CACEC,YAAaD,EAAOE,wBACpBhB,MAAOc,EAAOG,aASlB,OACE,kBAACC,EAAA,EAAD,CACIrB,GAAIlC,EAAMwD,OACVC,SAAUzD,EAAM0D,QAChBC,aAAW,EACXC,KAAMC,QAAQ7D,EAAM0D,SACpBI,QAAS9D,EAAM+D,eAEf,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAatC,UAAU,YACvB,kBAACuC,EAAA,EAAD,CAAWvC,UAAU,UAAU3B,EAAMmE,WACrC,kBAACC,EAAA,EAAD,CAAYlD,aAAW,SAASmD,KAAMrE,EAAMsE,eAAgBjC,MAAOrC,EAAMuE,UAAWhC,SAfrE,SAACiC,GACxBxE,EAAM+D,cAAcS,EAAMC,OAAOpC,SAetBW,OCWA0B,MAtCf,SAA8B1E,GAE1B,IAAI2E,EAAc3E,EAAMgD,UAAUE,KAAI,SAAA0B,GAClC,OACI,kBAAC7C,EAAA,EAAD,CACIL,MAAM,UACNjB,UAAU,cACVU,QAASyD,EAASC,iBAEjBD,EAASE,eAKlBC,EAAQ/E,EAAMgD,UAAUE,KAAI,SAAA0B,GAC5B,OACI,kBAAC,EAAD,CACIlB,QAASkB,EAASlB,QAClBK,cAAiBa,EAASb,cAC1Bd,QAAS2B,EAASI,YAClBxB,OAAQoB,EAASpB,OACjBW,UAAWS,EAASE,gBAMhC,OACI,kBAACG,EAAA,EAAD,CAAQvG,SAAS,SAAS+B,UAAU,0BAChC,kBAACyE,EAAA,EAAD,KACKP,EACD,kBAAC,EAAD,CAAWrC,YAAatC,EAAMmF,WAAW9C,MAAOE,SAAUvC,EAAMmF,WAAW5C,SAAUE,gBAAiBzC,EAAMmF,WAAWhE,WAE1H4D,I,oBC5BbK,KAASC,cAXY,CACjBC,OAAQ,0CACRC,WAAY,gCACZC,YAAa,uCACbC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAInB,IAAMC,GAAKV,KAASW,YASPC,GAAc,SAAAC,GACvB,OAAOH,GAAGI,WAAW,SAASC,IAAIF,GAAQG,OAGjCC,GAAc,WACvB,OAAOP,GAAGI,WAAW,SAASE,OAGrBE,GAAU,uCAAG,WAAOL,EAAQM,GAAf,SAAAC,EAAA,+EACfV,GAAGI,WAAW,SAChBC,IAAIF,GACJQ,IAAIF,EAAS,CAAEG,OAAO,KAHL,2CAAH,wDAMVC,GAAU,uCAAG,WAAOC,GAAP,SAAAJ,EAAA,+EACfV,GAAGI,WAAW,SAChBC,IAAIS,EAASC,KACbJ,IAAI,CACDvE,GAAI0E,EAASC,IACbxC,KAAMuC,EAAS7F,YACf+F,SAAUF,EAASE,SACnBC,MAAOH,EAASG,OAEhB,CAAEL,OAAO,KATK,2CAAH,sDAaVM,GAAiB,WAC1B,IAAIC,EAAO7B,KAAS8B,OAAOC,YAC3B,OAAIF,QAGA,GAIKG,GAAU,uCAAG,4BAAAZ,EAAA,6DAClBS,EAAO7B,KAAS8B,OAAOC,YADL,SAGTF,EAAKI,SAASC,MAAK,WAE5B,OADAC,SAASC,OAAS,mDACX,KACRC,OAAM,SAAUC,GAEf,OADAC,QAAQC,IAAIF,IACL,KARW,mFAAH,qDAoBVG,GAAgB,SAAAC,GACzB,OAAOhC,GAAGI,WAAW,UAChBC,IAAI2B,GACJ1B,MACAkB,MAAK,SAAAS,GACF,GAAIA,EAAaC,OAAQ,CACrB,IAAMpH,EAASmH,EAAaE,OAE5B,OADArH,EAAOsB,GAAK4F,EACLlH,EAEP,OAAO,SASVsH,GAAY,uCAAG,WAAOjB,EAAMkB,GAAb,iBAAA3B,EAAA,6DAClB4B,EAAatC,GAAGK,IAAH,gBAAgBc,EAAK/E,KAClCmG,EAAYvC,GAAGK,IAAIgC,EAAWG,QAAQC,SAC5CJ,EAAWG,QAAQC,QAAUF,EAHL,SAIXvC,GAAGI,WAAW,UAAUsC,IAAI,CACrC1H,MAAOsH,EACPzH,MAAOwH,EAAWxH,MAClBiB,YAAauG,EAAWvG,YACxB6G,SAAUN,EAAWM,WAEpBnB,KANQ,uCAMH,WAAMoB,GAAN,mBAAAlC,EAAA,6DAGEmC,EADA1B,EAAK2B,oBAAsB3B,EAAK2B,mBAAmBC,OAAS,EACtC5B,EAAK2B,mBAEL,GAGpBE,EAAYhD,GAAGK,IAAH,iBAAiBuC,EAAUxG,KAC7CyG,EAAoBI,KAAKD,GACnBE,EAAe,CACjBJ,mBAAoBD,GAXtB,SAcWrC,GAAWW,EAAK/E,GAAI8G,GAd/B,mFANG,uDAJW,mFAAH,wDA4BZC,GAAc,uCAAG,WAAOhC,EAAMkB,GAAb,mBAAA3B,EAAA,6DACpBsC,EAAYhD,GAAGK,IAAH,iBAAiBgC,EAAWjG,MAI1CgH,EADAjC,EAAKkC,sBAAwBlC,EAAKkC,qBAAqBN,OAAS,EAC7C5B,EAAKkC,qBAEL,IAGNJ,KAAKD,GAEhBE,EAAe,CACjBG,qBAAsBD,GAbA,SAgBb5C,GAAWW,EAAK/E,GAAI8G,GAhBP,mFAAH,wDAmBdI,GAAoB,uCAAG,WAAOnC,EAAMkB,GAAb,iBAAA3B,EAAA,6DAC1B0C,EAAmBjC,EAAKkC,qBAAqBE,QAAO,SAAAC,GAAI,OAAIA,EAAKpH,KAAOiG,EAAWjG,MACnF8G,EAAe,CACjBG,qBAAsBD,GAHM,SAMnB5C,GAAWW,EAAK/E,GAAI8G,GAND,mFAAH,wDAUpBO,GAAY,uCAAG,WAAOzB,EAAUvB,GAAjB,SAAAC,EAAA,+EACjBV,GAAGI,WAAW,UAChBC,IAAI2B,GACJrB,IAAIF,EAAS,CAAEG,OAAO,KAHH,2CAAH,wDAcZ8C,GAAoB,uCAAG,WAAO5I,EAAQf,GAAf,iBAAA2G,EAAA,6DAC1BiD,EAAcC,KAAKC,UAAU9J,GAE7BmJ,EAAe,CACjBY,SAAUH,GAJkB,SAOnBF,GAAa3I,EAAOsB,GAAI8G,GAPL,mFAAH,wDAUpBa,GAAa,uCAAG,WAAOjJ,EAAQkJ,GAAf,iBAAAtD,EAAA,6DACnB8B,EAAU,IACR3H,MAAQmJ,EAAenJ,MAC/B2H,EAAQ1G,YAAckI,EAAelI,YACrC0G,EAAQpG,GAAK,EACboG,EAAQyB,WAAa,GAEjBnJ,EAAO6H,UAAY7H,EAAO6H,SAASI,OAAS,GAC5CP,EAAQpG,GAAKtB,EAAO6H,SAASI,OAC7BjI,EAAO6H,SAASM,KAAKT,KAErB1H,EAAO6H,SAAW,GAClB7H,EAAO6H,SAASM,KAAKT,IAGnBU,EAAe,CACjBP,SAAU7H,EAAO6H,UAhBI,SAmBZc,GAAa3I,EAAOsB,GAAI8G,GAnBZ,oFAAH,wDAuBbgB,GAAY,uCAAG,WAAOpJ,EAAQqJ,EAAaC,EAAY1B,GAAxC,eAAAhC,EAAA,0DACpBgC,EADoB,8BAEb0B,EAAWhI,GAFE,SAGP4D,GAAGI,WAAW,UAAUC,IAAIvF,EAAOsB,IAAIgE,WAAW,WAAWsC,IAAI0B,GACzE5C,KADQ,uCACH,WAAM6C,GAAN,mBAAA3D,EAAA,6DACI6B,EAAYvC,GAAGK,IAAH,iBAAiBvF,EAAOsB,GAAxB,oBAAsCiI,EAAUjI,KAC5DuG,EAAW7H,EAAO6H,SAASvF,KAAI,SAAAoF,GAIjC,OAHIA,IAAY2B,GACZ3B,EAAQyB,WAAWhB,KAAKV,GAErBC,KAGLU,EAAe,CACjBP,YAVF,SAYWc,GAAa3I,EAAOsB,GAAI8G,GAZnC,mFADG,uDAHO,sDAmBdX,EAAYvC,GAAGK,IAAH,iBAAiBvF,EAAOsB,GAAxB,oBAAsCgI,EAAWhI,KAnB/C,UAoBPmG,EAAU5B,IAAIyD,EAAY,CAAExD,OAAO,IApB5B,qFAAH,4DA+BZ0D,GAAa,uCAAG,WAAOC,GAAP,qBAAA7D,EAAA,6DAEhB8D,EAATD,EAAoB,IAAIjF,KAAS8B,KAAKqD,mBACvB,IAAInF,KAAS8B,KAAKsD,qBAC7BC,EAAQ,GACRtD,OAAcuD,EACdC,OAAWD,EANU,SAUnBrE,KACDiB,MAAK,SAACsD,GACHA,EAAaC,SAAQ,SAAC1E,GAClB,IAAMc,EAAOd,EAAI8B,OACjBhB,EAAK/E,GAAKiE,EAAIjE,GACduI,EAAM1B,KAAK9B,SAfE,uBAmBZ7B,KAAS8B,OAAO4D,gBAAgBR,GAAUhD,KAA1C,uCAA+C,WAAgByD,GAAhB,SAAAvE,EAAA,yDACxDmE,EAAWI,EAAO9D,KAClBwD,EAAMI,SAAQ,SAAAG,GACNA,EAAE9I,KAAOyI,EAAS9D,MAClBM,EAAc6D,WAIFN,IAAhBvD,EARoD,gCAU9CR,GAAWgE,GAAUrD,KAArB,sBAA0B,sBAAAd,EAAA,+EAErBQ,MAFqB,4CAG7BS,OAAM,SAAAC,GACLC,QAAQC,IAAIF,MAdoC,gCAiBjDP,GAjBiD,2CAA/C,uDAkBVM,OAAM,SAAUC,GACfC,QAAQC,IAAIF,MAtCS,mFAAH,sDA0CbuD,GAAO,uCAAG,sBAAAzE,EAAA,sEACNpB,KAAS8B,OAAO+D,UAAU3D,MAAK,WAExC,OADAC,SAASC,OAAS,mDACX,KACRC,OAAM,SAAUC,GAEf,OADAC,QAAQC,IAAIF,IACL,KANQ,mFAAH,qDAkBPwD,GAAmB,SAAAC,GAC5B,OAAOA,EAAO/E,MACTkB,MAAK,SAAAyD,GACF,GAAIA,EAAO/C,OAAQ,CACf,IAAMoD,EAAWL,EAAO9C,OAExB,OADAmD,EAASlJ,GAAK6I,EAAO7I,GACdkJ,EAEP,OAAO,SC7DRC,G,kDAnOb,WAAYrL,GAAQ,IAAD,8BACjB,cAAMA,IA4CRsL,cAAgB,SAAA9G,GACd,EAAK+G,SAAS,CACZC,cAAehH,EAAMiH,iBA/CN,EAmDnBC,kBAAoB,SAACrJ,GACnB,EAAKkJ,SAAS,CACZC,cAAe,KACfG,gBAAiBtJ,KAtDF,EA4DnBuJ,aAAe,SAAApH,GACb,EAAK+G,SAAS,CACZM,aAAcrH,EAAMiH,iBA9DL,EAkEnBK,iBAAmB,SAACzJ,GAClB,EAAKkJ,SAAS,CACZM,aAAc,KACdE,iBAAkB1J,KArEH,EA0EnB2J,oBAAsB,SAAAxH,GACpB,EAAK+G,SAAS,CACZU,oBAAqBzH,EAAMiH,iBA5EZ,EAgFnBS,yBAA2B,SAAC7J,GAC1B,EAAKkJ,SAAS,CACZU,oBAAqB,KACrBE,wBAAyB9J,KAnFV,EAkGnB+J,eAAiB,WA6Ef,MAAO,CA5EY,CACjBtH,WAAY,UACZtB,OAAQ,eACRqB,gBAAiB,EAAKyG,cACtBvH,cAAe,EAAK2H,kBACpBhI,QAAS,EAAK2I,MAAMb,cACpBlH,eAAgB,YAChBC,UAAW,EAAK8H,MAAMV,gBACtB3G,YAAa,CACX,CACE1B,QAAS,SACTD,wBAA0B,EAAKqI,mBAEjC,CACEpI,QAAS,cACTD,wBAA0B,EAAKqI,mBAEjC,CACEpI,QAAS,WACTD,wBAA0B,EAAKqI,qBAKnB,CAChB5G,WAAY,QACZtB,OAAQ,aACRqB,gBAAiB,EAAK+G,aACtBlI,QAAS,EAAK2I,MAAMR,aACpB9H,cAAe,EAAK+H,iBACpBxH,eAAgB,aAChBC,UAAW,EAAK8H,MAAMN,iBACtB/G,YAAa,CACX,CACE1B,QAAS,UACTD,wBAA0B,EAAKyI,kBAEjC,CACExI,QAAS,aACTD,wBAA0B,EAAKyI,kBAEjC,CACExI,QAAS,UACTD,wBAA0B,EAAKyI,kBAEjC,CACExI,QAAS,OACTD,wBAA0B,EAAKyI,oBAKZ,CACvBhH,WAAY,eACZtB,OAAQ,oBACRqB,gBAAiB,EAAKmH,oBACtBtI,QAAS,EAAK2I,MAAMJ,oBACpBlI,cAAe,EAAKmI,yBACpB5H,eAAgB,oBAChBC,UAAW,EAAK8H,MAAMF,wBACtBnH,YAAa,CACX,CACE1B,QAAS,WACTD,wBAA0B,EAAK6I,0BAEjC,CACE5I,QAAS,cACTD,wBAA0B,EAAK6I,0BAEjC,CACE5I,QAAS,cACTD,wBAA0B,EAAK6I,8BA1KpB,EAkLnB5L,kBAAoB,SAAC2G,EAAMrG,GAEzB,SAAIqG,EAAKiC,kBAAoBjC,EAAKiC,iBAAiBL,OAAS,IACnD5B,EAAKiC,iBACToD,MAAK,SAAAC,GAAe,OAAIA,EAAgBrK,KAAOtB,EAAOsB,OAnL3D,EAAKsK,mBAAqB,EAAKA,mBAAmBC,KAAxB,gBAC1B,EAAKC,oBAAsB,EAAKA,oBAAoBD,KAAzB,gBAE3B,EAAKnB,cAAgB,EAAKA,cAAcmB,KAAnB,gBACrB,EAAKf,kBAAoB,EAAKA,kBAAkBe,KAAvB,gBAEzB,EAAKb,aAAe,EAAKA,aAAaa,KAAlB,gBACpB,EAAKX,iBAAmB,EAAKA,iBAAiBW,KAAtB,gBAExB,EAAKT,oBAAsB,EAAKA,oBAAoBS,KAAzB,gBAC3B,EAAKP,yBAA2B,EAAKA,yBAAyBO,KAA9B,gBAEhC,EAAKL,eAAiB,EAAKA,eAAeK,KAApB,gBACtB,EAAKpL,gBAAkB,EAAKA,gBAAgBoL,KAArB,gBACvB,EAAKrL,sBAAwB,EAAKA,sBAAsBqL,KAA3B,gBAC7B,EAAKJ,MAAQ,CACX/J,YAAa,GACbkJ,cAAe,KACfK,aAAc,KACdI,oBAAqB,KACrBN,gBAAiB,KACjBI,iBAAkB,KAClBI,wBAAwB,KACxBQ,cAAe3M,EAAM4M,SA1BN,E,+DA+BAC,GACjB,IAAMvK,EAAcuK,EAAEpI,OAAOpC,MAC7BsF,QAAQC,IAAItF,GACZ,IAAMqK,EAAgBG,KAAK9M,MAAM4M,QAAQvD,QAAO,SAAAzI,GAAM,OAAIA,EAAOD,MAAMoM,SAASzK,MAChFwK,KAAKvB,SAAS,CACZjJ,cACAqK,oB,0CAIgBE,M,+EA8CEjM,G,iFACdoM,GAA+BF,KAAK9M,MAAMiH,KAAMrG,G,OACtDkM,KAAK9M,MAAMsG,WAAWwG,KAAK9M,MAAMiH,KAAK/E,I,4LAGZtB,G,iFACpBoM,GAAqCF,KAAK9M,MAAMiH,KAAMrG,G,OAC5DkM,KAAK9M,MAAMsG,WAAWwG,KAAK9M,MAAMiH,KAAK/E,I,sIAgGtC,IAAMc,EAAY8J,KAAKV,iBACjB/K,EAAkByL,KAAKzL,gBACvBf,EAAoBwM,KAAKxM,kBACzBc,EAAwB0L,KAAK1L,sBAE7B6F,EAAO6F,KAAK9M,MAAMiH,KAClB9B,EAAa,CACjB9C,MAAOyK,KAAKT,MAAM/J,YAClBC,SAAUuK,KAAKN,mBACfrL,QAAS2L,KAAKJ,qBAEZO,EAAY,GAYhB,OAXIhG,IAEFgG,EAAYH,KAAKT,MAAMM,cAAczJ,KAAI,SAASoG,GAChD,OACI,kBAAC4D,EAAA,EAAD,CAAM5D,MAAI,EAAC6D,EAAG,GACZ,kBAACpN,EAAD,CAAYa,OAAQ0I,EAAMjI,gBAAiBA,EAAiBD,sBAAuBA,EAAuBd,kBAAmBA,EAAkB2G,EAAMqC,UAO7J,yBAAK8D,MAAM,kBACT,kBAAC,EAAD,CAAsBpK,UAAWA,EAAWmC,WAAYA,IACtD,yBAAK1E,UAAU,eACf,kBAACyM,EAAA,EAAD,CAAMG,WAAS,EAACC,QAAS,GACtBL,S,GA3Ne/M,IAAMqN,W,mBCT5BC,G,kDACJ,WAAYxN,GAAQ,IAAD,8BACjB,cAAMA,IACDqM,MAAQ,CAAEoB,oBAAoB,GACnC,EAAKC,YAAc,EAAKA,YAAYjB,KAAjB,gBACnB,EAAKkB,cAAgB,EAAKA,cAAclB,KAAnB,gBAJJ,E,iGAQDjI,G,4FAEVwI,IAA4C,GAAM1F,MAAK,SAAA0D,GAC3D,EAAKhL,MAAM4N,cAAc5C,GACzB,EAAKhL,MAAM6N,QAAQ9E,KAAK,kBACxB,EAAKwC,SAAS,CAAEkC,oBAAoB,O,+KAKpBjJ,G,4FAEZwI,IAA4C,GAAO1F,MAAK,SAAA0D,GAC5D,EAAKhL,MAAM4N,cAAc5C,GACzB,EAAKhL,MAAM6N,QAAQ9E,KAAK,kBACxB,EAAKwC,SAAS,CAAEkC,oBAAoB,O,iIAOtC,GAAIX,KAAK9M,MAAM8N,YACb,OACE,yCAEE,kBAACC,GAAA,EAAD,OANC,IAYCC,GAASlB,KAAK9M,MAAMiO,SAAS5B,OAAS,CAAE2B,KAAM,CAAEE,SAAU,OAA1DF,KAER,OAA2B,IADIlB,KAAKT,MAA5BoB,oBAC2BX,KAAK9M,MAAMiH,KACrC,kBAAC,IAAD,CAAUhF,GAAI+L,IAMrB,yBAAKvN,UAAU,SACb,uDACA,kBAACsB,EAAA,EAAD,CAAQL,MAAM,UAAUjB,UAAU,cAAcU,QAAS2L,KAAKa,eAA9D,yBAGA,kBAAC5L,EAAA,EAAD,CAAQL,MAAM,UAAUjB,UAAU,cAAcU,QAAS2L,KAAKY,aAA9D,4B,GAvDgBxN,IAAMqN,WA+DfY,eAAWX,I,kICATY,OArDjB,SAAkCpO,GAC9B,OACE,kBAACqO,GAAA,EAAD,KACQ,kBAACC,GAAA,EAAD,CACAC,WAAY,kBAAC,KAAD,MACZC,gBAAc,kBACdtM,GAAG,kBAEH,kBAACT,EAAA,EAAD,CAAYjB,QAAQ,aAAaR,EAAM4M,QAAQ/D,OAA/C,eAEA,kBAAC4F,GAAA,EAAD,KACA,kBAACvB,EAAA,EAAD,CAAMG,WAAS,EAACC,QAAS,GACrB,kBAACJ,EAAA,EAAD,CAAM5D,MAAI,EAACoF,GAAI,GAAIC,GAAI,GACnB,6BACI,kBAACC,GAAA,EAAD,CAAMC,MAAM,QAEV7O,EAAM4M,QAAQ1J,KAAK,SAAAtC,GACjB,OACE,8BACE,kBAACkO,GAAA,EAAD,KAEE,kBAAC/M,EAAA,EAAD,CACEJ,UAAWoN,IACX9M,GAAE,0BAAqBrB,EAAOsB,KAE7BtB,EAAOD,OAERX,EAAMgP,iBACN,kBAAC/N,EAAA,EAAD,CACER,UAAU,cACViB,MAAM,UACNR,aAAW,OACXS,UAAWoN,IACX9M,GAAE,sBAAiBrB,EAAOsB,KAE1B,kBAAC,KAAD,mBCFxC,SAAS+M,GAAwBjP,GACTA,EAAMkP,eAAerG,OAE3C,OACE,6BACE,iDACA,kBAAC,GAAD,CAA0B+D,QAAS5M,EAAMkP,kBAM/C,SAASC,GAAqBnP,GAC5B,OACE,6BACE,8CACA,kBAAC,GAAD,CAA0B4M,QAAS5M,EAAMoP,eAK/C,SAASC,GAAsBrP,GAC7B,OACE,6BACE,mDACA,kBAAC,GAAD,CAA0B4M,QAAS5M,EAAMsP,gBAK/C,SAASC,GAAwBvP,GAC/B,OACE,6BACE,iDACA,kBAAC,GAAD,CAA0B4M,QAAS5M,EAAMwP,eAAgBR,iBAAiB,KA2FjES,OApFf,SAAmBzP,GAAQ,IAAD,EAEAG,qBAFA,mBAEjB8G,EAFiB,KAEXyI,EAFW,KASxB,GALAxP,IAAMyP,WAAU,WACdD,EAAQ1P,EAAMiH,QACb,CAACjH,IAGAiH,EAAM,CACR,IAAM2I,EAAsB,GACxBC,GAAa,EAGjB,GAAI5I,EAAKiI,gBAAkBjI,EAAKiI,eAAerG,OAAS,EAAG,CACzD,IAAMnF,EAAU,kBAACuL,GAAD,CAAyBC,eAAgBjI,EAAKiI,iBAC9DU,EAAoB7G,KAAKrF,GACzBmM,GAAa,EAGf,GAAI5I,EAAKmI,aAAenI,EAAK6I,WAAWjH,OAAS,EAAG,CAClD,IAAMnF,EAAU,kBAACyL,GAAD,CAAsBC,YAAanI,EAAKmI,cACxDQ,EAAoB7G,KAAKrF,GACzBmM,GAAa,EAIf,GAAI5I,EAAKiC,kBAAoBjC,EAAKiC,iBAAiBL,OAAS,EAAG,CAC7D,IAAMnF,EAAU,kBAAC2L,GAAD,CAAuBC,aAAcrI,EAAKiC,mBAC1D0G,EAAoB7G,KAAKrF,GACzBmM,GAAa,EAIf,GAAI5I,EAAKuI,gBAAkBvI,EAAKuI,eAAe3G,OAAS,EAAG,CACzD,IAAMnF,EAAU,kBAAC6L,GAAD,CAAyBC,eAAgBvI,EAAKuI,iBAC9DI,EAAoB7G,KAAKrF,GACzBmM,GAAa,EAGf,OAAIA,EAEA,yBAAKpP,UAAU,aACb,kBAACsP,GAAA,EAAD,MACA,kBAACtO,EAAA,EAAD,CAAYhB,UAAU,SAASD,QAAQ,KAAKmB,UAAU,MAAtD,cAGA,kBAACqO,GAAA,EAAD,CAAW1R,SAAS,MAClB,kBAAC2R,GAAA,EAAD,CAAOxP,UAAU,SAEbmP,EAAoB1M,KAAI,SAAAQ,GAAO,OAAIA,QAQ3C,yBAAKjD,UAAU,aACb,kBAACsP,GAAA,EAAD,MACA,kBAACtO,EAAA,EAAD,CAAYhB,UAAU,SAASD,QAAQ,KAAKmB,UAAU,MAAtD,cAGA,kBAACqO,GAAA,EAAD,CAAW1R,SAAS,MAClB,kBAAC2R,GAAA,EAAD,CAAOxP,UAAU,SACf,wEASV,OACE,yCAEE,kBAACsN,GAAA,EAAD,Q,+EC5HOmC,OAlCf,SAAoBlQ,GAClB,OACE,6BACE,kBAACmQ,GAAA,EAAD,CAAQvM,KAAM5D,EAAMoQ,OAAQtM,QAAS9D,EAAMqQ,YAAaC,kBAAgB,qBACtE,kBAACC,GAAA,EAAD,CAAarO,GAAG,qBAAqBlC,EAAMwQ,OAC3C,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,4CACuC1Q,EAAMwQ,OAE7C,kBAACpO,EAAA,EAAD,CACEuO,WAAS,EACTC,OAAO,QACP1O,GAAG,OACHY,MAAO9C,EAAMwQ,MACbnO,MAAOrC,EAAMqC,MACbE,SAAUvC,EAAMuC,SAChBC,KAAK,QACLd,MAAM,YACNmP,WAAS,KAGb,kBAACC,GAAA,EAAD,KACE,kBAAC/O,EAAA,EAAD,CAAQZ,QAASnB,EAAMqQ,YAAa3O,MAAM,aAA1C,UAGA,kBAACK,EAAA,EAAD,CAAQZ,QAASnB,EAAM+Q,aAAcrP,MAAM,aAA3C,cC3BJsP,GAAsB,CACxB,YAAe,eACf,MAAS,gBACT,SAAY,YAqCDC,OAlCf,SAA4BjR,GAWxB,OACE,6BACE,kBAACyB,EAAA,EAAD,CAAYyP,MAAM,SAAS1Q,QAAQ,KAAKmB,UAAU,MAChD,gCAAS3B,EAAMmR,eAEjB,kBAAC1P,EAAA,EAAD,CAAYyP,MAAM,SAAS1Q,QAAQ,QAAQmB,UAAU,SACnD,8BACG3B,EAAMqC,MAhBNrC,EAAMoR,WACX,kBAACnQ,EAAA,EAAD,CAAYR,UAAU,cAAciB,MAAM,UAAUR,aAAW,QAC7D,kBAAC,KAAD,CAAUC,QAASnB,EAAMqR,cAG3B,gCAeA,kBAAC,GAAD,CACEjB,OAAQpQ,EAAMsR,aACdjB,YAAarQ,EAAMqQ,YACnBU,aAAc/Q,EAAM+Q,aACpBP,MAAOQ,GAAoBhR,EAAMuR,YACjClP,MAAOrC,EAAMqC,MACbE,SAAUvC,EAAMuC,aC4IX4L,oBAtKf,SAAqBnO,GAAQ,IAAD,EAGYG,mBAAS,MAHrB,mBAGnBY,EAHmB,KAGNyQ,EAHM,OAIiBrR,mBAAS,MAJ1B,mBAInBsR,EAJmB,KAIHC,EAJG,OAKAvR,qBALA,gCAMoCA,oBAAS,IAN7C,mBAMnBwR,EANmB,KAMMC,EANN,OAOgBzR,mBAAS,MAPzB,mBAOnB0R,EAPmB,KAOJC,EAPI,OAQsB3R,mBAAS,MAR/B,mBAQnB4R,EARmB,KAQDC,EARC,OASwC7R,oBAAS,GATjD,mBASnB8R,EATmB,KASQC,EATR,iDAuE1B,sBAAA1L,EAAA,sEACQwG,KAA0B1F,MAAK,SAAC6K,GAChCA,IACFnS,EAAM6N,QAAQ9E,KAAK,KACnB/I,EAAMsG,gBAAWoE,OAJvB,4CAvE0B,kEAiF1B,sBAAAlE,EAAA,sEACQwG,KAA6B1F,MAAK,SAAC6K,GACnCA,IACFnS,EAAM6N,QAAQ9E,KAAK,KACnB/I,EAAMsG,gBAAWoE,OAJvB,4CAjF0B,sBAgG1B,OALI1K,EAAMiH,MAAwB,OAAhBlG,GAA0C,OAAlB8Q,IACxCL,EAAexR,EAAMiH,KAAKlG,aAC1B+Q,EAAiB9R,EAAMiH,KAAKmL,YAG1BpS,EAAMiH,KAEN,yBAAKxG,UAAU,eACb,kBAACsP,GAAA,EAAD,MACA,kBAACtO,EAAA,EAAD,CAAYhB,UAAU,SAASD,QAAQ,KAAKmB,UAAU,MAAtD,gBAGA,kBAACqO,GAAA,EAAD,CAAWvP,UAAU,6BAA6BnC,SAAS,MACzD,kBAAC2R,GAAA,EAAD,CAAOxP,UAAU,SAEf,kBAAC,GAAD,cACE2Q,YAAY,EACZD,aAAa,iBACb9O,MAAOwP,EACPxB,YAlEZ,WACEyB,EAAiBC,GACjBG,GAA6B,IAiEnBnB,aArDZ,WACE/D,GAA2BhN,EAAMiH,KAAK/E,GAAI,CACxCkQ,UAAWP,IACVvK,MAAK,SAAAyD,GACNmH,GAA6B,GAC7BJ,EAAiBD,GACjB7R,EAAMsG,WAAWtG,EAAMiH,KAAK/E,OAE3BuF,OAAM,SAAA4K,GACL1K,QAAQC,IAAIyK,OA6CNf,aAAcW,EACdZ,WAhEZ,WACEW,EAAoBH,GACpBK,GAA6B,IA+DnB3P,SA5DZ,SAA+BsK,GAC7BiF,EAAiBjF,EAAEpI,OAAOpC,SAmDlB,cASc,MAKlB,kBAACiQ,GAAA,EAAD,MAGA,kBAACtC,GAAA,EAAD,CAAW1R,SAAS,MAClB,kBAAC2R,GAAA,EAAD,CAAOxP,UAAU,SAEf,kBAAC,GAAD,CACE2Q,YAAY,EACZD,aAAa,eACb9O,MAAOtB,EACPsP,YArHZ,WACEmB,EAAeC,GACfG,GAA2B,IAoHjBb,aAjHZ,WACE/D,GAA2BhN,EAAMiH,KAAK/E,GAAI,CACxCnB,gBACCuG,MAAK,SAAAyD,GACN6G,GAA2B,GAC3BF,EAAiB3Q,GACjBf,EAAMsG,WAAWtG,EAAMiH,KAAK/E,OAG3BuF,OAAM,SAAA4K,GACL1K,QAAQC,IAAIyK,OAwGNf,aAAcK,EACdN,WArGZ,WACEK,EAAiB3Q,GACjB6Q,GAA2B,IAoGjBrP,SAjGZ,SAA6BsK,GAC3B2E,EAAe3E,EAAEpI,OAAOpC,UAkGhB,kBAACiQ,GAAA,EAAD,MACA,kBAAC,GAAD,CACElB,YAAY,EACZD,aAAa,QACb9O,MAAOrC,EAAMiH,KAAKF,QAEpB,kBAACuL,GAAA,EAAD,MACA,yBAAK7R,UAAU,eACb,kBAACsB,EAAA,EAAD,CAAQL,MAAM,UAAUjB,UAAU,cAAcU,QAhJlC,4CAgJd,YAGA,kBAACY,EAAA,EAAD,CAAQL,MAAM,UAAUjB,UAAU,cAAcU,QAnJlC,4CAmJd,sBAUR,yCAEE,kBAAC4M,GAAA,EAAD,U,OCnGOwE,OAlEf,SAA4BvS,GAAQ,IAAD,EACKG,qBADL,mBAC1ByB,EAD0B,KACb4Q,EADa,OAEPrS,qBAFO,mBAE1BQ,EAF0B,KAEnB8R,EAFmB,KAyBjC,OACE,6BACE,kBAACtC,GAAA,EAAD,CAAQvM,KAAM5D,EAAMoQ,OAAQtM,QAAS9D,EAAMqQ,YAAaC,kBAAgB,qBACtE,kBAACC,GAAA,EAAD,CAAarO,GAAG,qBAAhB,uBACA,kBAACuO,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,8EAGA,kBAACtO,EAAA,EAAD,CACEuO,WAAS,EACTC,OAAO,QACP1O,GAAG,QACHY,MAAM,eACNP,SAjCV,SAA6BsK,GAC3B4F,EAAS5F,EAAEpI,OAAOpC,QAiCVG,KAAK,OACLd,MAAM,YACNmP,WAAS,IAEX,kBAACzO,EAAA,EAAD,CACEwO,OAAO,QACP1O,GAAG,cACHY,MAAM,qBACNP,SAtCV,SAAmCsK,GACjC2F,EAAe3F,EAAEpI,OAAOpC,QAsChBG,KAAK,OACLd,MAAM,YACNmP,WAAS,KAGb,kBAACC,GAAA,EAAD,KACE,kBAAC/O,EAAA,EAAD,CAAQZ,QAASnB,EAAMqQ,YAAa3O,MAAM,aAA1C,UAGA,kBAACK,EAAA,EAAD,CAAQZ,QA3ChB,WAEE,IAAMuR,EAAgB,CACpB/R,QACAiB,eAGF5B,EAAM+Q,aAAa2B,IAoCkBhR,MAAM,aAArC,cClDV,SAAS6N,GAAwBvP,GAE/B,OACE,yBAAKS,UAAU,mBACb,wDACA,kBAAC,GAAD,CAA0BmM,QAAS5M,EAAMwP,eAAgBR,iBAAiB,KAiFjE2D,OA5Ef,SAAsB3S,GAAQ,IAAD,EACqCG,oBAAS,GAD9C,mBACpByS,EADoB,KACMC,EADN,KAErBhF,EAAUiF,cAFW,4CAc3B,WAA4B3K,GAA5B,eAAA3B,EAAA,6DACE2B,EAAWrH,MAAQd,EAAMiH,KAAK/E,GAExBoG,EAAU,CACdpG,GAAI,EACJqG,QAAS,2DACTwK,aAAa,GAAD,OAAK5K,EAAWxH,MAAhB,eAGdwH,EAAWM,SAAW,GACtBN,EAAWG,QAAUA,EAVvB,SAayB0E,GAA6BhN,EAAMiH,KAAMkB,GAblE,qBAcE0K,GAA4B,GAd9B,UAeQ7S,EAAMgT,gBAfd,yBAgBQhT,EAAMsG,WAAWtG,EAAMiH,KAAK/E,IAhBpC,QAkBE2L,EAAQ9E,KAAR,sBAA4B/I,EAAMiH,KAAK2B,mBAAmB5I,EAAMiH,KAAK2B,mBAAmBC,OAAS,GAAG3G,KAlBtG,6CAd2B,sBAmC3B,IACI+Q,EAAwB,KAQ5B,OANEA,EADEjT,EAAMiH,MAAQjH,EAAMiH,KAAKuI,gBAAkBxP,EAAMiH,KAAKuI,eAAe3G,OAAS,EACxD,kBAAC,GAAD,CAAyB2G,eAAgBxP,EAAMiH,KAAKuI,iBAEpD,gEAKxB,yBAAK/O,UAAU,QACb,kBAACsP,GAAA,EAAD,MACA,kBAACtO,EAAA,EAAD,CAAYhB,UAAU,SAASD,QAAQ,KAAKmB,UAAU,MAAtD,mBAGA,kBAACqO,GAAA,EAAD,CAAWvP,UAAU,6BAA6BnC,SAAS,MACzD,kBAAC2R,GAAA,EAAD,CAAOxP,UAAU,SAEbwS,EAEF,8BACE,kBAAClR,EAAA,EAAD,CAAQvB,QAAQ,YAAYkB,MAAM,YAAYP,QA/CxD,WACE0R,GAA4B,KA8CpB,wBAMN,kBAACP,GAAA,EAAD,MAEA,kBAAC,GAAD,CACElC,OAAQwC,EACRvC,YA7DN,WACEwC,GAA4B,IA6DxB9B,aAnEqB,4CAoErB9J,KAAMjH,EAAMiH,S,iCClBLiM,OA5Df,SAA4BlT,GAAQ,IAAD,IA8B3BmT,EAvBAC,EAAc,GA8BlB,OA5BmB,UAAGpT,EAAMsI,eAAT,iBAAG,EAAeC,eAAlB,aAAG,EAAwBM,QAC1B,EAChBuK,EAAcpT,EAAMsI,QAAQC,QAAQrF,KAAI,SAAAmQ,GACpC,IAAMC,EAAkBD,IAAWrT,EAAMuT,aAEzC,OACI,kBAACzE,GAAA,EAAD,CAAU0E,SAAUF,EAAgBnS,QAAS,kBAbzD,SAAyBkS,GACrBrT,EAAMyT,oBAAoBzT,EAAMsI,SAChCtI,EAAM0T,gBAAgBL,GAWqCM,CAAgBN,IAASnR,GAAImR,EAAOnR,GAAI0R,QAAM,GAC7F,kBAACC,GAAA,EAAD,CAAcC,QAAST,EAAO1S,YAK1CyS,EAAY,GAAK,kBAACtE,GAAA,EAAD,SAAW,kBAAC+E,GAAA,EAAD,CAAcC,QAAQ,qBAAjC,KAWjB9T,EAAM+T,WACNZ,EAAqB,kBAACpR,EAAA,EAAD,CAAQvB,QAAQ,YAAYW,QARrD,WACInB,EAAMyT,oBAAoBzT,EAAMsI,SAChCtI,EAAMgU,iBAA+B,IAMsCtS,MAAM,YAAYjB,UAAU,mBAAlF,qBAKrB,kBAAC4N,GAAA,EAAD,CACI4F,gBAAiBjU,EAAMsI,UAAYtI,EAAMkU,kBAEzC,kBAAC5F,GAAA,EAAD,CACIC,WAAY,kBAAC,KAAD,MACZC,gBAAc,kBACdtM,GAAG,kBAEH,kBAACT,EAAA,EAAD,CAAYjB,QAAQ,aAAaR,EAAMsI,QAAQ3H,QAEnD,kBAAC8N,GAAA,EAAD,KAEI,kBAACG,GAAA,EAAD,CAAMC,MAAM,OAAOpO,UAAU,gBACxB2S,EACAD,MCPNgB,OAtCf,SAA8BnU,GAAQ,IAAD,IAEnC,SAASyT,EAAoBnL,GAC3BtI,EAAMyT,oBAAoBnL,GAG5B,IAcI8L,EATAC,EAAyB,GAe7B,OAdoB,UAAGrU,EAAMY,cAAT,iBAAG,EAAc6H,gBAAjB,aAAG,EAAwBI,QAE1B,IACnBwL,EAAyBrU,EAAMY,OAAO6H,SAASvF,KAAI,SAAAoF,GAAO,OACxD,kBAAC,GAAD,CAAoByL,SAAU/T,EAAM+T,SAAUL,gBAAiB1T,EAAM0T,gBAAiBH,aAAcvT,EAAMuT,aAAcS,gBAAiBhU,EAAMgU,gBAAiBE,iBAAkBlU,EAAMkU,iBAAkBT,oBAAqBA,EAAqBnL,QAASA,QAK9PtI,EAAM+T,WACRK,EAAsB,kBAACrS,EAAA,EAAD,CAAQvB,QAAQ,YAAYW,QAASnB,EAAMsU,wBAAyB5S,MAAM,aAA1E,sBAKrB,kBAACuO,GAAA,EAAD,CAAOxP,UAAU,SACf,kBAACsB,EAAA,EAAD,CAAQG,GAAG,kBACTf,QAvBwB,WAC5BnB,EAAM0T,qBAAgBhJ,GACtB1K,EAAMyT,yBAAoB/I,KAsBtB,4BAAK1K,EAAMY,OAAOD,QAEnB0T,EACAD,I,8DCjDDG,GAAyB,CAC3BC,KAAM,CACF5V,OAAQ,MACR6V,MAAO,MACPC,WAAY,CACRC,SAAU,IAGlBC,QAAS,eAmFEC,OA9Ef,SAA0B7U,GAQtB,SAAS8U,IACL9U,EAAM+U,yBAAyB/U,EAAMqT,QAGzC,SAAS2B,IACLhV,EAAMiV,qBAAqBjV,EAAMqT,QA2CrC,GAAIrT,EAAMqT,OAAQ,CACd,IAAM6B,EAZV,WAA2B,IAAD,EAChBA,EAAa,gBAAQX,IACrBY,EAAG,UAAGnV,EAAMqT,cAAT,aAAG,EAAc+B,MAC1B,GAAID,GAAOA,EAAIpI,SAAS,YAAeoI,EAAIpI,SAAS,MAAQ,CACxD,IAAMsI,EAAcF,EAAIG,MAAM,KAC1BC,EAAe,IAAIC,gBAAgBH,EAAY,IACnDH,EAAcN,QAAUW,EAAanP,IAAI,KAE7C,OAAO8O,EAIeO,GAEtB,OACI,6BACI,4BAAKzV,EAAMqT,OAAO1S,OAClB,qCAAWX,EAAMqT,OAAO+B,OACxB,iDACA,2BAAIpV,EAAMqT,OAAOzR,aACjB,kBAAC,KAAD,CAASgT,QAASM,EAAcN,QAASJ,KAAMU,EAAcV,KAAMkB,QA/D/E,SAAkBlR,GAEdA,EAAMC,OAAOkR,gBAYjB,WACI,OAAI3V,EAAM4V,eAAiB5V,EAAM6V,aACtB,KAKP7V,EAAM8V,YAAc9V,EAAM+V,eAC1BC,EACI,kBAACjU,EAAA,EAAD,CAAQvB,QAAQ,YAAYW,QAAS6T,EAAgBvU,UAAU,cAAciB,MAAM,YAAYuU,QAAS,kBAAC,KAAD,OACnGjW,EAAM8V,WAAa,cAAgB,kBAI5C9V,EAAMkW,YAAclW,EAAMmW,eAC1BC,EACI,kBAACrU,EAAA,EAAD,CAAQvB,QAAQ,YAAYW,QAAS2T,EAAoBrU,UAAU,kBAAkBiB,MAAM,YAAY2U,UAAW,kBAAC,KAAD,OAC7GrW,EAAMkW,WAAa,kBAAoB,qBAKhD,yBAAKzV,UAAU,cACVuV,EACAI,IAnBT,IAAIJ,EAAYI,EA6CPE,IAIT,OACI,6BACI,qD,iCCyCDC,OAzHf,SAA4BvW,GAGxB,IADA,IA0CIwW,EACArD,EA3CAsD,EAAc,GACTC,EAAI,EAAGA,EAAI1W,EAAMY,OAAO6H,SAASI,OAAQ6N,IAC9C,IAAK,IAAIC,EAAI,EAAGA,GAAC,UAAG3W,EAAMY,OAAO6H,SAASiO,GAAGnO,eAA5B,aAAG,EAAkCM,QAAQ8N,IAAK,CAAC,IAAD,EAC/DF,EAAY1N,KAAK/I,EAAMY,OAAO6H,SAASiO,GAAGnO,QAAQoO,IAyCtD3W,EAAM+T,WACNyC,EAAqC,kBAACzU,EAAA,EAAD,CAAQZ,QAASnB,EAAM4W,6BAA8BlV,MAAM,YAAYlB,QAAQ,aAA/E,mBACrC2S,EAAqB,kBAACpR,EAAA,EAAD,CAAQvB,QAAQ,YAAYW,QATrD,WACInB,EAAMgU,iBAA+B,IAQsCtS,MAAM,YAAYjB,UAAU,mBAAlF,kBAGzB,IAAIZ,OAAU6K,EACd,GAAI1K,EAAMY,OAAOgJ,SAAU,CACvB,IAAMiN,EAAkBnN,KAAKoN,MAAM9W,EAAMY,OAAOgJ,UAC1CmN,EAAcC,eAAYC,kBAAkBC,0BAAeL,IACjEhX,EAAU,kBAAC,UAAD,CACNsX,eAAa,EACbJ,YAAaA,EACbK,UAAU,SAIdvX,EAAU,kBAAC,UAAD,CACNsX,eAAa,EACbJ,YAAaC,eAAYC,kBAAkBI,gBAAaC,eAAe,qBACvEF,UAAU,IA0BlB,IAAIlB,EAAYJ,EAAYK,EAAaJ,GAAc,EACvD,GAAI/V,EAAMuT,aAAc,CAAC,IAAD,EAvBxB,WACI,IAAI2C,EAAYJ,EAAYK,EAAaJ,GAAc,EAEvD,GAAI/V,EAAMuT,aAAc,CACpB,IAAMgE,EAAqBd,EAAYe,QAAQxX,EAAMuT,cAC/CkE,EAA8BzX,EAAM0X,cAAcnP,QAAQiP,QAAQxX,EAAMuT,cACxEoE,EAAsB3X,EAAM0X,cAAcnP,QAAQM,OAClD+O,EAAc5X,EAAMY,OAAO6H,SAASI,OACpCgP,EAAqB7X,EAAMY,OAAO6H,SAAS+O,QAAQxX,EAAM0X,eAE/DxB,EAAauB,EAA8B,EAC3C3B,EAAa2B,EAA8BE,EAAsB,EACjExB,EAA8C,IAAhCsB,GAAqCF,EAAqB,EACxExB,EAAc0B,IAAgCE,EAAsB,GAC7DJ,EAAqBd,EAAY5N,OAAS,GAC1CgP,IAAuBD,EAAc,EAGhD,MAAO,CAAC1B,EAAYJ,EAAYK,EAAaJ,GAMQ+B,GADjC,mBACnB5B,EADmB,KACPJ,EADO,KACKK,EADL,KACkBJ,EADlB,KAIxB,OACI,kBAAC9F,GAAA,EAAD,CAAOxP,UAAU,SACZT,EAAM0X,cACH,6BACI,wCAAc1X,EAAM0X,cAAc/W,OAClC,kBAAC,GAAD,CACIsU,qBA7FpB,SAA8B5B,GAC1B1L,QAAQC,IAAI,iCAAkCyL,GAC9C,IAAM0E,EAAuB/X,EAAM0X,cAAcnP,QAAQiP,QAAQnE,GACjE,GAAI0E,IAAyB/X,EAAM0X,cAAcnP,QAAQM,OAAS,EAAlE,CAII,IAAMgP,EAAqB7X,EAAMY,OAAO6H,SAAS+O,QAAQxX,EAAM0X,eACzD3B,EAAc/V,EAAMY,OAAO6H,SAASoP,EAAqB,GAC/D7X,EAAMyT,oBAAoBsC,GAC1B/V,EAAM0T,gBAAgBqC,EAAYxN,QAAQ,SAN1CvI,EAAM0T,gBAAgB1T,EAAM0X,cAAcnP,QAAQwP,EAAuB,KA0F7DhD,yBAhFpB,SAAkC1B,GAC9B1L,QAAQC,IAAI,qCAAsCyL,GAClD,IAAM0E,EAAuB/X,EAAM0X,cAAcnP,QAAQiP,QAAQnE,GAEjE,GAA6B,IAAzB0E,EAAJ,CAII,IAAMF,EAAqB7X,EAAMY,OAAO6H,SAAS+O,QAAQxX,EAAM0X,eACzDvB,EAAcnW,EAAMY,OAAO6H,SAASoP,EAAqB,GAC/D7X,EAAMyT,oBAAoB0C,GAC1BnW,EAAM0T,gBAAgByC,EAAY5N,QAAQ4N,EAAY5N,QAAQM,OAAS,SANvE7I,EAAM0T,gBAAgB1T,EAAM0X,cAAcnP,QAAQwP,EAAuB,KA4E7D7B,WAAYA,EACZJ,WAAYA,EACZK,YAAaA,EACbJ,YAAaA,EACb1C,OAAQrT,EAAMuT,eAEjBJ,GAEL,6BACKtT,EACA2W,KCpDNwB,OAjEf,SAA6BhY,GAAQ,IAAD,EACIG,qBADJ,mBAC3ByB,EAD2B,KACd4Q,EADc,OAERrS,qBAFQ,mBAE3BQ,EAF2B,KAEpB8R,EAFoB,KAwBlC,OACE,6BACE,kBAACtC,GAAA,EAAD,CAAQvM,KAAM5D,EAAMoQ,OAAQtM,QAAS9D,EAAMqQ,YAAaC,kBAAgB,qBACtE,kBAACC,GAAA,EAAD,CAAarO,GAAG,qBAAhB,sBACA,kBAACuO,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,sFAGA,kBAACtO,EAAA,EAAD,CACEuO,WAAS,EACTC,OAAO,QACP1O,GAAG,QACHY,MAAM,gBACNP,SAhCV,SAA6BsK,GAC3B4F,EAAS5F,EAAEpI,OAAOpC,QAgCVG,KAAK,OACLd,MAAM,YACNmP,WAAS,IAEX,kBAACzO,EAAA,EAAD,CACEwO,OAAO,QACP1O,GAAG,cACHY,MAAM,sBACNP,SArCV,SAAmCsK,GACjC2F,EAAe3F,EAAEpI,OAAOpC,QAqChBG,KAAK,OACLd,MAAM,YACNmP,WAAS,KAGb,kBAACC,GAAA,EAAD,KACE,kBAAC/O,EAAA,EAAD,CAAQZ,QAASnB,EAAMqQ,YAAa3O,MAAM,aAA1C,UAGA,kBAACK,EAAA,EAAD,CAAQZ,QA1ChB,SAAsB0L,GACpB,IAAM5C,EAAc,CAClBtJ,QACAiB,eAGF5B,EAAM+Q,aAAa9G,IAoCkBvI,MAAM,aAArC,cC+CKuW,OAvGf,SAA4BjY,GAAQ,IAqC9BkY,EACAC,EACAC,EAvC6B,EACKjY,qBADL,mBAC1ByB,EAD0B,KACb4Q,EADa,OAEPrS,qBAFO,mBAE1BQ,EAF0B,KAEnB8R,EAFmB,OAGPtS,qBAHO,mBAG1BiV,EAH0B,KAGnBiD,EAHmB,KAkDjC,OAVKrY,EAAMwI,KAAOxI,EAAMqT,QACtB6E,EAAelY,EAAMqT,OAAO1S,MAC5BwX,EAAqBnY,EAAMqT,OAAOzR,YAClCwW,EAAepY,EAAMqT,OAAO+B,QAE5B8C,EAAe,GACfC,EAAqB,GACrBC,EAAe,IAIf,6BACE,kBAACjI,GAAA,EAAD,CAAQvM,KAAM5D,EAAMoQ,OAAQtM,QAAS9D,EAAMqQ,YAAaC,kBAAgB,qBACtE,kBAACC,GAAA,EAAD,CAAarO,GAAG,qBAAqBlC,EAAMwI,IAAM,aAAe,OAAhE,WACA,kBAACiI,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,wCAGA,kBAACtO,EAAA,EAAD,CACEuO,WAAS,EACTC,OAAO,QACP1O,GAAG,QACHY,MAAM,eACNP,SA1DV,SAA6BsK,GAC3B4F,EAAS5F,EAAEpI,OAAOpC,QA0DVG,KAAK,OACLd,MAAM,YACN4W,aAAcJ,EACdrH,WAAS,IAEX,kBAACzO,EAAA,EAAD,CACEwO,OAAO,QACP1O,GAAG,cACHY,MAAM,qBACNP,SAhEV,SAAmCsK,GACjC2F,EAAe3F,EAAEpI,OAAOpC,QAgEhBG,KAAK,OACLd,MAAM,YACN4W,aAAcH,EACdtH,WAAS,IAEX,kBAACzO,EAAA,EAAD,CACEwO,OAAO,QACP1O,GAAG,QACHY,MAAM,YACNP,SArEV,SAA0BsK,GACxBwL,EAASxL,EAAEpI,OAAOpC,QAqEVG,KAAK,OACLd,MAAM,YACN4W,aAAcF,EACdvH,WAAS,KAGb,kBAACC,GAAA,EAAD,KACE,kBAAC/O,EAAA,EAAD,CAAQZ,QAASnB,EAAMqQ,YAAa3O,MAAM,aAA1C,UAGA,kBAACK,EAAA,EAAD,CAAQZ,QA5EhB,SAAsB0L,GAAI,IAAD,EACjB3K,GAAK,UAAAlC,EAAMqT,cAAN,eAAcnR,IAAKlC,EAAMqT,OAAOnR,QAAKwI,EAC5C6N,EAAc5X,EACd6X,EAAc5W,EACd6W,EAAcrD,EACdpV,EAAMqT,SACRkF,EAAcA,GAA4BvY,EAAMqT,OAAO1S,MACvD6X,EAAcA,GAA4BxY,EAAMqT,OAAOzR,YACvD6W,EAAcA,GAA4BzY,EAAMqT,OAAO+B,OAEzD,IAAMlL,EAAa,CACjBhI,KACAvB,MAAO4X,EACP3W,YAAa4W,EACbpD,MAAOqD,GAETzY,EAAMgK,aAAaE,EAAYlK,EAAMwI,MA4DA9G,MAAM,aAArC,cC7BKgX,OA/Df,SAAkC1Y,GAAQ,IAAD,EACPG,qBADO,gCAECA,mBAASH,EAAMY,OAAOgJ,WAFvB,mBAEhC+O,EAFgC,KAElBC,EAFkB,OAGDzY,qBAHC,mBAGhC4W,EAHgC,KAGnB8B,EAHmB,KAiCvC,OAtBAlJ,qBAAU,WAENkJ,EADEF,EACa3B,eAAYC,kBAAkBC,0BAAexN,KAAKoN,MAAM6B,KAGxD3B,eAAY8B,iBAE5B,IAkBD,6BACE,kBAAC3I,GAAA,EAAD,CAAQvM,KAAM5D,EAAMoQ,OAAQtM,QAAS9D,EAAMqQ,YAAaC,kBAAgB,qBACtE,kBAACC,GAAA,EAAD,CAAarO,GAAG,qBAAhB,wBACA,kBAACuO,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,mHAGA,kBAAC,UAAD,CACEqG,YAAaA,EACbgC,gBAAgB,iBAChBC,iBAtBV,SAA0BC,GACxB,IAAMC,EAAWC,aAAUH,iBAAiBjC,EAAakC,GACzD,OAAIC,GACFL,EAAeK,GACR,WAEF,eAiBCE,oBA3BV,SAA6BrC,GAC3B8B,EAAe9B,OA6BX,kBAACjG,GAAA,EAAD,KACE,kBAAC/O,EAAA,EAAD,CAAQZ,QAASnB,EAAMqQ,YAAa3O,MAAM,aAA1C,UAGA,kBAACK,EAAA,EAAD,CAAQZ,QAjDhB,SAAsB0L,GACpB,IAAMwM,EAAsBtC,EAAYuC,oBACxCV,EAAgBW,wBAAaF,IAC7BrZ,EAAMwJ,qBAAqB+P,wBAAaF,KA8CH3X,MAAM,aAArC,cCiGKyM,oBAhJf,SAAwBnO,GAAO,IAuGvBwZ,EACAC,EAtGEvX,EAAOwX,cAAPxX,GAFqB,EAIC/B,qBAJD,mBAIpBS,EAJoB,KAIZ+Y,EAJY,OAKDxZ,qBALC,gCAMuCA,oBAAS,IANhD,mBAMpByZ,EANoB,KAMOC,EANP,OAOqC1Z,oBAAS,GAP9C,mBAOpB2Z,EAPoB,KAOMC,EAPN,OAQiD5Z,oBAAS,GAR1D,mBAQpB6Z,EARoB,KAQYC,EARZ,OASqB9Z,qBATrB,mBASpB+T,EAToB,KASFT,EATE,OAUatT,qBAVb,mBAUpBoT,EAVoB,KAUNG,EAVM,KAyB3B,SAASwG,EAAuBC,GAC5Bna,EAAMma,UAAYA,EAClBJ,GAA4B,GA3BL,4CA+C3B,WAA4B7P,EAAY1B,GAAxC,SAAAhC,EAAA,6DACIuT,GAA4B,GADhC,SAEU/M,GAA6BpM,EAAQsT,EAAkBhK,EAAY1B,GAAKlB,MAAK,WAC/EO,EAAc3F,MAEfuF,OAAM,SAAC4K,GAAU1K,QAAQC,IAAIyK,MALpC,4CA/C2B,kEAuD3B,WAAoCzI,GAApC,SAAApD,EAAA,6DACIyT,GAAkC,GAClCtS,QAAQC,IAAIgC,GAFhB,SAGUoD,GAAqCpM,EAAQgJ,GAHvD,OAII/B,EAAc3F,GAJlB,4CAvD2B,kEA8D3B,WAA6B+H,GAA7B,SAAAzD,EAAA,sEACUwG,GAA8BpM,EAAQqJ,GADhD,OAEIpC,EAAc3F,GACd2X,GAA6B,GAHjC,4CA9D2B,+BAqEZO,EArEY,8EAqE3B,WAA8B9R,GAA9B,eAAA9B,EAAA,sEAC6B8B,EAAQyB,kBADrC,aAC6B,EAAoBlB,QACtB,GAF3B,yCAGewR,QAAQC,IACXhS,EAAQyB,WAAW7G,IAAnB,uCAAuB,WAAMmF,GAAN,eAAA7B,EAAA,sEACEwG,GAAiC3E,GADnC,cACbgL,EADa,yBAEZA,GAFY,2CAAvB,wDAIF/L,MAAK,SAAAiT,GAEH,OADAjS,EAAQC,QAAUgS,EACXjS,MAVnB,gCAce+R,QAAQG,QAAQlS,IAd/B,4CArE2B,+BAuFZmS,EAvFY,8EAuF3B,WAA+BhS,GAA/B,SAAAjC,EAAA,+EACW6T,QAAQC,IAAI7R,EAASvF,KAAI,SAAAoF,GAAO,OAAI8R,EAAe9R,QAD9D,4CAvF2B,+BA2FZT,EA3FY,8EA2F3B,WAA6B3F,GAA7B,eAAAsE,EAAA,sEACyBwG,GAA8B9K,GADvD,cACUtB,EADV,gBAE4B6Z,EAAgB7Z,EAAO6H,UAFnD,OAEI7H,EAAO6H,SAFX,OAGIkR,EAAU/Y,GAHd,4CA3F2B,sBAqH3B,OApBA+O,qBAAU,WACFzN,GACA2F,EAAc3F,KAEnB,CAACA,IAIAlC,EAAM+T,WACNyF,EAAU,6BACN,kBAAC,GAAD,CAAqBpJ,OAAQwJ,EAA2B7I,aA3GrC,4CA2GkEV,YA9F7F,WACIwJ,GAA6B,MA8FzB,kBAAC,GAAD,CAAoBzJ,OAAQ0J,EAA0BtR,IAAKxI,EAAMma,UAAW9G,OAAQE,EAAcvJ,aA5G/E,8CA4G2GqG,YAvFtI,WACI0J,GAA4B,MAuFxB,kBAAC,GAAD,CAA0B3J,OAAQ4J,EAAgCxQ,qBA7G/C,4CA6G2F6G,YA/EtH,WACI4J,GAAkC,IA8EkIrZ,OAAQA,KAG5K6Y,EAA4B,kBAAC1X,EAAA,EAAD,CAAQvB,QAAQ,YAAYkB,MAAM,YAAYP,QA1E9E,WAEIuS,OAAgBhJ,GAChB+I,OAAoB/I,GAEpB1K,EAAM6N,QAAQ9E,KAAd,0BAAsCnI,EAAOsB,OAqEjB,4BAK5BtB,EAEI,yBAAKH,UAAU,eACX,kBAACyM,EAAA,EAAD,CAAMG,WAAS,EAACC,QAAS,GACrB,kBAACJ,EAAA,EAAD,CAAM5D,MAAI,EAACoF,GAAI,GACX,kBAAC,GAAD,CAAsBqF,SAAU/T,EAAM+T,SAAUR,aAAcA,EAAcG,gBAAiBA,EAAiBM,gBAAiBkG,EAAwBhG,iBAAkBA,EAAkBT,oBAAqBA,EAAqB7S,OAAQA,EAAQ0T,wBAzGzQ,WACIuF,GAA6B,OA0GjB,kBAAC3M,EAAA,EAAD,CAAM5D,MAAI,EAACoF,GAAI,GACX,kBAAC,GAAD,CAAoBgF,gBAAiBA,EAAiBD,oBAAqBA,EAAqBM,SAAU/T,EAAM+T,SAAU2D,cAAexD,EAAkBX,aAAcA,EAAc3S,OAAQA,EAAQgW,6BA3F3N,WACIqD,GAAkC,IA0FiPjG,gBAAiBkG,KAEvRT,GAEJD,GAKL,0CAEI,kBAACzL,GAAA,EAAD,U,oBCtIV3P,GAAQsc,aAAe,CAC3BC,QAAS,CACP7G,QAAS,CACP8G,MAAO,UACPC,KAAM,UACNC,KAAM,WAERC,UAAW,CACTH,MAAO,UACPC,KAAM,UACNC,KAAM,YAGVE,WAAY,CACVC,iBAAiB,GAEnBC,UAAW,CACTC,UAAW,CACT9c,KAAM,CACJ+c,cAAe,YA6KRC,G,kDAtKb,aAAe,IAAD,8BACZ,gBACKhP,MAAQ,CACXO,QAAS,GACTnC,MAAO,GACPtD,iBAAauD,EACboD,aAAa,GAEf,EAAKwN,aAAe,EAAKA,aAAa7O,KAAlB,gBACpB,EAAK8O,WAAa,EAAKA,WAAW9O,KAAhB,gBAClB,EAAK+O,OAAS,EAAKA,OAAO/O,KAAZ,gBACd,EAAKnG,WAAa,EAAKA,WAAWmG,KAAhB,gBAClB,EAAKiD,QAAU,EAAKA,QAAQjD,KAAb,gBACf,EAAKgP,cAAgB,EAAKA,cAAchP,KAAnB,gBACrB,EAAK6O,eAAehU,MAAK,WACvB,EAAKmU,mBAfK,E,gGAmBGxV,G,+EACVA,E,uBACH6G,KAAKvB,SAAS,CAAEpE,iBAAauD,IAC7BoC,KAAKvB,SAAS,CAAEuC,aAAa,I,0CAGzBd,GAA4B/G,GAC/BqB,MAAK,SAAAyD,GACJ,IAAM9D,EAAO8D,EAAO9C,OAEpB,GAAIhB,EAAK2B,oBAAsB3B,EAAK2B,mBAAmBC,OAAS,EAAG,CAE9C5B,EAAK2B,mBACrB1F,KAAI,SAAA4F,GAAS,OAAI,EAAKuD,MAAMO,QAAQN,MAAK,SAAA1L,GAAM,OAAIA,EAAOsB,KAAO4G,EAAU5G,SAE9E+E,EAAKuI,eAAiBvI,EAAK2B,mBACxB1F,KAAI,SAAA4F,GAAS,OAAI,EAAKuD,MAAMO,QAAQN,MAAK,SAAA1L,GAAM,OAAIA,EAAOsB,KAAO4G,EAAU5G,SAG5E+E,EAAKyU,iBAAmBzU,EAAKyU,gBAAgB7S,OAAS,IACxD5B,EAAKmI,YAAcnI,EAAKyU,gBACrBxY,KAAI,SAAA4F,GAAS,OAAI,EAAKuD,MAAMO,QAAQN,MAAK,SAAA1L,GAAM,OAAIA,EAAOsB,KAAO4G,EAAU5G,UAG5E+E,EAAKkC,sBAAwBlC,EAAKkC,qBAAqBN,OAAS,IAClE5B,EAAKiC,iBAAmBjC,EAAKkC,qBAC1BjG,KAAI,SAAA4F,GAAS,OAAI,EAAKuD,MAAMO,QAAQN,MAAK,SAAA1L,GAAM,OAAIA,EAAOsB,KAAO4G,EAAU5G,UAGhF,EAAKqJ,SAAS,CAAEpE,YAAaF,IAC7B,EAAKsE,SAAS,CAAEuC,aAAa,O,6IAMjC,IAAI7G,EAAO+F,KACX,GAAI/F,EACF6F,KAAKxG,WAAWW,EAAKJ,UAChB,GAAIU,SAASC,OAAO8N,MAAM,KAAKqG,MAAK,SAACrS,GAAD,OAAUA,EAAKsS,OAAOC,WAAW,cAAa,CACvF,IAAIC,EAAcvU,SAASC,OAAOuU,QAAQ,gDAAiD,MAC3FjP,KAAKxG,WAAWwV,QAEhBhP,KAAKxG,gBAAWoE,K,8BAIZzD,GACN6F,KAAKxG,WAAWW,EAAK/E,IACrBqF,SAASC,OAAT,iBAA4BP,EAAK/E,M,mKAI7B0K,EAAU,G,SlBpBP9G,GAAGI,WAAW,UAAUE,MkBqBOkB,MAAK,SAACsD,GAC1CA,EAAaC,SAAQ,SAAC1E,GACpB,IAAMvF,EAASuF,EAAI8B,OACbH,EAAW3B,EAAIjE,GACrBtB,EAAOE,MAAMsF,MAAMkB,MAAK,SAAAL,GACtBrG,EAAOE,MAAQmG,EAAKgB,UAKtBrH,EAAOsB,GAAK4F,EACZ8E,EAAQ7D,KAAKnI,GACb,EAAK2K,SAAS,CAAEqB,QAASA,U,kQAMzBnC,EAAQ,G,SACNuC,KACH1F,MAAK,SAACsD,GACLA,EAAaC,SAAQ,SAAC1E,GACpB,IAAMc,EAAOd,EAAI8B,OACjBhB,EAAK/E,GAAKiE,EAAIjE,GACduI,EAAM1B,KAAK9B,GACX,EAAKsE,SAAS,CACZd,gB,gIAMA,IAAD,OAIDuR,EAAe,SAAC,GAAD,EAAGC,WAAH,IAAkBjc,EAAlB,qCACnB,EAAKqM,MAAMlF,YACP,kBAAC,IAAUnH,GACX,kBAAC,IAAD,CAAUiC,GAAI,CACdiM,SAAU,SACV7B,MAAO,CAAE2B,KAAMhO,EAAMiO,cAG3B,OACE,kBAAC,KAAD,CAAkB7P,MAAOA,IACvB,kBAAC,IAAD,KACE,6BACE,yBAAK8d,QAASpP,KAAKT,MAAMlF,aACvB,kBAAClC,EAAA,EAAD,CAAQvG,SAAS,UACf,kBAACwG,EAAA,EAAD,KACE,kBAACnD,EAAA,EAAD,CAAQvB,QAAQ,YAAYkB,MAAM,YAAYjB,UAAU,mBAAmBkB,UAAWoN,IAAY9M,GAAG,kBAArG,eACA,kBAACF,EAAA,EAAD,CAAQvB,QAAQ,YAAYkB,MAAM,YAAYjB,UAAU,mBAAmBkB,UAAWoN,IAAY9M,GAAG,cAArG,cACA,kBAACF,EAAA,EAAD,CAAQvB,QAAQ,WAAWkB,MAAM,YAAYjB,UAAU,yBAAyBkB,UAAWoN,IAAY9M,GAAG,iBAA1G,mBACA,kBAAChB,EAAA,EAAD,CAAYR,UAAU,2BAA2BkB,UAAWoN,IAAY9M,GAAG,WAAWP,MAAM,UAAUR,aAAW,QAC/G,kBAAC,IAAD,UAQR,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOib,OAAK,EAACC,KAAK,UAChB,kBAAC,GAAD,CAAOxO,cAAed,KAAK4C,QAASzI,KAAM6F,KAAKT,MAAMlF,YAAa2G,YAAahB,KAAKT,MAAMyB,eAE5F,kBAACkO,EAAD,CAAcI,KAAK,qBACjB,kBAAC,GAAD,CAAexP,QAASE,KAAKT,MAAMO,QAAS3F,KAAM6F,KAAKT,MAAMlF,YAAab,WAAYwG,KAAKxG,cAE7F,kBAAC0V,EAAD,CAAcI,KAAK,uBACjB,kBAAC,GAAD,CAAgBrI,UAAU,EAAO9M,KAAM6F,KAAKT,MAAMlF,eAEpD,kBAAC6U,EAAD,CAAcI,KAAK,cACjB,kBAAC,GAAD,CAAWnV,KAAM6F,KAAKT,MAAMlF,eAE9B,kBAAC6U,EAAD,CAAcI,KAAK,YACjB,kBAAC,GAAD,CAAanV,KAAM6F,KAAKT,MAAMlF,YAAab,WAAYwG,KAAKxG,cAE9D,kBAAC0V,EAAD,CAAcI,KAAK,iBACjB,kBAAC,GAAD,CAAcnV,KAAM6F,KAAKT,MAAMlF,YAAab,WAAYwG,KAAKxG,WAAY0M,cAAelG,KAAKwO,gBAE/F,kBAACU,EAAD,CAAcI,KAAK,mBACjB,kBAAC,GAAD,CAAgBrI,UAAU,EAAM9M,KAAM6F,KAAKT,MAAMlF,uB,GA7J/CjH,IAAMqN,WClCJ1J,QACW,cAA7BwY,OAAOpO,SAASqO,UAEe,UAA7BD,OAAOpO,SAASqO,UAEhBD,OAAOpO,SAASqO,SAASC,MACvB,2DCZNC,IAAShB,OAAO,kBAAC,GAAD,MAASjU,SAASkV,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBtV,MAAK,SAAAuV,GACJA,EAAaC,gBAEdrV,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAMqV,c","file":"static/js/main.4507c8cb.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { Button } from '@material-ui/core';\r\nimport {Link} from 'react-router-dom'\r\nimport FavoriteBorderOutlinedIcon from '@material-ui/icons/FavoriteBorderOutlined';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    maxWidth: 345,\r\n    minWidth: 345,\r\n    maxHeight: 400,\r\n    minHeight: 400,\r\n    position: 'relative',\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n  actionsRow: {\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    left: 0\r\n  }, \r\n  content: {\r\n    paddingBottom: '1rem'\r\n  }\r\n}));\r\n\r\nexport default function CourseCard(props) {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  const [isFavorited, setIsFavorited] = React.useState(false)\r\n\r\n\r\n  if ( props.isCourseAFavorite != isFavorited){\r\n    setIsFavorited(props.isCourseAFavorite);\r\n  }\r\n\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  const favoriteButtonClicked = () => {\r\n    if (isFavorited) {\r\n      setIsFavorited(false);\r\n      props.removeFavoriteClicked(props.course);\r\n    } else {\r\n      setIsFavorited(true);\r\n      props.favoriteClicked(props.course);\r\n    }\r\n   \r\n  }\r\n\r\n  return (\r\n    <Card variant=\"outlined\" className={classes.root}>\r\n      <CardHeader\r\n        title={props.course.title}\r\n        subheader={props.course.owner.displayName}\r\n        action={\r\n          <IconButton aria-label=\"add to favorites\" onClick={favoriteButtonClicked}>\r\n           { isFavorited ? <FavoriteIcon /> : <FavoriteBorderOutlinedIcon />  } \r\n          </IconButton>\r\n        }\r\n      />\r\n      <CardMedia\r\n        className={classes.media}\r\n        image=\"/static/images/cards/paella.jpg\"\r\n        title=\"Paella dish\"\r\n      />\r\n      <CardContent className={classes.content}>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          {props.course.description}\r\n        </Typography> \r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          {props.course.owner.displayName}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions className={classes.actionsRow} disableSpacing>\r\n        <Button \r\n          variant=\"contained\" \r\n          color=\"secondary\"\r\n          component={Link}\r\n          to={`/courseOverview/${props.course.id}`}\r\n          >\r\n            Overview\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}","import React from 'react';\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { IconButton } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport './SearchBar.css';\r\n\r\nfunction SearchBar(props) {\r\n  return (\r\n    <div className=\"search-bar\">\r\n      <TextField value={props.searchValue} onChange={props.onChange} id=\"outlined-search\" type=\"search\" variant=\"outlined\" color=\"secondary\" />\r\n      <IconButton className=\"menu-button\" onClick={props.onSearchClicked}>\r\n        <SearchIcon className=\"search-bar-icon\" />\r\n      </IconButton>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchBar\r\n\r\n\r\n","import React from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\n\r\nfunction CourseLibraryToolbarMenuItem(props){\r\n    return (\r\n      <FormControlLabel value={props.value} control={<Radio />} label={props.value} />\r\n    )\r\n  }\r\n\r\n  export default CourseLibraryToolbarMenuItem","import React from 'react';\r\n\r\nimport Menu from '@material-ui/core/Menu';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport CourseLibraryToolbarMenuItem from './CourseLibraryToolbarMenuItem/CourseLibraryToolbarMenuItem.component';\r\n\r\n\r\n\r\nfunction CourseLibraryToolbarMenu(props){\r\n\r\n  let menuItems = props.options.map( option => {\r\n    return (\r\n      <CourseLibraryToolbarMenuItem\r\n        handleClick={option.associatedClickFunction}\r\n        value={option.display}>\r\n      </CourseLibraryToolbarMenuItem>\r\n    )\r\n  })\r\n\r\n  const onChangeFunction = (event) => {\r\n    props.closeFunction(event.target.value)\r\n  }\r\n\r\n    return (\r\n      <Menu\r\n          id={props.menuId}\r\n          anchorEl={props.element}\r\n          keepMounted\r\n          open={Boolean(props.element)}\r\n          onClose={props.closeFunction}\r\n        >\r\n          <MenuItem>\r\n            <FormControl component=\"fieldset\">\r\n            <FormLabel component=\"legend\">{props.menuLabel}</FormLabel>\r\n            <RadioGroup aria-label=\"gender\" name={props.radioGroupName} value={props.menuValue} onChange={onChangeFunction}>\r\n              {menuItems}\r\n            </RadioGroup>\r\n            </FormControl>\r\n          </MenuItem>\r\n      </Menu>\r\n    )\r\n  }\r\n\r\n  export default CourseLibraryToolbarMenu","import React from 'react';\r\n\r\nimport {AppBar, Toolbar, IconButton, Typography } from '@material-ui/core';\r\nimport {Button} from '@material-ui/core';\r\n\r\nimport SearchBar from './SearchBar/SearchBar.component';\r\nimport CourseLibraryToolbarMenu from './CourseLibraryToolbarMenu/CourseLibraryToolbarMenu.component'\r\n\r\n\r\n//<CourseLibraryMenu handleClose={this.handleClose} sortByElement={props.state.sortByElement}></CourseLibraryMenu>\r\n\r\n\r\nfunction CourseLibraryToolbar(props){\r\n\r\n    let menuButtons = props.menuItems.map(menuItem => {\r\n        return (\r\n            <Button\r\n                color=\"inherit\" \r\n                className=\"menu-button\"\r\n                onClick={menuItem.clickedFunction}\r\n            >\r\n                {menuItem.buttonText}\r\n            </Button>\r\n        )\r\n    })\r\n\r\n    let menus = props.menuItems.map(menuItem => {\r\n        return(\r\n            <CourseLibraryToolbarMenu\r\n                element={menuItem.element}\r\n                closeFunction = {menuItem.closeFunction}\r\n                options={menuItem.menuOptions}\r\n                menuId={menuItem.menuId}\r\n                menuLabel={menuItem.buttonText}\r\n            >\r\n            </CourseLibraryToolbarMenu>\r\n        )\r\n    })\r\n\r\n    return(\r\n        <AppBar position=\"static\" className=\"course-library-app-bar\">\r\n            <Toolbar>\r\n                {menuButtons}\r\n                <SearchBar searchValue={props.searchInfo.value} onChange={props.searchInfo.onChange} onSearchClicked={props.searchInfo.onClick}></SearchBar>\r\n            </Toolbar>\r\n            {menus}\r\n      </AppBar>\r\n    )\r\n}\r\n\r\nexport default CourseLibraryToolbar","import firebase from 'firebase'\r\n\r\n\r\n/**\r\n * Firebase Set Up\r\n */\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyA8tAHYGUiNkFHq6452W4Qr79eibVmtRZA\",\r\n    authDomain: \"mooc-in-a-box.firebaseapp.com\",\r\n    databaseURL: \"https://mooc-in-a-box.firebaseio.com\",\r\n    projectId: \"mooc-in-a-box\",\r\n    storageBucket: \"mooc-in-a-box.appspot.com\",\r\n    messagingSenderId: \"594314585164\",\r\n    appId: \"1:594314585164:web:3ae152452d1c238af100e9\",\r\n    measurementId: \"G-LXH34JCXZS\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nconst db = firebase.firestore();\r\n\r\n\r\n/*\r\n* -----------------------------------------------------------\r\n*  USER Functions\r\n* -----------------------------------------------------------\r\n*/\r\n\r\nexport const getUserById = userId => {\r\n    return db.collection('Users').doc(userId).get();\r\n}\r\n\r\nexport const getAllUsers = () => {\r\n    return db.collection('Users').get();\r\n}\r\n\r\nexport const updateUser = async (userId, updates) => {\r\n    return db.collection('Users')\r\n        .doc(userId)\r\n        .set(updates, { merge: true })\r\n}\r\n\r\nexport const createUser = async (userAuth) => {\r\n    return db.collection('Users')\r\n        .doc(userAuth.uid)\r\n        .set({\r\n            id: userAuth.uid,\r\n            name: userAuth.displayName,\r\n            photoURL: userAuth.photoURL,\r\n            email: userAuth.email,\r\n        },\r\n            { merge: true }\r\n        )\r\n}\r\n\r\nexport const getCurrentUser = () => {\r\n    var user = firebase.auth().currentUser;\r\n    if (user) {\r\n        return user;\r\n    } else {\r\n        return undefined;\r\n    }\r\n}\r\n\r\nexport const deleteUser = async () => {\r\n    var user = firebase.auth().currentUser;\r\n\r\n    return await user.delete().then(function () {\r\n        document.cookie = 'userid=; expires=Thu, 01 Jan 1970 00:00:01 GMT;';\r\n        return true;\r\n    }).catch(function (error) {\r\n        console.log(error);\r\n        return false;\r\n    });\r\n}\r\n\r\n\r\n\r\n/*\r\n* -----------------------------------------------------------\r\n*  Course Functions\r\n* -----------------------------------------------------------\r\n*/\r\n\r\nexport const getCourseById = courseId => {\r\n    return db.collection('Course')\r\n        .doc(courseId)\r\n        .get()\r\n        .then(courseResult => {\r\n            if (courseResult.exists) {\r\n                const course = courseResult.data();\r\n                course.id = courseId;\r\n                return course;\r\n            } else {\r\n                return null\r\n            }\r\n        });\r\n};\r\n\r\nexport const getAllCourses = () => {\r\n    return db.collection('Course').get();\r\n}\r\n\r\nexport const createCourse = async (user, courseInfo) => {\r\n    const userDocRef = db.doc(`Users/${user.id}`)\r\n    const lessonRef = db.doc(courseInfo.chapter.lessons);\r\n    courseInfo.chapter.lessons = lessonRef;\r\n    return await db.collection('Course').add({\r\n        owner: userDocRef,\r\n        title: courseInfo.title,\r\n        description: courseInfo.description,\r\n        chapters: courseInfo.chapters\r\n    })\r\n        .then(async courseDoc => {\r\n            let usersCreatedCourses;\r\n            if (user.createdCoursesRefs && user.createdCoursesRefs.length > 0) {\r\n                usersCreatedCourses = user.createdCoursesRefs;\r\n            } else {\r\n                usersCreatedCourses = []\r\n            }\r\n\r\n            const courseRef = db.doc(`Course/${courseDoc.id}`)\r\n            usersCreatedCourses.push(courseRef);\r\n            const updateObject = {\r\n                createdCoursesRefs: usersCreatedCourses\r\n            }\r\n\r\n            return await updateUser(user.id, updateObject);\r\n        })\r\n}\r\n\r\nexport const favoriteCourse = async (user, courseInfo) => {\r\n    const courseRef = db.doc(`Course/${courseInfo.id}`)\r\n    let favoritedCourses;\r\n\r\n    if (user.favoritedCoursesRefs && user.favoritedCoursesRefs.length > 0) {\r\n        favoritedCourses = user.favoritedCoursesRefs;\r\n    } else {\r\n        favoritedCourses = []\r\n    }\r\n\r\n    favoritedCourses.push(courseRef);\r\n\r\n    const updateObject = {\r\n        favoritedCoursesRefs: favoritedCourses\r\n    }\r\n\r\n    return await updateUser(user.id, updateObject);\r\n}\r\n\r\nexport const removeFavoriteCourse = async (user, courseInfo) => {\r\n    const favoritedCourses = user.favoritedCoursesRefs.filter(item => item.id !== courseInfo.id);\r\n    const updateObject = {\r\n        favoritedCoursesRefs: favoritedCourses\r\n    }\r\n\r\n    return await updateUser(user.id, updateObject);\r\n}\r\n\r\n\r\nexport const updateCourse = async (courseId, updates) => {\r\n    return db.collection('Course')\r\n        .doc(courseId)\r\n        .set(updates, { merge: true });\r\n}\r\n\r\n\r\n\r\n\r\n/*\r\n* !!!!!!!!\r\n* Course Attributes Section\r\n* !!!!!!!!\r\n*/\r\nexport const updateCourseOverview = async (course, content) => {\r\n    const contentJSON = JSON.stringify(content);\r\n\r\n    const updateObject = {\r\n        overview: contentJSON\r\n    }\r\n\r\n    return await updateCourse(course.id, updateObject);\r\n}\r\n\r\nexport const addNewChapter = async (course, newChapterInfo) => {\r\n    const chapter = {}\r\n    chapter.title = newChapterInfo.title;\r\n    chapter.description = newChapterInfo.description;\r\n    chapter.id = 0\r\n    chapter.lessonsRef = [];\r\n\r\n    if (course.chapters && course.chapters.length > 0) {\r\n        chapter.id = course.chapters.length;\r\n        course.chapters.push(chapter);\r\n    } else {\r\n        course.chapters = [];\r\n        course.chapters.push(chapter);\r\n    }\r\n\r\n    const updateObject = {\r\n        chapters: course.chapters\r\n    }\r\n\r\n    return await updateCourse(course.id, updateObject);\r\n\r\n}\r\n\r\nexport const updateLesson = async (course, chapterInfo, lessonInfo, add) => {\r\n    if (add) { // For initial lesson creation.\r\n        delete lessonInfo.id; // cuz undefined is not allowed\r\n        return await db.collection('Course').doc(course.id).collection('Lessons').add(lessonInfo)\r\n            .then(async lessonDoc => {\r\n                const lessonRef = db.doc(`Course/${course.id}/Lessons/${lessonDoc.id}`);\r\n                const chapters = course.chapters.map(chapter => {\r\n                    if (chapter === chapterInfo) {\r\n                        chapter.lessonsRef.push(lessonRef);\r\n                    }\r\n                    return chapter\r\n                });\r\n\r\n                const updateObject = {\r\n                    chapters\r\n                }\r\n                return await updateCourse(course.id, updateObject)\r\n            });\r\n    } else {\r\n        const lessonRef = db.doc(`Course/${course.id}/Lessons/${lessonInfo.id}`);\r\n        return await lessonRef.set(lessonInfo, { merge: true });\r\n    }\r\n}\r\n\r\n\r\n/*\r\n* -----------------------------------------------------------\r\n*  Login Functions\r\n* -----------------------------------------------------------\r\n*/\r\n\r\nexport const logUserInUser = async (isGoog) => {\r\n    let provider;\r\n    isGoog ? provider = new firebase.auth.GoogleAuthProvider() :\r\n        provider = new firebase.auth.FacebookAuthProvider();\r\n    let users = [];\r\n    let currentUser = undefined;\r\n    let authUser = undefined;\r\n    // Get all users so we can see if the logged in one is one of ours.\r\n    // TODO(jessi): store this data so we don't need to fetch it, or directly ask for the user\r\n    // once they log in and if no user exists create one. Sounds like work.\r\n    await getAllUsers()\r\n        .then((queryResults) => {\r\n            queryResults.forEach((doc) => {\r\n                const user = doc.data();\r\n                user.id = doc.id;\r\n                users.push(user);\r\n            })\r\n        });\r\n\r\n    return await firebase.auth().signInWithPopup(provider).then(async function (result) {\r\n        authUser = result.user;\r\n        users.forEach(u => {\r\n            if (u.id === authUser.uid) {\r\n                currentUser = u;\r\n            }\r\n        });\r\n        // Didn't find an existing user.\r\n        if (currentUser === undefined) {\r\n            // Create new user\r\n            await createUser(authUser).then(async () => {\r\n                // Get the new user to return\r\n                return getCurrentUser();\r\n            }).catch(error => {\r\n                console.log(error);\r\n            });\r\n        }\r\n        return currentUser;\r\n    }).catch(function (error) {\r\n        console.log(error);\r\n    });\r\n}\r\n\r\nexport const signOut = async () => {\r\n    return await firebase.auth().signOut().then(function () {\r\n        document.cookie = 'userid=; expires=Thu, 01 Jan 1970 00:00:01 GMT;';\r\n        return true;\r\n    }).catch(function (error) {\r\n        console.log(error);\r\n        return false;\r\n    });\r\n}\r\n\r\n\r\n\r\n/*\r\n* -----------------------------------------------------------\r\n*  Utility Functions\r\n* -----------------------------------------------------------\r\n*/\r\n\r\nexport const getDocFromDocRef = docRef => {\r\n    return docRef.get()\r\n        .then(result => {\r\n            if (result.exists) {\r\n                const myResult = result.data();\r\n                myResult.id = result.id;\r\n                return myResult;\r\n            } else {\r\n                return null;\r\n            }\r\n        })\r\n}","import React from 'react';\r\nimport './CourseLibrary.css';\r\nimport {Button} from '@material-ui/core';\r\nimport CourseCard from '../CourseCard/CourseCard';\r\nimport { render } from '@testing-library/react';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {AppBar, Toolbar, IconButton, Typography } from '@material-ui/core';\r\nimport SearchBar from './CourseLibraryToolbar/SearchBar/SearchBar.component';\r\nimport CourseLibraryMenu from './CourseLibraryToolbar/CourseLibraryToolbarMenu/CourseLibraryToolbarMenu.component'\r\nimport CourseLibraryToolbar from './CourseLibraryToolbar/CourseLibraryToolbar.component'\r\n\r\nimport * as FirebaseService from '../../service/firebase.service';\r\n\r\n\r\nclass CourseLibrary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // Bind Search\r\n    this.handleSearchChange = this.handleSearchChange.bind(this);\r\n    this.handleSearchClicked = this.handleSearchClicked.bind(this);\r\n    // Bind Sort By\r\n    this.sortByClicked = this.sortByClicked.bind(this);\r\n    this.sortByHandleClose = this.sortByHandleClose.bind(this);\r\n    // Bind Topic\r\n    this.topicClicked = this.topicClicked.bind(this);\r\n    this.topicHandleClose = this.topicHandleClose.bind(this);\r\n    // Bind Organization\r\n    this.organizationClicked = this.organizationClicked.bind(this);\r\n    this.organizationHandleClosed = this.organizationHandleClosed.bind(this);\r\n\r\n    this.buildMenuItems = this.buildMenuItems.bind(this);\r\n    this.favoriteClicked = this.favoriteClicked.bind(this);\r\n    this.removeFavoriteClicked = this.removeFavoriteClicked.bind(this);\r\n    this.state = {\r\n      searchValue: \"\",\r\n      sortByElement: null,\r\n      topicElement: null,\r\n      organizationElement: null,\r\n      sortFilterValue: null,\r\n      topicFilterValue: null,\r\n      organizationFilterValue:null,\r\n      activeCourses: props.courses\r\n    }\r\n  }\r\n\r\n  /** Search Function */\r\n  handleSearchChange(e){\r\n    const searchValue = e.target.value;\r\n    console.log(searchValue);\r\n    const activeCourses = this.props.courses.filter(course => course.title.includes(searchValue))\r\n    this.setState({\r\n      searchValue,\r\n      activeCourses\r\n    })\r\n  }\r\n\r\n  handleSearchClicked(e){\r\n  }\r\n\r\n  /** Sort By Functions */\r\n  sortByClicked = event => {\r\n    this.setState({\r\n      sortByElement: event.currentTarget\r\n    });\r\n  };\r\n\r\n  sortByHandleClose = (value) => {\r\n    this.setState({\r\n      sortByElement: null,\r\n      sortFilterValue: value\r\n    });\r\n  };\r\n\r\n\r\n  /** Topic Functions */\r\n  topicClicked = event => {\r\n    this.setState({\r\n      topicElement: event.currentTarget\r\n    });\r\n  };\r\n\r\n  topicHandleClose = (value) => {\r\n    this.setState({\r\n      topicElement: null,\r\n      topicFilterValue: value\r\n    });\r\n  };\r\n\r\n  /** Organization functions */\r\n  organizationClicked = event => {\r\n    this.setState({\r\n      organizationElement: event.currentTarget\r\n    });\r\n  };\r\n\r\n  organizationHandleClosed = (value) => {\r\n    this.setState({\r\n      organizationElement: null,\r\n      organizationFilterValue: value\r\n    });\r\n  };\r\n\r\n  async favoriteClicked(course) {\r\n    await FirebaseService.favoriteCourse(this.props.user, course);\r\n    this.props.updateUser(this.props.user.id)\r\n  }\r\n\r\n  async removeFavoriteClicked(course){\r\n    await FirebaseService.removeFavoriteCourse(this.props.user, course);\r\n    this.props.updateUser(this.props.user.id)\r\n\r\n  }\r\n\r\n  buildMenuItems = () => {\r\n    const sortByInfo = {\r\n      buttonText: \"Sort By\",\r\n      menuId: \"menu-sort-by\",\r\n      clickedFunction: this.sortByClicked,\r\n      closeFunction: this.sortByHandleClose,\r\n      element: this.state.sortByElement,\r\n      radioGroupName: \"menuRadio\",\r\n      menuValue: this.state.sortFilterValue,\r\n      menuOptions: [\r\n        {\r\n          display: \"Newest\",\r\n          associatedClickFunction:  this.sortByHandleClose\r\n        },\r\n        {\r\n          display: \"Recommended\",\r\n          associatedClickFunction:  this.sortByHandleClose\r\n        },\r\n        {\r\n          display: \"Trending\",\r\n          associatedClickFunction:  this.sortByHandleClose\r\n        }\r\n      ]\r\n    }\r\n\r\n    const topicInfo = {\r\n      buttonText: \"Topic\",\r\n      menuId: \"menu-topic\",\r\n      clickedFunction: this.topicClicked,\r\n      element: this.state.topicElement,\r\n      closeFunction: this.topicHandleClose,\r\n      radioGroupName: \"topicRadio\",\r\n      menuValue: this.state.topicFilterValue,\r\n      menuOptions: [\r\n        {\r\n          display: \"Science\",\r\n          associatedClickFunction:  this.topicHandleClose\r\n        },\r\n        {\r\n          display: \"Technology\",\r\n          associatedClickFunction:  this.topicHandleClose\r\n        },\r\n        {\r\n          display: \"History\",\r\n          associatedClickFunction:  this.topicHandleClose\r\n        },\r\n        {\r\n          display: \"Arts\",\r\n          associatedClickFunction:  this.topicHandleClose\r\n        }\r\n      ]\r\n    }\r\n\r\n    const organizationInfo = {\r\n      buttonText: \"Organization\",\r\n      menuId: \"menu-organization\",\r\n      clickedFunction: this.organizationClicked,\r\n      element: this.state.organizationElement,\r\n      closeFunction: this.organizationHandleClosed,\r\n      radioGroupName: \"organizationRadio\",\r\n      menuValue: this.state.organizationFilterValue,\r\n      menuOptions: [\r\n        {\r\n          display: \"Required\",\r\n          associatedClickFunction:  this.organizationHandleClosed\r\n        },\r\n        {\r\n          display: \"Recommended\",\r\n          associatedClickFunction:  this.organizationHandleClosed\r\n        },\r\n        {\r\n          display: \"All Courses\",\r\n          associatedClickFunction:  this.organizationHandleClosed\r\n        }\r\n      ]\r\n    }\r\n\r\n    return [sortByInfo, topicInfo, organizationInfo];\r\n  }\r\n\r\n  isCourseAFavorite = (user, course) => {\r\n    \r\n    if( user.favoritedCourses && user.favoritedCourses.length > 0 ){\r\n      return user.favoritedCourses\r\n        .find(favoritedCourse => favoritedCourse.id === course.id);\r\n    }\r\n    return false;\r\n  }\r\n\r\n\r\n  render() {\r\n    // Mappings\r\n    const menuItems = this.buildMenuItems();\r\n    const favoriteClicked = this.favoriteClicked;\r\n    const isCourseAFavorite = this.isCourseAFavorite;\r\n    const removeFavoriteClicked = this.removeFavoriteClicked\r\n\r\n    const user = this.props.user;\r\n    const searchInfo = {\r\n      value: this.state.searchValue,\r\n      onChange: this.handleSearchChange,\r\n      onClick: this.handleSearchClicked\r\n    }\r\n    let listItems = []\r\n    if (user) {\r\n\r\n      listItems = this.state.activeCourses.map(function(item) {\r\n        return (\r\n            <Grid item s={4}>\r\n              <CourseCard course={item} favoriteClicked={favoriteClicked} removeFavoriteClicked={removeFavoriteClicked} isCourseAFavorite={isCourseAFavorite(user, item)}></CourseCard>\r\n            </Grid>\r\n        );\r\n      });\r\n    }\r\n    \r\n    return (\r\n      <div class=\"course-library\">\r\n        <CourseLibraryToolbar menuItems={menuItems} searchInfo={searchInfo}></CourseLibraryToolbar>\r\n          <div className=\"course-list\">\r\n          <Grid container spacing={3}>\r\n            {listItems}\r\n          </Grid>\r\n          </div>\r\n      </div>\r\n\r\n      );\r\n  }\r\n}\r\n\r\nexport default CourseLibrary;\r\n","import React from 'react';\r\nimport './Login.css';\r\nimport { Button } from '@material-ui/core';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { withRouter, Redirect } from \"react-router-dom\";\r\nimport * as FirebaseService from '../../service/firebase.service';\r\n\r\nclass LoginPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { redirectToReferrer: false };\r\n    this.loginGoogle = this.loginGoogle.bind(this);\r\n    this.loginFacebook = this.loginFacebook.bind(this);\r\n\r\n  }\r\n\r\n  async loginGoogle(event) {\r\n    // TODO(jessi): set a loading state\r\n    await FirebaseService.logUserInUser(/* isGoog= */ true).then(u => {\r\n      this.props.completeLogin(u);\r\n      this.props.history.push(\"/courseLibrary\");\r\n      this.setState({ redirectToReferrer: true });\r\n    });\r\n    // TODO(jessi): unset loading state\r\n  }\r\n\r\n  async loginFacebook(event) {\r\n    // TODO(jessi): set a loading state\r\n    await FirebaseService.logUserInUser(/* isGoog= */ false).then(u => {\r\n      this.props.completeLogin(u);\r\n      this.props.history.push(\"/courseLibrary\");\r\n      this.setState({ redirectToReferrer: true });\r\n    });\r\n    // TODO(jessi): unset loading state\r\n  }\r\n\r\n  render() {\r\n    // Show loading screen while we load the user.\r\n    if (this.props.loadingUser) {\r\n      return (\r\n        <div>\r\n          Loading..\r\n          <CircularProgress></CircularProgress>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    // Redirect if logged in or complete login.\r\n    const { from } = this.props.location.state || { from: { pathname: '/' } }\r\n    const { redirectToReferrer } = this.state\r\n    if (redirectToReferrer === true || this.props.user) {\r\n      return <Redirect to={from} />\r\n    }\r\n\r\n\r\n    // TODO(jessi): style these buttons\r\n    return (\r\n      <div className=\"login\">\r\n        <h1>Sign into Mooc in a Box</h1>\r\n        <Button color=\"inherit\" className=\"menu-button\" onClick={this.loginFacebook}>\r\n          Sign in with Facebook\r\n      </Button>\r\n        <Button color=\"inherit\" className=\"menu-button\" onClick={this.loginGoogle}>\r\n          Sign in with Google\r\n      </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(LoginPage);\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Link as RouterLink,\r\n} from \"react-router-dom\";\r\nimport {Button} from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { IconButton } from '@material-ui/core';\r\n\r\nfunction CoursesDropdownComponent(props) {\r\n    return (\r\n      <ExpansionPanel>\r\n              <ExpansionPanelSummary\r\n              expandIcon={<ExpandMoreIcon />}\r\n              aria-controls=\"panel1a-content\"\r\n              id=\"panel1a-header\"\r\n              >\r\n              <Typography variant=\"subtitle2\">{props.courses.length} Course(s)</Typography>\r\n              </ExpansionPanelSummary>\r\n              <ExpansionPanelDetails>\r\n              <Grid container spacing={2}>\r\n                  <Grid item xs={12} md={6}>\r\n                      <div>\r\n                          <List dense=\"true\">\r\n                          {\r\n                            props.courses.map( course => {\r\n                              return (\r\n                                <span>\r\n                                  <ListItem \r\n                                  >\r\n                                    <Button\r\n                                      component={RouterLink} \r\n                                      to={`/courseOverview/${course.id}`}\r\n                                    >\r\n                                      {course.title}\r\n                                    </Button>\r\n                                    { props.includeEditIcon && \r\n                                      <IconButton \r\n                                        className=\"menu-button\" \r\n                                        color=\"inherit\" \r\n                                        aria-label=\"menu\"\r\n                                        component={RouterLink}\r\n                                        to={`/editCourse/${course.id}`}\r\n                                      >\r\n                                        <EditIcon/>\r\n                                      </IconButton>\r\n                                    }\r\n                                  </ListItem>\r\n                                </span>\r\n                                \r\n                              )\r\n                            })\r\n                          }\r\n                          </List>\r\n                      </div>\r\n                      </Grid>\r\n                  </Grid>\r\n              </ExpansionPanelDetails>\r\n          </ExpansionPanel>\r\n    )\r\n  }\r\n\r\n  export default CoursesDropdownComponent;\r\n","import React, { useState } from 'react';\r\nimport './MyCourses.css';\r\nimport {\r\n  Link as RouterLink,\r\n} from \"react-router-dom\";\r\nimport { Button } from '@material-ui/core';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { IconButton } from '@material-ui/core';\r\n\r\nimport CoursesDropdownComponent from '../CoursesDropdown/CoursesDropdown.component';\r\n\r\n\r\n\r\n/**\r\n * \r\n * http://localhost:3000/courseOverview/rlfxOavBn4nPZLNTRMkL\r\n * http://localhost:3000/courseOverview/rlfxOavBn4nPZLNTRMkL\r\n */\r\n\r\n/**\r\n * \r\n * \r\n */\r\n\r\n\r\n\r\nfunction generate(element) {\r\n  return React.cloneElement(element, {\r\n    key: element,\r\n  })\r\n}\r\n\r\nfunction CurrentCoursesComponent(props) {\r\n  let numberOfCourses = props.currentCourses.length;\r\n\r\n  return (\r\n    <div>\r\n      <h1> Current Courses </h1>\r\n      <CoursesDropdownComponent courses={props.currentCourses}></CoursesDropdownComponent>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nfunction PastCoursesComponent(props) {\r\n  return (\r\n    <div>\r\n      <h1> Past Courses </h1>\r\n      <CoursesDropdownComponent courses={props.pastCourses}></CoursesDropdownComponent>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction SavedCoursesComponent(props) {\r\n  return (\r\n    <div>\r\n      <h1> Favorited Courses </h1>\r\n      <CoursesDropdownComponent courses={props.savedCourses}></CoursesDropdownComponent>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction CreatedCoursesComponent(props) {\r\n  return (\r\n    <div>\r\n      <h1> Created Courses </h1>\r\n      <CoursesDropdownComponent courses={props.createdCourses} includeEditIcon={true}></CoursesDropdownComponent>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nfunction MyCourses(props) {\r\n\r\n  const [user, setUser] = useState();\r\n\r\n  React.useEffect(() => {\r\n    setUser(props.user);\r\n  }, [props]);\r\n\r\n\r\n  if (user) {\r\n    const courseComponentList = []\r\n    let hasCourses = false;\r\n\r\n\r\n    if (user.currentCourses && user.currentCourses.length > 0) {\r\n      const element = <CurrentCoursesComponent currentCourses={user.currentCourses}></CurrentCoursesComponent>\r\n      courseComponentList.push(element);\r\n      hasCourses = true;\r\n    }\r\n\r\n    if (user.pastCourses && user.pastCourse.length > 0) {\r\n      const element = <PastCoursesComponent pastCourses={user.pastCourses}></PastCoursesComponent>\r\n      courseComponentList.push(element);\r\n      hasCourses = true;\r\n\r\n    }\r\n\r\n    if (user.favoritedCourses && user.favoritedCourses.length > 0) {\r\n      const element = <SavedCoursesComponent savedCourses={user.favoritedCourses}></SavedCoursesComponent>\r\n      courseComponentList.push(element);\r\n      hasCourses = true;\r\n\r\n    }\r\n\r\n    if (user.createdCourses && user.createdCourses.length > 0) {\r\n      const element = <CreatedCoursesComponent createdCourses={user.createdCourses}></CreatedCoursesComponent>\r\n      courseComponentList.push(element);\r\n      hasCourses = true;\r\n\r\n    }\r\n    if (hasCourses) {\r\n      return (\r\n        <div className=\"MyCourses\">\r\n          <CssBaseline />\r\n          <Typography className=\"center\" variant=\"h3\" component=\"h3\">\r\n            My Courses\r\n          </Typography>\r\n          <Container maxWidth=\"lg\">\r\n            <Paper className=\"paper\">\r\n              {\r\n                courseComponentList.map(element => element)\r\n              }\r\n            </Paper>\r\n          </Container>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"MyCourses\">\r\n          <CssBaseline />\r\n          <Typography className=\"center\" variant=\"h3\" component=\"h3\">\r\n            My Courses\r\n            </Typography>\r\n          <Container maxWidth=\"lg\">\r\n            <Paper className=\"paper\">\r\n              <h4>You don't have any courses saved yet!</h4>\r\n            </Paper>\r\n          </Container>\r\n        </div>\r\n      )\r\n    }\r\n\r\n\r\n  } else {\r\n    return (\r\n      <div>\r\n        Loading..\r\n        <CircularProgress></CircularProgress>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default MyCourses;\r\n","import React from 'react';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { Button } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nfunction EditDialog(props) {\r\n  return (\r\n    <div>\r\n      <Dialog open={props.isOpen} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">{props.field}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Edit the Field below to update your {props.field}\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label={props.field}\r\n            value={props.value}\r\n            onChange={props.onChange}\r\n            type=\"email\"\r\n            color=\"secondary\"\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={props.handleClose} color=\"secondary\">\r\n            Cancel\r\n            </Button>\r\n          <Button onClick={props.handleSubmit} color=\"secondary\">\r\n            Submit\r\n            </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditDialog","import React from 'react';\r\n\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { IconButton } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport EditDialog from '../EditDialog/EditDialog.component';\r\n\r\nconst userKeyToDisplayMap = {\r\n    \"displayName\": \"Display Name\",\r\n    \"email\": \"Email Address\",\r\n    \"password\": \"Password\"\r\n  }\r\n\r\nfunction UserProfileSection(props){\r\n    function getEditIconIfNecessary(){\r\n      return props.isEditable ? \r\n        <IconButton className=\"menu-button\" color=\"inherit\" aria-label=\"menu\">\r\n          <EditIcon onClick={props.openDialog}/>\r\n        </IconButton>\r\n        :\r\n        <div></div>\r\n    }\r\n\r\n\r\n    return (\r\n      <div>\r\n        <Typography align=\"center\" variant=\"h6\" component=\"h6\">\r\n          <strong>{props.displayValue}</strong>\r\n        </Typography>\r\n        <Typography align=\"center\" variant=\"body1\" component=\"body1\">\r\n          <span>\r\n            {props.value}\r\n            {getEditIconIfNecessary()}\r\n          </span>\r\n        </Typography>\r\n        <EditDialog \r\n          isOpen={props.isDialogOpen}\r\n          handleClose={props.handleClose}\r\n          handleSubmit={props.handleSubmit}\r\n          field={userKeyToDisplayMap[props.displayKey]}\r\n          value={props.value}\r\n          onChange={props.onChange}\r\n        />\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default UserProfileSection\r\n  ","import React, { useState } from 'react';\r\nimport './UserProfile.css';\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport UserProfileSection from './UserProfileSection/UserProfileSection.component';\r\nimport { Button } from '@material-ui/core';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport * as FirebaseService from '../../service/firebase.service';\r\n\r\nconst passwordValue = \"*******\";\r\n\r\nfunction UserProfile(props) {\r\n\r\n\r\n  const [displayName, setDisplayName] = useState(null);\r\n  const [oldDisplayName, setOldDiplayName] = useState(null);\r\n  const [error, setError] = useState();\r\n  const [isDisplayNameDialogOpen, setIsDisplayNameDialogOpen] = useState(false)\r\n  const [userInterests, setUserInterests] = useState(null);\r\n  const [oldUserInterests, setOldUserInterests] = useState(null);\r\n  const [isUserInterestsDialogOpen, setIsUserInterestsDialogOpen] = useState(false);\r\n\r\n\r\n\r\n  function handleDisplayNameClose() {\r\n    setDisplayName(oldDisplayName)\r\n    setIsDisplayNameDialogOpen(false)\r\n  }\r\n\r\n  function handleDisplayNameSubmit() {\r\n    FirebaseService.updateUser(props.user.id, {\r\n      displayName\r\n    }).then(result => {\r\n      setIsDisplayNameDialogOpen(false)\r\n      setOldDiplayName(displayName)\r\n      props.updateUser(props.user.id);\r\n\r\n    })\r\n      .catch(err => {\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  function openDisplayNameDialog() {\r\n    setOldDiplayName(displayName)\r\n    setIsDisplayNameDialogOpen(true)\r\n  }\r\n\r\n  function onDisplayNameChange(e) {\r\n    setDisplayName(e.target.value);\r\n  }\r\n\r\n  /**\r\n   * Begin User Interests\r\n   */\r\n  function handleUserInterestsDialogClose() {\r\n    setUserInterests(oldUserInterests)\r\n    setIsUserInterestsDialogOpen(false)\r\n  }\r\n\r\n  function openUserInterestDialog() {\r\n    setOldUserInterests(userInterests)\r\n    setIsUserInterestsDialogOpen(true)\r\n  }\r\n\r\n  function onUserInterestsChange(e) {\r\n    setUserInterests(e.target.value);\r\n  }\r\n\r\n  function handleUserInterestSubmit() {\r\n    FirebaseService.updateUser(props.user.id, {\r\n      interests: userInterests\r\n    }).then(result => {\r\n      setIsUserInterestsDialogOpen(false)\r\n      setUserInterests(userInterests)\r\n      props.updateUser(props.user.id);\r\n    })\r\n      .catch(err => {\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  async function signOut() {\r\n    await FirebaseService.signOut().then((res) => {\r\n      if (res) {\r\n        props.history.push(\"/\");\r\n        props.updateUser(undefined);\r\n      }\r\n      // TODO(jessi) handle error\r\n    });\r\n  }\r\n\r\n  async function deleteAccount() {\r\n    await FirebaseService.deleteUser().then((res) => {\r\n      if (res) {\r\n        props.history.push(\"/\");\r\n        props.updateUser(undefined);\r\n      }\r\n      // TODO(jessi) handle error\r\n    });\r\n  }\r\n\r\n  if (props.user && displayName === null && userInterests === null) {\r\n    setDisplayName(props.user.displayName)\r\n    setUserInterests(props.user.interests)\r\n  }\r\n\r\n  if (props.user) {\r\n    return (\r\n      <div className=\"userProfile\">\r\n        <CssBaseline />\r\n        <Typography className=\"center\" variant=\"h3\" component=\"h3\">\r\n          User Profile\r\n        </Typography>\r\n        <Container className=\"userProfile-bottom-padding\" maxWidth=\"lg\">\r\n          <Paper className=\"paper\">\r\n\r\n            <UserProfileSection\r\n              isEditable={true}\r\n              displayValue=\"User Interests\"\r\n              value={userInterests}\r\n              handleClose={handleUserInterestsDialogClose}\r\n              handleSubmit={handleUserInterestSubmit}\r\n              isDialogOpen={isUserInterestsDialogOpen}\r\n              openDialog={openUserInterestDialog}\r\n              onChange={onUserInterestsChange}\r\n              isEditable={true}\r\n            ></UserProfileSection>\r\n\r\n          </Paper>\r\n        </Container>\r\n        <Divider />\r\n\r\n\r\n        <Container maxWidth=\"lg\">\r\n          <Paper className=\"paper\">\r\n\r\n            <UserProfileSection\r\n              isEditable={true}\r\n              displayValue=\"Display Name\"\r\n              value={displayName}\r\n              handleClose={handleDisplayNameClose}\r\n              handleSubmit={handleDisplayNameSubmit}\r\n              isDialogOpen={isDisplayNameDialogOpen}\r\n              openDialog={openDisplayNameDialog}\r\n              onChange={onDisplayNameChange}\r\n            />\r\n            <Divider />\r\n            <UserProfileSection \r\n              isEditable={false} \r\n              displayValue=\"Email\" \r\n              value={props.user.email}\r\n            />\r\n            <Divider />\r\n            <div className=\"logout-btns\">\r\n              <Button color=\"inherit\" className=\"menu-button\" onClick={signOut}>\r\n                Sign out\r\n              </Button>\r\n              <Button color=\"inherit\" className=\"menu-button\" onClick={deleteAccount}>\r\n                Delete account\r\n              </Button>\r\n            </div>\r\n          </Paper>\r\n        </Container>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        Loading..\r\n        <CircularProgress></CircularProgress>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(UserProfile);\r\n","import React, { useState } from 'react';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { Button } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nfunction CreateCourseDialog(props) {\r\n  const [description, setDescription] = useState();\r\n  const [title, setTitle] = useState();\r\n\r\n\r\n  function onCourseTitleChange(e) {\r\n    setTitle(e.target.value);\r\n  }\r\n\r\n  function onCourseDescriptionChange(e) {\r\n    setDescription(e.target.value);\r\n\r\n  }\r\n\r\n  function handleSubmit() {\r\n\r\n    const courseDetails = {\r\n      title,\r\n      description\r\n    }\r\n\r\n    props.handleSubmit(courseDetails);\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={props.isOpen} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Create A New Course</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Create a new course. Start by entering a title and description below!\r\n            </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"title\"\r\n            label=\"Course Title\"\r\n            onChange={onCourseTitleChange}\r\n            type=\"text\"\r\n            color=\"secondary\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"description\"\r\n            label=\"Course Description\"\r\n            onChange={onCourseDescriptionChange}\r\n            type=\"text\"\r\n            color=\"secondary\"\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={props.handleClose} color=\"secondary\">\r\n            Cancel\r\n            </Button>\r\n          <Button onClick={handleSubmit} color=\"secondary\">\r\n            Submit\r\n            </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CreateCourseDialog","import React, { useState } from 'react';\r\nimport './CreateCourse.css';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport * as FirebaseService from '../../service/firebase.service';\r\nimport CreateCourseDialog from './CreateCourseDialog/CreateCourseDialog.component';\r\nimport CoursesDropdownComponent from '../CoursesDropdown/CoursesDropdown.component';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nfunction CreatedCoursesComponent(props) {\r\n\r\n  return (\r\n    <div className=\"courses-section\">\r\n      <h1> Courses You've Created </h1>\r\n      <CoursesDropdownComponent courses={props.createdCourses} includeEditIcon={true}></CoursesDropdownComponent>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction CreateCourse(props) {\r\n  const [isCreateCourseDialogOpen, setIsCreateCourseDialogOpen] = useState(false);\r\n  const history = useHistory();\r\n\r\n\r\n  function handleCreateCourseDialogClose() {\r\n    setIsCreateCourseDialogOpen(false);\r\n  }\r\n\r\n  function openCreateCourseDialog() {\r\n    setIsCreateCourseDialogOpen(true);\r\n\r\n  }\r\n\r\n  async function handleSubmit(courseInfo) {\r\n    courseInfo.owner = props.user.id;\r\n\r\n    const chapter = {\r\n      id: 0,\r\n      lessons: \"Course/rlfxOavBn4nPZLNTRMkL/Lessons/kL5CwNARpoUhexocK7P4\",\r\n      sectionTitle: `${courseInfo.title} - Section`\r\n    }\r\n\r\n    courseInfo.chapters = []\r\n    courseInfo.chapter = chapter;\r\n    // courseInfo.chapters.push(chapter);\r\n\r\n    const response = await FirebaseService.createCourse(props.user, courseInfo)\r\n    setIsCreateCourseDialogOpen(false);\r\n    await props.updateCourses();\r\n    await props.updateUser(props.user.id);\r\n    // Navigate to Edit Course page\r\n    history.push(`/editCourse/${props.user.createdCoursesRefs[props.user.createdCoursesRefs.length - 1].id}`)\r\n  }\r\n\r\n  const hasCurrentCourses = false\r\n  let currnetCoursesSection = null;\r\n  if (props.user && props.user.createdCourses && props.user.createdCourses.length > 0) {\r\n    currnetCoursesSection = <CreatedCoursesComponent createdCourses={props.user.createdCourses}></CreatedCoursesComponent>\r\n  } else {\r\n    currnetCoursesSection = <h3>You have not created any courses</h3>\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"Home\">\r\n      <CssBaseline />\r\n      <Typography className=\"center\" variant=\"h3\" component=\"h3\">\r\n        Create A Course\r\n        </Typography>\r\n      <Container className=\"userProfile-bottom-padding\" maxWidth=\"lg\">\r\n        <Paper className=\"paper\">\r\n          {\r\n            currnetCoursesSection\r\n          }\r\n          <span>\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={openCreateCourseDialog}>\r\n              Create New Course\r\n              </Button>\r\n          </span>\r\n        </Paper>\r\n      </Container>\r\n      <Divider />\r\n\r\n      <CreateCourseDialog\r\n        isOpen={isCreateCourseDialogOpen}\r\n        handleClose={handleCreateCourseDialogClose}\r\n        handleSubmit={handleSubmit}\r\n        user={props.user}\r\n      />\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateCourse;\r\n","import React, { useState, useEffect } from 'react';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Button } from '@material-ui/core';\r\nimport './CourseChapterPanel.css';\r\n\r\nfunction CourseChapterPanel(props) {\r\n\r\n    function listItemClicked(lesson) {\r\n        props.setChapterInContext(props.chapter);\r\n        props.setActiveLesson(lesson);\r\n    }\r\n\r\n    let lessonItems = []\r\n\r\n    const lessonsLength = props.chapter?.lessons?.length;\r\n    if (lessonsLength > 0) {\r\n        lessonItems = props.chapter.lessons.map(lesson => {\r\n            const isActiveLesson = (lesson === props.activeLesson);\r\n\r\n            return (\r\n                <ListItem selected={isActiveLesson} onClick={() => listItemClicked(lesson)} id={lesson.id} button>\r\n                    <ListItemText primary={lesson.title} />\r\n                </ListItem>\r\n            )\r\n        });\r\n    } else {\r\n        lessonItems[0] = <ListItem> <ListItemText primary=\"No Lessons Added\" /> </ListItem>\r\n    }\r\n\r\n\r\n    function openLessonModal() {\r\n        props.setChapterInContext(props.chapter);\r\n        props.openLessonModal(/**addLesson=*/true);\r\n    }\r\n\r\n    let addNewLessonButton;\r\n\r\n    if (props.editable) {\r\n        addNewLessonButton = <Button variant=\"contained\" onClick={openLessonModal} color=\"secondary\" className=\"add-content-btn\"> Add New Lesson </Button>\r\n    }\r\n\r\n\r\n    return (\r\n        <ExpansionPanel\r\n            defaultExpanded={props.chapter === props.chapterInContext}\r\n        >\r\n            <ExpansionPanelSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n            >\r\n                <Typography variant=\"subtitle2\">{props.chapter.title}</Typography>\r\n            </ExpansionPanelSummary>\r\n            <ExpansionPanelDetails>\r\n\r\n                <List dense=\"true\" className=\"lessons-list\">\r\n                    {lessonItems}\r\n                    {addNewLessonButton}\r\n                </List>\r\n\r\n            </ExpansionPanelDetails>\r\n        </ExpansionPanel>\r\n    )\r\n}\r\n\r\nexport default CourseChapterPanel;","import React from 'react';\r\nimport './CourseNavigationPane.css';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport CourseChapterPanel from './CourseChapterPanel/CourseChapterPanel.component';\r\n\r\n\r\n/**\r\n * Generate multiple function\r\n */\r\n\r\n\r\nfunction generate(element) {\r\n  return [0, 1, 2].map(value =>\r\n    React.cloneElement(element, {\r\n      key: value,\r\n    }),\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\nfunction CourseNavigationPane(props) {\r\n\r\n  function setChapterInContext(chapter) {\r\n    props.setChapterInContext(chapter);\r\n  }\r\n\r\n  const courseOverviewClicked = () => {\r\n    props.setActiveLesson(undefined);\r\n    props.setChapterInContext(undefined);\r\n  }\r\n\r\n  let courseNavigationPanels = []\r\n  const chaptersLength = props.course?.chapters?.length;\r\n\r\n  if (chaptersLength > 0) {\r\n    courseNavigationPanels = props.course.chapters.map(chapter =>\r\n      <CourseChapterPanel editable={props.editable} setActiveLesson={props.setActiveLesson} activeLesson={props.activeLesson} openLessonModal={props.openLessonModal} chapterInContext={props.chapterInContext} setChapterInContext={setChapterInContext} chapter={chapter} />\r\n    )\r\n  }\r\n  \r\n  let addNewChapterButton;\r\n  if(props.editable){\r\n   addNewChapterButton = <Button variant=\"contained\" onClick={props.openCreateChapterDialog} color=\"secondary\"> Add New Chapter </Button> \r\n  }\r\n\r\n\r\n  return (\r\n    <Paper className=\"paper\">\r\n      <Button id=\"course-overview\"\r\n        onClick={courseOverviewClicked}>\r\n        <h1>{props.course.title}</h1>\r\n      </Button>\r\n      {courseNavigationPanels}\r\n      {addNewChapterButton}\r\n    </Paper>\r\n  )\r\n}\r\n\r\nexport default CourseNavigationPane;","import React from 'react';\r\nimport YouTube from 'react-youtube';\r\nimport { Button } from '@material-ui/core';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\n\r\n// Youtube Constants\r\n\r\nconst YoutubeComponentConfig = {\r\n    opts: {\r\n        height: '390',\r\n        width: '640',\r\n        playerVars: {\r\n            autoplay: 0,\r\n        },\r\n    },\r\n    videoId: \"BKorP55Aqvg\"\r\n\r\n}\r\n\r\n\r\nfunction EditCourseLesson(props) {\r\n\r\n    function _onReady(event) {\r\n        // access to player in all event handlers via event.target\r\n        event.target.pauseVideo();\r\n    }\r\n\r\n\r\n    function goToPreviousLesson() {\r\n        props.navigateToPreviousLesson(props.lesson);\r\n    }\r\n\r\n    function goToNextLesson() {\r\n        props.navigateToNextLesson(props.lesson);\r\n    }\r\n\r\n    function getButtonDiv() {\r\n        if (props.isFirstLesson && props.isLastLesson) {\r\n            return '';\r\n        }\r\n\r\n        let leftButton, rightButton;\r\n\r\n        if (props.nextLesson || props.nextChapter) {\r\n            leftButton =\r\n                <Button variant=\"contained\" onClick={goToNextLesson} className=\"next-button\" color=\"secondary\" endIcon={<ArrowForwardIosIcon />}>\r\n                    {props.nextLesson ? \"Next Lesson\" : \"Next Chapter\"}\r\n                </Button>\r\n        }\r\n\r\n        if (props.prevLesson || props.prevChapter) {\r\n            rightButton =\r\n                <Button variant=\"contained\" onClick={goToPreviousLesson} className=\"previous-button\" color=\"secondary\" startIcon={<ArrowBackIosIcon />}>\r\n                    {props.prevLesson ? \"Previous Lesson\" : \"Previous Chapter\"}\r\n                </Button>\r\n        }\r\n\r\n        return (\r\n            <div className=\"button-div\">\r\n                {leftButton}\r\n                {rightButton}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function getVideoConfig() {\r\n        const youtubeConfig = { ...YoutubeComponentConfig };\r\n        const url = props.lesson?.video;\r\n        if (url && url.includes(\"youtube\") && (url.includes(\"v=\"))) {\r\n            const myParamters = url.split(\"?\");\r\n            var searchParams = new URLSearchParams(myParamters[1]);\r\n            youtubeConfig.videoId = searchParams.get('v');\r\n        }\r\n        return youtubeConfig;\r\n    }\r\n\r\n    if (props.lesson) {\r\n        const youtubeConfig = getVideoConfig();\r\n\r\n        return (\r\n            <div>\r\n                <h3>{props.lesson.title}</h3>\r\n                <h6>Link: {props.lesson.video}</h6>\r\n                <strong>Description: </strong>\r\n                <p>{props.lesson.description}</p>\r\n                <YouTube videoId={youtubeConfig.videoId} opts={youtubeConfig.opts} onReady={_onReady} />\r\n                {getButtonDiv()}\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div>\r\n                <h5> No Lesson Details </h5>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditCourseLesson;","import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport CourseLesson from './CourseLesson/CourseLesson.component';\r\nimport { Button } from '@material-ui/core';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport { EditorState, convertFromRaw, ContentState } from \"draft-js\";\r\n\r\nimport './CourseOverviewPane.css'\r\n\r\n\r\n\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\n\r\nfunction CourseOverviewPane(props) {\r\n\r\n    let lessonArray = [];\r\n    for (let i = 0; i < props.course.chapters.length; i++) {\r\n        for (let j = 0; j < props.course.chapters[i].lessons?.length; j++) {\r\n            lessonArray.push(props.course.chapters[i].lessons[j]);\r\n        }\r\n    }\r\n\r\n    function navigateToNextLesson(lesson) {\r\n        console.log(\"NAVIGATE TO NEXT LESSON FROM: \", lesson);\r\n        const indexOfCurrentLesson = props.activeChapter.lessons.indexOf(lesson);\r\n        if (indexOfCurrentLesson !== props.activeChapter.lessons.length - 1) {\r\n            props.setActiveLesson(props.activeChapter.lessons[indexOfCurrentLesson + 1]);\r\n            return;\r\n        } else {\r\n            const activeChapterIndex = props.course.chapters.indexOf(props.activeChapter);\r\n            const nextChapter = props.course.chapters[activeChapterIndex + 1];\r\n            props.setChapterInContext(nextChapter);\r\n            props.setActiveLesson(nextChapter.lessons[0]);\r\n        }\r\n    }\r\n\r\n    function navigateToPreviousLesson(lesson) {\r\n        console.log(\"NAVIGATE TO PREVIOUS LESSON FROM: \", lesson);\r\n        const indexOfCurrentLesson = props.activeChapter.lessons.indexOf(lesson);\r\n\r\n        if (indexOfCurrentLesson !== 0) {\r\n            props.setActiveLesson(props.activeChapter.lessons[indexOfCurrentLesson - 1]);\r\n            return;\r\n        } else {\r\n            const activeChapterIndex = props.course.chapters.indexOf(props.activeChapter);\r\n            const prevChapter = props.course.chapters[activeChapterIndex - 1];\r\n            props.setChapterInContext(prevChapter);\r\n            props.setActiveLesson(prevChapter.lessons[prevChapter.lessons.length - 1]);\r\n        }\r\n\r\n    }\r\n\r\n    function openLessonModal() {\r\n        props.openLessonModal(/**addLesson=*/false);\r\n    }\r\n\r\n\r\n    let openEditCourseOverviewDialogButton;\r\n    let addNewLessonButton;\r\n    if (props.editable) {\r\n        openEditCourseOverviewDialogButton = <Button onClick={props.openEditCourseOverviewDialog} color=\"secondary\" variant=\"contained\"> Edit Overview </Button>\r\n        addNewLessonButton = <Button variant=\"contained\" onClick={openLessonModal} color=\"secondary\" className=\"add-content-btn\"> Edit Lesson </Button>\r\n    }\r\n\r\n    let content = undefined;\r\n    if (props.course.overview) {\r\n        const contentStateObj = JSON.parse(props.course.overview);\r\n        const editorState = EditorState.createWithContent(convertFromRaw(contentStateObj));\r\n        content = <Editor\r\n            toolbarHidden\r\n            editorState={editorState}\r\n            readOnly={true}\r\n        />\r\n    }\r\n    else {\r\n        content = <Editor\r\n            toolbarHidden\r\n            editorState={EditorState.createWithContent(ContentState.createFromText(\"No text entered.\"))}\r\n            readOnly={true}\r\n        />\r\n    }\r\n\r\n    function getLessonInformation() {\r\n        let prevLesson, nextLesson, prevChapter, nextChapter = false;\r\n\r\n        if (props.activeLesson) {\r\n            const currentLessonIndex = lessonArray.indexOf(props.activeLesson);\r\n            const currentLessonIndexInChapter = props.activeChapter.lessons.indexOf(props.activeLesson);\r\n            const numLessonsInChapter = props.activeChapter.lessons.length;\r\n            const numChapters = props.course.chapters.length;\r\n            const activeChapterIndex = props.course.chapters.indexOf(props.activeChapter);\r\n\r\n            prevLesson = currentLessonIndexInChapter > 0;\r\n            nextLesson = currentLessonIndexInChapter < numLessonsInChapter - 1;\r\n            prevChapter = currentLessonIndexInChapter === 0 && currentLessonIndex > 0\r\n            nextChapter = currentLessonIndexInChapter === numLessonsInChapter - 1\r\n                && currentLessonIndex < lessonArray.length - 1\r\n                && activeChapterIndex !== numChapters - 1;\r\n        }\r\n\r\n        return [prevLesson, nextLesson, prevChapter, nextChapter]\r\n    }\r\n\r\n\r\n    let prevLesson, nextLesson, prevChapter, nextChapter = false;\r\n    if (props.activeLesson) {\r\n        [prevLesson, nextLesson, prevChapter, nextChapter] = getLessonInformation();\r\n    }\r\n\r\n    return (\r\n        <Paper className=\"paper\">\r\n            {props.activeChapter ?\r\n                <div>\r\n                    <h2>Chapter: {props.activeChapter.title}</h2>\r\n                    <CourseLesson\r\n                        navigateToNextLesson={navigateToNextLesson}\r\n                        navigateToPreviousLesson={navigateToPreviousLesson}\r\n                        prevLesson={prevLesson}\r\n                        nextLesson={nextLesson}\r\n                        prevChapter={prevChapter}\r\n                        nextChapter={nextChapter}\r\n                        lesson={props.activeLesson}\r\n                    />\r\n                    {addNewLessonButton}\r\n                </div> :\r\n                <div>\r\n                    {content}\r\n                    {openEditCourseOverviewDialogButton}\r\n                </div>\r\n            }\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default CourseOverviewPane;","import React, { useState } from 'react';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { Button } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nfunction CreateChapterDialog(props) {\r\n  const [description, setDescription] = useState();\r\n  const [title, setTitle] = useState();\r\n\r\n\r\n  function onCourseTitleChange(e) {\r\n    setTitle(e.target.value);\r\n  }\r\n\r\n  function onCourseDescriptionChange(e) {\r\n    setDescription(e.target.value);\r\n\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    const chapterInfo = {\r\n      title,\r\n      description\r\n    }\r\n\r\n    props.handleSubmit(chapterInfo);\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={props.isOpen} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Create New Chapter</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Create a new chapter within your course. Enter a title and description below.\r\n            </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"title\"\r\n            label=\"Chapter Title\"\r\n            onChange={onCourseTitleChange}\r\n            type=\"text\"\r\n            color=\"secondary\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"description\"\r\n            label=\"Chapter Description\"\r\n            onChange={onCourseDescriptionChange}\r\n            type=\"text\"\r\n            color=\"secondary\"\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={props.handleClose} color=\"secondary\">\r\n            Cancel\r\n            </Button>\r\n          <Button onClick={handleSubmit} color=\"secondary\">\r\n            Submit\r\n            </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CreateChapterDialog","import React, { useState } from 'react';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { Button } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nfunction CreateLessonDialog(props) {\r\n  const [description, setDescription] = useState();\r\n  const [title, setTitle] = useState();\r\n  const [video, setVideo] = useState();\r\n\r\n  function onCourseTitleChange(e) {\r\n    setTitle(e.target.value);\r\n  }\r\n\r\n  function onCourseDescriptionChange(e) {\r\n    setDescription(e.target.value);\r\n\r\n  }\r\n\r\n  function onVideoUrlChange(e) {\r\n    setVideo(e.target.value);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    const id = props.lesson?.id ? props.lesson.id : undefined;\r\n    let titleUpdate = title;\r\n    let descrUpdate = description;\r\n    let videoUpdate = video;\r\n    if (props.lesson) {\r\n      titleUpdate = titleUpdate ? titleUpdate : props.lesson.title;\r\n      descrUpdate = descrUpdate ? descrUpdate : props.lesson.description;\r\n      videoUpdate = videoUpdate ? videoUpdate : props.lesson.video;\r\n    }\r\n    const lessonInfo = {\r\n      id,\r\n      title: titleUpdate,\r\n      description: descrUpdate,\r\n      video: videoUpdate\r\n    }\r\n    props.updateLesson(lessonInfo, props.add);\r\n  }\r\n\r\n  let initialTitle;\r\n  let initialDescription;\r\n  let initialVideo;\r\n  if (!props.add && props.lesson) {\r\n    initialTitle = props.lesson.title;\r\n    initialDescription = props.lesson.description;\r\n    initialVideo = props.lesson.video;\r\n  } else {\r\n    initialTitle = \"\";\r\n    initialDescription = \"\";\r\n    initialVideo = \"\";\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={props.isOpen} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">{props.add ? \"Create New\" : \"Edit\"} Lesson</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Add a new lesson to your course\r\n            </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"title\"\r\n            label=\"Lesson Title\"\r\n            onChange={onCourseTitleChange}\r\n            type=\"text\"\r\n            color=\"secondary\"\r\n            defaultValue={initialTitle}\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"description\"\r\n            label=\"Lesson Description\"\r\n            onChange={onCourseDescriptionChange}\r\n            type=\"text\"\r\n            color=\"secondary\"\r\n            defaultValue={initialDescription}\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"video\"\r\n            label=\"Video URL\"\r\n            onChange={onVideoUrlChange}\r\n            type=\"text\"\r\n            color=\"secondary\"\r\n            defaultValue={initialVideo}\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={props.handleClose} color=\"secondary\">\r\n            Cancel\r\n            </Button>\r\n          <Button onClick={handleSubmit} color=\"secondary\">\r\n            Submit\r\n            </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CreateLessonDialog","import React, { useState, useEffect } from 'react';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { Button } from '@material-ui/core';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport { EditorState, convertFromRaw, convertToRaw, RichUtils } from 'draft-js';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\n\r\nfunction EditCourseOverviewDialog(props) {\r\n  const [overview, setOverview] = useState();\r\n  const [contentState, setContentState] = useState(props.course.overview);\r\n  const [editorState, setEditorState] = useState();\r\n\r\n  function handleSubmit(e) {\r\n    const currentContentState = editorState.getCurrentContent();\r\n    setContentState(convertToRaw(currentContentState));\r\n    props.updateCourseOverview(convertToRaw(currentContentState));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (contentState) {\r\n      setEditorState(EditorState.createWithContent(convertFromRaw(JSON.parse(contentState))));\r\n    }\r\n    else {\r\n      setEditorState(EditorState.createEmpty());\r\n    }\r\n  }, []);\r\n\r\n  function onEditorStateChange(editorState) {\r\n    setEditorState(editorState);\r\n  };\r\n\r\n  function handleKeyCommand(command) {\r\n    const newState = RichUtils.handleKeyCommand(editorState, command);\r\n    if (newState) {\r\n      setEditorState(newState);\r\n      return 'handled';\r\n    }\r\n    return 'not-handled';\r\n  };\r\n\r\n  return (\r\n\r\n\r\n    <div>\r\n      <Dialog open={props.isOpen} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Edit Course Overview</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Edit course information, providing students with a basic description of the class and learning objectives.\r\n            </DialogContentText>\r\n          <Editor\r\n            editorState={editorState}\r\n            editorClassName=\"editor-textbox\"\r\n            handleKeyCommand={handleKeyCommand}\r\n            onEditorStateChange={onEditorStateChange}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={props.handleClose} color=\"secondary\">\r\n            Cancel\r\n            </Button>\r\n          <Button onClick={handleSubmit} color=\"secondary\">\r\n            Submit\r\n            </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditCourseOverviewDialog","import React, { useEffect, useState } from 'react';\r\nimport './CourseOverview.css';\r\nimport {\r\n    Link as RouterLink,\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Button } from '@material-ui/core';\r\nimport * as FirebaseService from '../../service/firebase.service';\r\nimport CourseNavigationPane from './CourseNavigationPane/CourseNavigationPane.component';\r\n\r\nimport CourseOverviewPane from './CourseOverviewPane/CourseOverviewPane.component';\r\nimport CreateChapterDialog from './Dialogs/CreateChapterDialog/CreateChapterDialog.component';\r\nimport CreateLessonDialog from './Dialogs/CreateLessonDialog/CreateLessonDialog.component';\r\nimport EditCourseOverviewDialog from './Dialogs/EditCourseOverviewDialog/EditCourseOverviewDialog.component';\r\n\r\nfunction CourseOverview(props) {\r\n    // Get ID from Route Params\r\n    let { id } = useParams();\r\n    // Create State Variables\r\n    const [course, setCourse] = useState();\r\n    const [error, setError] = useState();\r\n    const [isCreateChapterDialogOpen, setIsCreateChapterDialogOpen] = useState(false);\r\n    const [isCreateLessonDialogOpen, setIsCreateLessonDialogOpen] = useState(false);\r\n    const [isEditCourseOverviewDialogOpen, setIsEditCourseOverviewDialogOpen] = useState(false);\r\n    const [chapterInContext, setChapterInContext] = useState();\r\n    const [activeLesson, setActiveLesson] = useState();\r\n\r\n\r\n    function handleCreateChapterClose() {\r\n        setIsCreateChapterDialogOpen(false);\r\n    }\r\n\r\n    function openCreateChapterDialog() {\r\n        setIsCreateChapterDialogOpen(true);\r\n    }\r\n\r\n    function handleCreateLessonDialogClose() {\r\n        setIsCreateLessonDialogOpen(false);\r\n    }\r\n\r\n    function openCreateLessonDialog(addLesson) {\r\n        props.addLesson = addLesson;\r\n        setIsCreateLessonDialogOpen(true);\r\n    }\r\n\r\n    function handleEditCourseOverviewDialogClose() {\r\n        setIsEditCourseOverviewDialogOpen(false);\r\n    }\r\n\r\n    function openEditCourseOverviewDialog() {\r\n        setIsEditCourseOverviewDialogOpen(true);\r\n    }\r\n\r\n    function viewPublished() {\r\n        // ensure course overview\r\n        setActiveLesson(undefined);\r\n        setChapterInContext(undefined);\r\n        // navigate\r\n        props.history.push(`/courseOverview/${course.id}`);\r\n    }\r\n\r\n\r\n    async function updateLesson(lessonInfo, add) {\r\n        setIsCreateLessonDialogOpen(false);\r\n        await FirebaseService.updateLesson(course, chapterInContext, lessonInfo, add).then(() => {\r\n            getCourseById(id);\r\n            // TODO (jessi): make this go to the new lesson when adding.\r\n        }).catch((err) => { console.log(err) });\r\n    }\r\n\r\n    async function updateCourseOverview(overview) {\r\n        setIsEditCourseOverviewDialogOpen(false);\r\n        console.log(overview)\r\n        await FirebaseService.updateCourseOverview(course, overview);\r\n        getCourseById(id);\r\n    }\r\n\r\n    async function addNewChapter(chapterInfo) {\r\n        await FirebaseService.addNewChapter(course, chapterInfo);\r\n        getCourseById(id);\r\n        setIsCreateChapterDialogOpen(false);\r\n    }\r\n\r\n\r\n    async function resolveLessons(chapter) {\r\n        const lessonsRefLength = chapter.lessonsRef?.length;\r\n        if (lessonsRefLength > 0) {\r\n            return Promise.all(\r\n                chapter.lessonsRef.map(async lessonRef => {\r\n                    const lesson = await FirebaseService.getDocFromDocRef(lessonRef)\r\n                    return lesson;\r\n                })\r\n            ).then(results => {\r\n                chapter.lessons = results;\r\n                return chapter;\r\n            });\r\n\r\n        } else {\r\n            return Promise.resolve(chapter);\r\n        }\r\n    }\r\n\r\n    async function resolveChapters(chapters) {\r\n        return Promise.all(chapters.map(chapter => resolveLessons(chapter)))\r\n    }\r\n\r\n    async function getCourseById(id) {\r\n        const course = await FirebaseService.getCourseById(id);\r\n        course.chapters = await resolveChapters(course.chapters);\r\n        setCourse(course);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            getCourseById(id);\r\n        }\r\n    }, [id]);\r\n\r\n    let dialogs;\r\n    let viewPublishedCourseButton;\r\n    if (props.editable) {\r\n        dialogs = <div>\r\n            <CreateChapterDialog isOpen={isCreateChapterDialogOpen} handleSubmit={addNewChapter} handleClose={handleCreateChapterClose} />\r\n            <CreateLessonDialog isOpen={isCreateLessonDialogOpen} add={props.addLesson} lesson={activeLesson} updateLesson={updateLesson} handleClose={handleCreateLessonDialogClose} />\r\n            <EditCourseOverviewDialog isOpen={isEditCourseOverviewDialogOpen} updateCourseOverview={updateCourseOverview} handleClose={handleEditCourseOverviewDialogClose} course={course} />\r\n        </div>\r\n\r\n        viewPublishedCourseButton = <Button variant=\"contained\" color=\"secondary\" onClick={viewPublished}> View Published Course </Button>\r\n    }\r\n\r\n\r\n\r\n    if (course) {\r\n        return (\r\n            <div className=\"edit-course\">\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={4}>\r\n                        <CourseNavigationPane editable={props.editable} activeLesson={activeLesson} setActiveLesson={setActiveLesson} openLessonModal={openCreateLessonDialog} chapterInContext={chapterInContext} setChapterInContext={setChapterInContext} course={course} openCreateChapterDialog={openCreateChapterDialog} />\r\n                    </Grid>\r\n                    <Grid item xs={8}>\r\n                        <CourseOverviewPane setActiveLesson={setActiveLesson} setChapterInContext={setChapterInContext} editable={props.editable} activeChapter={chapterInContext} activeLesson={activeLesson} course={course} openEditCourseOverviewDialog={openEditCourseOverviewDialog} openLessonModal={openCreateLessonDialog} />\r\n                    </Grid>\r\n                    {viewPublishedCourseButton}\r\n                </Grid>\r\n                {dialogs}\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div>\r\n                Loading...\r\n                <CircularProgress></CircularProgress>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default withRouter(CourseOverview);","import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport { AppBar, Toolbar, IconButton, Typography, Button, } from '@material-ui/core';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link as RouterLink,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport CourseLibrary from './components/CourseLibrary/CourseLibrary';\r\nimport Login from './components/Login/Login';\r\nimport MyCourses from './components/MyCourses/MyCourses';\r\nimport UserProfile from './components/UserProfile/UserProfile';\r\nimport CreateCourse from './components/CreateCourse/CreateCourse.component';\r\nimport CourseOverview from './components/CourseOverview/CourseOverview.component';\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\n\r\nimport * as FirebaseService from '../src/service/firebase.service'\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: { // peaches\r\n      light: '#f44336',\r\n      main: '#f6eee7',\r\n      dark: '#dbbca1',\r\n    },\r\n    secondary: {  // purples\r\n      light: '#a17da5',\r\n      main: '#87618c',\r\n      dark: '#442b4a',\r\n    },\r\n  },\r\n  typography: {\r\n    useNextVariants: true\r\n  },\r\n  overrides: {\r\n    MuiButton: {\r\n      root: {\r\n        textTransform: 'none',\r\n      },\r\n    },\r\n  },\r\n})\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      courses: [],\r\n      users: [],\r\n      currentUser: undefined,\r\n      loadingUser: true\r\n    };\r\n    this.fetchCourses = this.fetchCourses.bind(this);\r\n    this.fetchUsers = this.fetchUsers.bind(this);\r\n    this.render = this.render.bind(this);\r\n    this.updateUser = this.updateUser.bind(this);\r\n    this.setUser = this.setUser.bind(this);\r\n    this.getUserOnLoad = this.getUserOnLoad.bind(this);\r\n    this.fetchCourses().then(() => {\r\n      this.getUserOnLoad();\r\n    });\r\n  }\r\n\r\n  async updateUser(userId) {\r\n    if (!userId) {\r\n      this.setState({ currentUser: undefined });\r\n      this.setState({ loadingUser: false });\r\n      return;\r\n    }\r\n    await FirebaseService.getUserById(userId)\r\n      .then(result => {\r\n        const user = result.data();\r\n\r\n        if (user.createdCoursesRefs && user.createdCoursesRefs.length > 0) {\r\n\r\n          const newCourses = user.createdCoursesRefs\r\n            .map(courseRef => this.state.courses.find(course => course.id === courseRef.id));\r\n\r\n          user.createdCourses = user.createdCoursesRefs\r\n            .map(courseRef => this.state.courses.find(course => course.id === courseRef.id));\r\n        }\r\n\r\n        if (user.pastCoursesRefs && user.pastCoursesRefs.length > 0) {\r\n          user.pastCourses = user.pastCoursesRefs\r\n            .map(courseRef => this.state.courses.find(course => course.id === courseRef.id));\r\n        }\r\n\r\n        if (user.favoritedCoursesRefs && user.favoritedCoursesRefs.length > 0) {\r\n          user.favoritedCourses = user.favoritedCoursesRefs\r\n            .map(courseRef => this.state.courses.find(course => course.id === courseRef.id));\r\n        }\r\n\r\n        this.setState({ currentUser: user });\r\n        this.setState({ loadingUser: false });\r\n\r\n      })\r\n  }\r\n\r\n  getUserOnLoad() {\r\n    let user = FirebaseService.getCurrentUser();\r\n    if (user) {\r\n      this.updateUser(user.uid);\r\n    } else if (document.cookie.split(';').some((item) => item.trim().startsWith('userid='))) {\r\n      var cookieValue = document.cookie.replace(/(?:(?:^|.*;\\s*)userid\\s*\\=\\s*([^;]*).*$)|^.*$/, \"$1\");\r\n      this.updateUser(cookieValue);\r\n    } else {\r\n      this.updateUser(undefined);\r\n    }\r\n  }\r\n\r\n  setUser(user) {\r\n    this.updateUser(user.id);\r\n    document.cookie = `userid=${user.id}`;\r\n  }\r\n\r\n  async fetchCourses() {\r\n    let courses = [];\r\n    await FirebaseService.getAllCourses().then((queryResults) => {\r\n      queryResults.forEach((doc) => {\r\n        const course = doc.data();\r\n        const courseId = doc.id;\r\n        course.owner.get().then(user => {\r\n          course.owner = user.data();\r\n        })\r\n        // course.chapter.lessons.get().then(lesson => {\r\n        //   course.chapter.lessons = lesson.data();\r\n        // })\r\n        course.id = courseId\r\n        courses.push(course);\r\n        this.setState({ courses: courses });\r\n      });\r\n    });\r\n  }\r\n\r\n  async fetchUsers() {\r\n    let users = [];\r\n    await FirebaseService.getAllUsers()\r\n      .then((queryResults) => {\r\n        queryResults.forEach((doc) => {\r\n          const user = doc.data();\r\n          user.id = doc.id;\r\n          users.push(user);\r\n          this.setState({\r\n            users\r\n          })\r\n        })\r\n      })\r\n  }\r\n\r\n  render() {\r\n\r\n    // If not logged in redirect to the login page with redirect info. Url will\r\n    // briefly flash to login while we figure out if we have a user.\r\n    const PrivateRoute = ({ isLoggedIn, ...props }) =>\r\n      this.state.currentUser\r\n        ? <Route {...props} />\r\n        : <Redirect to={{\r\n          pathname: '/login',\r\n          state: { from: props.location }\r\n        }} />\r\n\r\n    return (\r\n      <MuiThemeProvider theme={theme}>\r\n        <Router>\r\n          <div>\r\n            <nav hidden={!this.state.currentUser}>\r\n              <AppBar position=\"static\">\r\n                <Toolbar>\r\n                  <Button variant=\"contained\" color=\"secondary\" className=\"menu-button main\" component={RouterLink} to=\"/courseLibrary\">All Courses</Button>\r\n                  <Button variant=\"contained\" color=\"secondary\" className=\"menu-button main\" component={RouterLink} to=\"/myCourses\">My Courses</Button>\r\n                  <Button variant=\"outlined\" color=\"secondary\" className=\"menu-button align-left\" component={RouterLink} to=\"/createCourse\">Create a Course</Button>\r\n                  <IconButton className=\"menu-button profile-icon\" component={RouterLink} to=\"/profile\" color=\"inherit\" aria-label=\"menu\">\r\n                    <AccountCircleIcon />\r\n                  </IconButton>\r\n                </Toolbar>\r\n              </AppBar>\r\n            </nav>\r\n\r\n            {/* A <Switch> looks through its children <Route>s and\r\n                renders the first one that matches the current URL. */}\r\n            <Switch>\r\n              <Route exact path=\"/login\">\r\n                <Login completeLogin={this.setUser} user={this.state.currentUser} loadingUser={this.state.loadingUser} />\r\n              </Route>\r\n              <PrivateRoute path=\"/(courseLibrary|)\">\r\n                <CourseLibrary courses={this.state.courses} user={this.state.currentUser} updateUser={this.updateUser} />\r\n              </PrivateRoute>\r\n              <PrivateRoute path=\"/courseOverview/:id\">\r\n                <CourseOverview editable={false} user={this.state.currentUser}></CourseOverview>\r\n              </PrivateRoute>\r\n              <PrivateRoute path=\"/myCourses\">\r\n                <MyCourses user={this.state.currentUser}></MyCourses>\r\n              </PrivateRoute>\r\n              <PrivateRoute path=\"/profile\">\r\n                <UserProfile user={this.state.currentUser} updateUser={this.updateUser}></UserProfile>\r\n              </PrivateRoute>\r\n              <PrivateRoute path=\"/createCourse\">\r\n                <CreateCourse user={this.state.currentUser} updateUser={this.updateUser} updateCourses={this.fetchCourses}></CreateCourse>\r\n              </PrivateRoute>\r\n              <PrivateRoute path=\"/editCourse/:id\">\r\n                <CourseOverview editable={true} user={this.state.currentUser}></CourseOverview>\r\n              </PrivateRoute>\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n      </MuiThemeProvider>\r\n    )\r\n  }\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}