{"version":3,"sources":["logo.svg","components/CourseCard/CourseCard.js","components/CourseLibrary/CourseLibraryToolbar/SearchBar/SearchBar.component.js","components/CourseLibrary/CourseLibraryToolbar/CourseLibraryToolbarMenu/CourseLibraryToolbarMenuItem/CourseLibraryToolbarMenuItem.component.js","components/CourseLibrary/CourseLibraryToolbar/CourseLibraryToolbarMenu/CourseLibraryToolbarMenu.component.js","components/CourseLibrary/CourseLibraryToolbar/CourseLibraryToolbar.component.js","components/CourseLibrary/CourseLibrary.js","service/firebase.service.js","components/CourseOverview/CourseOverview.js","components/Home/Home.js","components/MyCourses/MyCourses.js","components/UserProfile/EditDialog/EditDialog.component.js","components/UserProfile/UserProfileSection/UserProfileSection.component.js","components/UserProfile/UserProfile.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","maxWidth","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","CourseCard","props","classes","React","useState","console","log","Card","className","CardHeader","title","course","subheader","owner","displayName","CardMedia","image","CardContent","Typography","variant","color","component","description","CardActions","disableSpacing","IconButton","aria-label","Button","Link","to","id","SearchBar","TextField","value","searchValue","onChange","type","onClick","onSearchClicked","CourseLibraryToolbarMenuItem","MenuItem","handleClick","CourseLibraryToolbarMenu","menuItems","options","map","option","associatedClickFunction","display","menuId","anchorEl","element","keepMounted","open","Boolean","onClose","closeFunction","CourseLibraryToolbar","menuButtons","menuItem","clickedFunction","buttonText","menus","menuOptions","AppBar","position","Toolbar","searchInfo","CourseLibrary","sortByClicked","event","setState","sortByElement","currentTarget","sortByHandleClose","topicClicked","topicElement","topicHandleClose","organizationClicked","organizationElement","organizationHandleClosed","buildMenuItems","state","handleSearchChange","bind","handleSearchClicked","e","this","target","listItems","courses","item","class","Component","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","getCourseById","courseId","collection","doc","get","getAllCourses","getAllUsers","updateUser","userId","updates","set","merge","generate","cloneElement","key","CourseOverviewNavigationPane","Paper","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","Grid","container","spacing","xs","md","List","dense","ListItem","ListItemText","primary","CourseOverviewCoursePane","CourseOverview","setCourse","setError","useParams","useEffect","FirebaseService","then","courseResult","exists","data","catch","CircularProgress","CoursesDropdownComponent","numberOfCourses","length","button","courseTitle","CurrentCoursesComponent","currentCourses","PastCoursesComponent","pastCourses","SavedCoursesComponent","savedCourses","CreatedCoursesComponent","createdCourses","MyCourses","user","courseComponentList","favoritedCourses","push","CssBaseline","Container","EditDialog","Dialog","isOpen","handleClose","aria-labelledby","DialogTitle","field","DialogContent","DialogContentText","autoFocus","margin","label","fullWidth","DialogActions","handleSubmit","userKeyToDisplayMap","UserProfileSection","align","displayKey","openDialog","isDialogOpen","UserProfile","setDisplayName","oldDisplayName","setOldDiplayName","isDisplayNameDialogOpen","setIsDisplayNameDialogOpen","result","err","Divider","email","App","users","fetchCourses","fetchUsers","render","queryResults","forEach","chapter","lessons","lesson","edge","RouterLink","exact","path","service","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"qKAAAA,EAAOC,QAAU,IAA0B,kC,otBCqBrCC,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,SAAU,KAEZC,MAAO,CACLC,OAAQ,EACRC,WAAY,UAEdC,OAAQ,CACNC,UAAW,eACXC,WAAY,OACZC,WAAYT,EAAMU,YAAYC,OAAO,YAAa,CAChDC,SAAUZ,EAAMU,YAAYE,SAASC,YAGzCC,WAAY,CACVP,UAAW,kBAEbQ,OAAQ,CACNC,gBAAiBC,IAAI,UAIV,SAASC,EAAWC,GACjC,IAAMC,EAAUtB,IADwB,EAERuB,IAAMC,UAAS,GAFP,6BASxC,OAFAC,QAAQC,IAAIL,GAGV,kBAACM,EAAA,EAAD,CAAMC,UAAWN,EAAQnB,MACvB,kBAAC0B,EAAA,EAAD,CACEC,MAAOT,EAAMU,OAAOD,MACpBE,UAAWX,EAAMU,OAAOE,MAAMC,cAEhC,kBAACC,EAAA,EAAD,CACEP,UAAWN,EAAQjB,MACnB+B,MAAM,kCACNN,MAAM,gBAER,kBAACO,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBC,UAAU,KACzDpB,EAAMU,OAAOW,aAEhB,kBAACJ,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBC,UAAU,KACzDpB,EAAMU,OAAOE,MAAMC,cAGxB,kBAACS,EAAA,EAAD,CAAaC,gBAAc,GACzB,kBAACC,EAAA,EAAD,CAAYC,aAAW,oBACrB,kBAAC,IAAD,OAEF,kBAACC,EAAA,EAAD,CACER,QAAQ,YACRC,MAAM,UACNC,UAAWO,IACXC,GAAE,0BAAqB5B,EAAMU,OAAOmB,KAJtC,c,2CCzDSC,MAXjB,SAAmB9B,GACf,OACE,yBAAKO,UAAU,cACX,kBAACwB,EAAA,EAAD,CAAWC,MAAOhC,EAAMiC,YAAaC,SAAUlC,EAAMkC,SAAUL,GAAG,kBAAkBM,KAAK,SAASjB,QAAQ,WAAYC,MAAM,UAC5H,kBAACK,EAAA,EAAD,CAAYjB,UAAU,cAAc6B,QAASpC,EAAMqC,iBACjD,kBAAC,IAAD,CAAY9B,UAAU,uB,kBCHjB+B,MANjB,SAAsCtC,GAClC,OACM,kBAACuC,EAAA,EAAD,CAAUH,QAASpC,EAAMwC,aAAcxC,EAAMgC,QC2BtCS,MAzBjB,SAAkCzC,GAEhC,IAAI0C,EAAY1C,EAAM2C,QAAQC,KAAK,SAAAC,GACjC,OACE,kBAAC,EAAD,CACEL,YAAaK,EAAOC,wBACpBd,MAAOa,EAAOE,aAMlB,OACE,kBAAC,IAAD,CACIlB,GAAI7B,EAAMgD,OACVC,SAAUjD,EAAMkD,QAChBC,aAAW,EACXC,KAAMC,QAAQrD,EAAMkD,SACpBI,QAAStD,EAAMuD,eAEdb,ICqBIc,MArCf,SAA8BxD,GAE1B,IAAIyD,EAAczD,EAAM0C,UAAUE,KAAI,SAAAc,GAClC,OACI,kBAAChC,EAAA,EAAD,CACIP,MAAM,UACNZ,UAAU,cACV6B,QAASsB,EAASC,iBAEjBD,EAASE,eAKlBC,EAAQ7D,EAAM0C,UAAUE,KAAI,SAAAc,GAC5B,OACI,kBAAC,EAAD,CACIR,QAASQ,EAASR,QAClBK,cAAiBG,EAASH,cAC1BZ,QAASe,EAASI,YAClBd,OAAQU,EAASV,YAM7B,OACI,kBAACe,EAAA,EAAD,CAAQC,SAAS,SAASzD,UAAU,0BAChC,kBAAC0D,EAAA,EAAD,KACKR,EACD,kBAAC,EAAD,CAAWxB,YAAajC,EAAMkE,WAAWlC,MAAOE,SAAUlC,EAAMkE,WAAWhC,SAAUG,gBAAiBrC,EAAMkE,WAAW9B,WAE1HyB,IC4JEM,E,YA1Lb,WAAYnE,GAAQ,IAAD,8BACjB,4CAAMA,KAsCRoE,cAAgB,SAAAC,GACd,EAAKC,SAAS,CACZC,cAAeF,EAAMG,iBAzCN,EA6CnBC,kBAAoB,WAClB,EAAKH,SAAS,CACZC,cAAe,QA/CA,EAqDnBG,aAAe,SAAAL,GACb,EAAKC,SAAS,CACZK,aAAcN,EAAMG,iBAvDL,EA2DnBI,iBAAmB,WACjB,EAAKN,SAAS,CACZK,aAAc,QA7DC,EAmEnBE,oBAAsB,SAAAR,GACpB,EAAKC,SAAS,CACZQ,oBAAqBT,EAAMG,iBArEZ,EAyEnBO,yBAA2B,WACzB,EAAKT,SAAS,CACZQ,oBAAqB,QA3EN,EA+EnBE,eAAiB,WAuEf,MAAO,CAtEY,CACjBpB,WAAY,UACZZ,OAAQ,eACRW,gBAAiB,EAAKS,cACtBb,cAAe,EAAKkB,kBACpBvB,QAAS,EAAK+B,MAAMV,cACpBT,YAAa,CACX,CACEf,QAAS,SACTD,wBAA0B,EAAK2B,mBAEjC,CACE1B,QAAS,cACTD,wBAA0B,EAAK2B,mBAEjC,CACE1B,QAAS,WACTD,wBAA0B,EAAK2B,qBAKnB,CAChBb,WAAY,QACZZ,OAAQ,aACRW,gBAAiB,EAAKe,aACtBxB,QAAS,EAAK+B,MAAMN,aACpBpB,cAAe,EAAKqB,iBACpBd,YAAa,CACX,CACEf,QAAS,UACTD,wBAA0B,EAAK8B,kBAEjC,CACE7B,QAAS,aACTD,wBAA0B,EAAK8B,kBAEjC,CACE7B,QAAS,UACTD,wBAA0B,EAAK8B,kBAEjC,CACE7B,QAAS,OACTD,wBAA0B,EAAK8B,oBAKZ,CACvBhB,WAAY,eACZZ,OAAQ,oBACRW,gBAAiB,EAAKkB,oBACtB3B,QAAS,EAAK+B,MAAMH,oBACpBvB,cAAe,EAAKwB,yBACpBjB,YAAa,CACX,CACEf,QAAS,WACTD,wBAA0B,EAAKiC,0BAEjC,CACEhC,QAAS,cACTD,wBAA0B,EAAKiC,0BAEjC,CACEhC,QAAS,cACTD,wBAA0B,EAAKiC,8BA9IrC,EAAKG,mBAAqB,EAAKA,mBAAmBC,KAAxB,gBAC1B,EAAKC,oBAAsB,EAAKA,oBAAoBD,KAAzB,gBAE3B,EAAKf,cAAgB,EAAKA,cAAce,KAAnB,gBACrB,EAAKV,kBAAoB,EAAKA,kBAAkBU,KAAvB,gBAEzB,EAAKT,aAAe,EAAKA,aAAaS,KAAlB,gBACpB,EAAKP,iBAAmB,EAAKA,iBAAiBO,KAAtB,gBAExB,EAAKN,oBAAsB,EAAKA,oBAAoBM,KAAzB,gBAC3B,EAAKJ,yBAA2B,EAAKA,yBAAyBI,KAA9B,gBAEhC,EAAKH,eAAiB,EAAKA,eAAeG,KAApB,gBAEtB,EAAKF,MAAQ,CACXhD,YAAa,GACbsC,cAAe,KACfI,aAAc,KACdG,oBAAqB,MArBN,E,gFA0BAO,GACjBjF,QAAQC,IAAI,gBACZiF,KAAKhB,SAAS,CACZrC,YAAaoD,EAAEE,OAAOvD,U,0CAINqD,GAClBjF,QAAQC,IAAI,0BACZD,QAAQC,IAAIiF,KAAKL,MAAMhD,e,+BA2HvB,IAAMS,EAAY4C,KAAKN,iBACjBd,EAAa,CACjBlC,MAAOsD,KAAKL,MAAMhD,YAClBC,SAAUoD,KAAKJ,mBACf9C,QAASkD,KAAKF,qBAGZI,EAAYF,KAAKtF,MAAMyF,QAAQ7C,KAAI,SAAS8C,GAC9C,OACE,yBAAKnF,UAAU,iBACb,kBAACR,EAAD,CAAYW,OAAQgF,QAM1B,OACE,yBAAKC,MAAM,kBACT,kBAAC,EAAD,CAAsBjD,UAAWA,EAAWwB,WAAYA,IACtD,yBAAK3D,UAAU,eACZiF,Q,GAnLetF,IAAM0F,W,uICGlCC,KAASC,cAXY,CACjBC,OAAQ,0CACRC,WAAY,gCACZC,YAAa,uCACbC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAInB,IAAMC,GAAKV,KAASW,YAGPC,GAAgB,SAAAC,GACzB,OAAOH,GAAGI,WAAW,UAChBC,IAAIF,GACJG,OAGIC,GAAgB,WACzB,OAAOP,GAAGI,WAAW,UAAUE,OAGtBE,GAAc,WACvB,OAAOR,GAAGI,WAAW,SAASE,OAGrBG,GAAa,SAACC,EAAQC,GAC/B,OAAOX,GAAGI,WAAW,SACRC,IAAIK,GACJE,IAAID,EAAS,CAAEE,OAAO,KCZvC,SAASC,GAASnE,GACd,MAAO,CAAC,EAAG,EAAG,GAAGN,KAAI,SAAAZ,GAAK,OACxB9B,IAAMoH,aAAapE,EAAS,CAC1BqE,IAAKvF,OAOb,SAASwF,KACL,OACI,kBAACC,EAAA,EAAD,CAAOlH,UAAU,SAEjB,kBAACmH,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACAC,WAAY,kBAAC,KAAD,MACZC,gBAAc,kBACdhG,GAAG,kBAEH,kBAACZ,EAAA,EAAD,CAAYC,QAAQ,aAApB,YAEA,kBAAC4G,GAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACrB,kBAACF,EAAA,EAAD,CAAMrC,MAAI,EAACwC,GAAI,GAAIC,GAAI,GACnB,6BACI,kBAACC,GAAA,EAAD,CAAMC,MAAM,QACXhB,GACG,kBAACiB,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CACIC,QAAQ,qBAUpC,kBAACd,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACAC,WAAY,kBAAC,KAAD,MACZC,gBAAc,kBACdhG,GAAG,kBAEH,kBAACZ,EAAA,EAAD,CAAYC,QAAQ,aAApB,YAEA,kBAAC4G,GAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACrB,kBAACF,EAAA,EAAD,CAAMrC,MAAI,EAACwC,GAAI,GAAIC,GAAI,GACnB,6BACI,kBAACC,GAAA,EAAD,CAAMC,MAAM,QACXhB,GACG,kBAACiB,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CACIC,QAAQ,uBAgB5C,SAASC,GAAyBzI,GAC9B,OACI,kBAACyH,EAAA,EAAD,CAAOlH,UAAU,SAASP,EAAMU,OAAOD,OAwD9BiI,OApDjB,SAAwB1I,GAAQ,IAAD,EAECG,qBAFD,mBAEpBO,EAFoB,KAEZiI,EAFY,OAGDxI,qBAHC,mBAGbyI,GAHa,WAIrB/G,EAAOgH,cAAPhH,GAqBN,OAnBAiH,qBAAU,WACFjH,IACAzB,QAAQC,IAAR,cAAmBwB,IACnBkH,GAA8BlH,GACzBmH,MAAK,SAAAC,GACF7I,QAAQC,IAAI4I,EAAaC,QACrBD,EAAaC,QACbN,EAAS,MACTD,EAAUM,EAAaE,UAEvBP,EAAS,oBACTD,QAGPS,OAAM,kBAAMR,EAAS,yBAE/B,CAAC/G,IAEJzB,QAAQC,IAAR,0BAA+BK,IAC3BA,EAEI,yBAAKH,UAAU,kBACb,kBAACU,EAAA,EAAD,CAAYV,UAAU,SAASW,QAAQ,KAAKE,UAAU,MAAtD,mBAGA,kBAAC2G,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACrB,kBAACF,EAAA,EAAD,CAAMrC,MAAI,EAACwC,GAAI,GACX,kBAACV,GAAD,OAEJ,kBAACO,EAAA,EAAD,CAAMrC,MAAI,EAACwC,GAAI,GACV,kBAACO,GAAD,CAA0B/H,OAAQA,OAO7C,0CAEI,kBAAC2I,GAAA,EAAD,Q,OCxIDlF,OARf,WACE,OACE,yBAAK5D,UAAU,QACb,uD,6BCmCN,SAAS+I,GAAyBtJ,GAChC,IAAIuJ,EAAkBvJ,EAAMyF,QAAQ+D,OAEpC,OADApJ,QAAQC,IAAIkJ,GAEV,kBAAC7B,EAAA,EAAD,KACQ,kBAACC,EAAA,EAAD,CACAC,WAAY,kBAAC,KAAD,MACZC,gBAAc,kBACdhG,GAAG,kBAEH,kBAACZ,EAAA,EAAD,CAAYC,QAAQ,aAAaqI,EAAjC,eAEA,kBAACzB,GAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACrB,kBAACF,EAAA,EAAD,CAAMrC,MAAI,EAACwC,GAAI,GAAIC,GAAI,GACnB,6BACI,kBAACC,GAAA,EAAD,CAAMC,MAAM,QAEVrI,EAAMyF,QAAQ7C,KAAK,SAAAlC,GACjB,OACE,kBAAC4H,GAAA,EAAD,CACEmB,QAAM,EACNrI,UAAWO,IACXC,GAAE,0BAAqBlB,EAAOgG,WAE5B,kBAAC6B,GAAA,EAAD,CACIC,QAAS9H,EAAOgJ,wBAkBtD,SAASC,GAAwB3J,GAC/BI,QAAQC,IAAR,kCAA+CL,GAC/C,IAAIuJ,EAAkBvJ,EAAM4J,eAAeJ,OAE3C,OADApJ,QAAQC,IAAIkJ,GAEV,6BACE,iDACA,kBAACD,GAAD,CAA0B7D,QAASzF,EAAM4J,kBAM/C,SAASC,GAAqB7J,GAE5B,OADAI,QAAQC,IAAR,wCAA6CL,IAE3C,6BACE,8CACA,kBAACsJ,GAAD,CAA0B7D,QAASzF,EAAM8J,eAK/C,SAASC,GAAsB/J,GAE7B,OADAI,QAAQC,IAAR,yCAA8CL,IAE5C,6BACE,+CACA,kBAACsJ,GAAD,CAA0B7D,QAASzF,EAAMgK,gBAK/C,SAASC,GAAwBjK,GAE/B,OADAI,QAAQC,IAAR,2CAAgDL,IAE9C,6BACE,+CACA,kBAACsJ,GAAD,CAA0B7D,QAASzF,EAAMkK,kBA2DhCC,OApDf,SAAmBnK,GAEjB,GADAI,QAAQC,IAAI,yBAA0BL,EAAMoK,MACxCpK,EAAMoK,KAAM,CACd,IAAMC,EAAsB,GAI5B,GAHAjK,QAAQC,IAAIL,EAAMoK,KAAKE,kBAGnBtK,EAAMoK,KAAKR,gBAAkB5J,EAAMoK,KAAKR,eAAeJ,OAAS,EAAE,CACpE,IAAMtG,EAAU,kBAACyG,GAAD,CAAyBC,eAAgB5J,EAAMoK,KAAKR,iBACpES,EAAoBE,KAAKrH,GAG3B,GAAIlD,EAAMoK,KAAKN,aAAe9J,EAAMoK,KAAKR,eAAeE,YAAc,EAAE,CACtE,IAAM5G,EAAU,kBAAC2G,GAAD,CAAsBC,YAAa9J,EAAMoK,KAAKN,cAC9DO,EAAoBE,KAAKrH,GAG3B,GAAIlD,EAAMoK,KAAKE,kBAAoBtK,EAAMoK,KAAKE,iBAAiBd,OAAS,EAAE,CACxE,IAAMtG,EAAU,kBAAC6G,GAAD,CAAuBC,aAAchK,EAAMoK,KAAKE,mBAChED,EAAoBE,KAAKrH,GAG3B,GAAIlD,EAAMoK,KAAKF,gBAAkBlK,EAAMoK,KAAKF,eAAeV,OAAS,EAAE,CACpE,IAAMtG,EAAU,kBAAC+G,GAAD,CAAyBC,eAAgBlK,EAAMoK,KAAKF,iBACpEG,EAAoBE,KAAKrH,GAG3B,OACE,yBAAK3C,UAAU,aACb,kBAACiK,GAAA,EAAD,MACA,kBAACvJ,EAAA,EAAD,CAAYV,UAAU,SAASW,QAAQ,KAAKE,UAAU,MAAtD,cAGA,kBAACqJ,GAAA,EAAD,CAAW1L,SAAS,MAClB,kBAAC0I,EAAA,EAAD,CAAOlH,UAAU,SAEb8J,EAAoBzH,KAAK,SAAAM,GAAO,OAAIA,QAO9C,OACI,oE,yFCpISwH,OAjCjB,SAAoB1K,GAChB,OACE,6BACE,kBAAC2K,GAAA,EAAD,CAAQvH,KAAMpD,EAAM4K,OAAQtH,QAAStD,EAAM6K,YAAaC,kBAAgB,qBACtE,kBAACC,GAAA,EAAD,CAAalJ,GAAG,qBAAqB7B,EAAMgL,OAC3C,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,4CACuClL,EAAMgL,OAE7C,kBAACjJ,EAAA,EAAD,CACEoJ,WAAS,EACTC,OAAO,QACPvJ,GAAG,OACHwJ,MAAOrL,EAAMgL,MACbhJ,MAAOhC,EAAMgC,MACbE,SAAUlC,EAAMkC,SAChBC,KAAK,QACLmJ,WAAS,KAGb,kBAACC,GAAA,EAAD,KACE,kBAAC7J,EAAA,EAAD,CAAQU,QAASpC,EAAM6K,YAAa1J,MAAM,WAA1C,UAGA,kBAACO,EAAA,EAAD,CAAQU,QAASpC,EAAMwL,aAAcrK,MAAM,WAA3C,cC1BNsK,GAAsB,CACxB,YAAe,eACf,MAAS,gBACT,SAAY,YA6BDC,OA1Bf,SAA4B1L,GACxB,OACE,6BACE,kBAACiB,EAAA,EAAD,CAAY0K,MAAM,SAASzK,QAAQ,KAAKE,UAAU,MAChD,gCAASqK,GAAoBzL,EAAM4L,cAErC,kBAAC3K,EAAA,EAAD,CAAY0K,MAAM,SAASzK,QAAQ,QAAQE,UAAU,SACnD,8BACCpB,EAAMgC,MACL,kBAACR,EAAA,EAAD,CAAYjB,UAAU,cAAcY,MAAM,UAAUM,aAAW,QAC7D,kBAAC,KAAD,CAAUW,QAASpC,EAAM6L,gBAI/B,kBAAC,GAAD,CACEjB,OAAQ5K,EAAM8L,aACdjB,YAAa7K,EAAM6K,YACnBW,aAAcxL,EAAMwL,aACpBR,MAAOS,GAAoBzL,EAAM4L,YACjC5J,MAAOhC,EAAMgC,MACbE,SAAUlC,EAAMkC,aCyDX6J,OA7Ef,SAAqB/L,GAAQ,IAAD,EAEYG,mBAAS,MAFrB,mBAEnBU,EAFmB,KAENmL,EAFM,OAGiB7L,mBAAS,MAH1B,mBAGnB8L,EAHmB,KAGHC,EAHG,OAIA/L,qBAJA,gCAKoCA,oBAAS,IAL7C,mBAKnBgM,EALmB,KAKMC,EALN,KAsC1B,OAJIpM,EAAMoK,MAAwB,OAAhBvJ,GAChBmL,EAAehM,EAAMoK,KAAKvJ,aAGxBb,EAAMoK,KAEN,yBAAK7J,UAAU,eACb,kBAACiK,GAAA,EAAD,MACA,kBAACvJ,EAAA,EAAD,CAAYV,UAAU,SAASW,QAAQ,KAAKE,UAAU,MAAtD,gBAGA,kBAACqJ,GAAA,EAAD,CAAW1L,SAAS,MAClB,kBAAC0I,EAAA,EAAD,CAAOlH,UAAU,SAEf,kBAAC,GAAD,CACEqL,WAAY,cACZ5J,MAAOnB,EACPgK,YA5Cb,WACGmB,EAAeC,GACfG,GAA2B,IA2CjBZ,aAxCZ,WACEzC,GAA2B/I,EAAMoK,KAAKvI,GAAI,CACxChB,gBACCmI,MAAM,SAAAqD,GACLD,GAA2B,GAC3BF,EAAiBrL,MAElBuI,OAAO,SAAAkD,GACNlM,QAAQC,IAAIiM,OAiCNR,aAAcK,EACdN,WA7BZ,WACEK,EAAiBrL,GACjBuL,GAA2B,IA4BjBlK,SAzBZ,SAA6BmD,GAC3B2G,EAAe3G,EAAEE,OAAOvD,UA0BhB,kBAACuK,GAAA,EAAD,MACA,kBAAC,GAAD,CAAoBX,WAAW,QAAQ5J,MAAOhC,EAAMoK,KAAKoC,QACzD,kBAACD,GAAA,EAAD,MACA,kBAAC,GAAD,CAAoBX,WAAW,WAAW5J,MA9DhC,eAsEhB,yCAEE,kBAACqH,GAAA,EAAD,QCiDOoD,G,YAvGb,aAAe,IAAD,8BACZ,+CACKxH,MAAQ,CACXQ,QAAS,GACTiH,MAAO,IAET,EAAKC,aAAe,EAAKA,aAAaxH,KAAlB,gBACpB,EAAKyH,WAAa,EAAKA,WAAWzH,KAAhB,gBAClB,EAAK0H,OAAS,EAAKA,OAAO1H,KAAZ,gBACd,EAAKwH,eACL,EAAKC,aAVO,E,yEAeZ7D,KAAgCC,MAAM,SAAC8D,GACnCA,EAAaC,SAAQ,SAACnG,GACpBxG,QAAQC,IAAR,UAAeuG,EAAI/E,GAAnB,eAA4B+E,EAAIuC,SAChC/I,QAAQC,IAAIuG,EAAIuC,gB,mKAMhB1D,EAAU,G,SACRsD,KAAgCC,MAAM,SAAC8D,GAC3CA,EAAaC,SAAQ,SAACnG,GACpB,IAAMlG,EAASkG,EAAIuC,OACbzC,EAAWE,EAAI/E,GACrBnB,EAAOE,MAAMiG,MAAMmC,MAAK,SAAAoB,GACtB1J,EAAOE,MAAQwJ,EAAKjB,UAEtBzI,EAAOsM,QAAQC,QAAQpG,MAAMmC,MAAK,SAAAkE,GAChCxM,EAAOsM,QAAQC,QAAUC,EAAO/D,UAElCzI,EAAOmB,GAAK6E,EACZjB,EAAQ8E,KAAK7J,GACb,EAAK4D,SAAS,CAACmB,QAASA,U,kQAMxBiH,EAAQ,G,SACN3D,KACHC,MAAM,SAAC8D,GACNA,EAAaC,SAAS,SAACnG,GACrB,IAAMwD,EAAOxD,EAAIuC,OACjBiB,EAAKvI,GAAK+E,EAAI/E,GACd6K,EAAMnC,KAAKH,GACX,EAAK9F,SAAS,CACZoI,gB,gIAQV,OACE,kBAAC,IAAD,KACE,6BACE,6BACA,kBAAC3I,EAAA,EAAD,CAAQC,SAAS,UACf,kBAACC,EAAA,EAAD,KACE,kBAACzC,EAAA,EAAD,CAAY2L,KAAK,QAAQ5M,UAAU,cAAcY,MAAM,UAAUM,aAAW,QAC1E,kBAAC,IAAD,OAEF,kBAACC,EAAA,EAAD,CAAQP,MAAM,UAAUZ,UAAU,cAAca,UAAWgM,IAAYxL,GAAG,KAA1E,iBACA,kBAACF,EAAA,EAAD,CAAQP,MAAM,UAAUZ,UAAU,cAAca,UAAWgM,IAAYxL,GAAG,cAA1E,cACA,kBAACF,EAAA,EAAD,CAAQP,MAAM,UAAUZ,UAAU,cAAca,UAAWgM,IAAYxL,GAAG,kBAA1E,eACA,kBAACJ,EAAA,EAAD,CAAYjB,UAAU,2BAA2Ba,UAAWgM,IAAYxL,GAAG,WAAWT,MAAM,UAAUM,aAAW,QAC/G,kBAAC,IAAD,UAQN,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO4L,OAAK,EAACC,KAAK,KAChB,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,kBACV,kBAAC,EAAD,CAAe7H,QAASH,KAAKL,MAAMQ,WAErC,kBAAC,IAAD,CAAO6H,KAAK,uBACV,kBAAC,GAAD,CAAgBC,QAASxE,KAE3B,kBAAC,IAAD,CAAOuE,KAAK,cACV,kBAAC,GAAD,CAAWlD,KAAM9E,KAAKL,MAAMyH,MAAM,MAEpC,kBAAC,IAAD,CAAOY,KAAK,YACV,kBAAC,GAAD,CAAalD,KAAM9E,KAAKL,MAAMyH,MAAM,a,GA/FhCxM,IAAM0F,WCjBJvC,QACW,cAA7BmK,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASf,OAAO,kBAAC,GAAD,MAASgB,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBjF,MAAK,SAAAkF,GACJA,EAAaC,gBAEd/E,OAAM,SAAAgF,GACLhO,QAAQgO,MAAMA,EAAMC,c","file":"static/js/main.b92113ab.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { Button } from '@material-ui/core';\nimport {Link} from 'react-router-dom'\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n}));\n\nexport default function CourseCard(props) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n  console.log(props)\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n        title={props.course.title}\n        subheader={props.course.owner.displayName}\n      />\n      <CardMedia\n        className={classes.media}\n        image=\"/static/images/cards/paella.jpg\"\n        title=\"Paella dish\"\n      />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {props.course.description}\n        </Typography> \n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {props.course.owner.displayName}\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n        <IconButton aria-label=\"add to favorites\">\n          <FavoriteIcon />\n        </IconButton>\n        <Button \n          variant=\"contained\" \n          color=\"primary\"\n          component={Link}\n          to={`/courseOverview/${props.course.id}`}\n          >\n            Overview\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}","import React from 'react';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport { IconButton  } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\n\nimport './SearchBar.css';\n\nfunction SearchBar(props) {\n    return(\n      <div className=\"search-bar\">\n          <TextField value={props.searchValue} onChange={props.onChange} id=\"outlined-search\" type=\"search\" variant=\"outlined\"  color=\"white\"/>\n          <IconButton className=\"menu-button\" onClick={props.onSearchClicked}>\n            <SearchIcon className=\"search-bar-icon\" />\n          </IconButton>\n      </div>\n    )\n  }\n\n  export default SearchBar\n  \n\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\n\n\nfunction CourseLibraryToolbarMenuItem(props){\n    return (\n          <MenuItem onClick={props.handleClick}>{props.value}</MenuItem>\n    )\n  }\n\n  export default CourseLibraryToolbarMenuItem","import React from 'react';\n\nimport Menu from '@material-ui/core/Menu';\n\nimport CourseLibraryToolbarMenuItem from './CourseLibraryToolbarMenuItem/CourseLibraryToolbarMenuItem.component';\n\n\n\nfunction CourseLibraryToolbarMenu(props){\n\n  let menuItems = props.options.map( option => {\n    return (\n      <CourseLibraryToolbarMenuItem\n        handleClick={option.associatedClickFunction}\n        value={option.display}>\n      </CourseLibraryToolbarMenuItem>\n    )\n  })\n\n\n    return (\n      <Menu\n          id={props.menuId}\n          anchorEl={props.element}\n          keepMounted\n          open={Boolean(props.element)}\n          onClose={props.closeFunction}\n        >\n          {menuItems}\n      </Menu>\n    )\n  }\n\n  export default CourseLibraryToolbarMenu","import React from 'react';\n\nimport {AppBar, Toolbar, IconButton, Typography } from '@material-ui/core';\nimport {Button} from '@material-ui/core';\n\nimport SearchBar from './SearchBar/SearchBar.component';\nimport CourseLibraryToolbarMenu from './CourseLibraryToolbarMenu/CourseLibraryToolbarMenu.component'\n\n\n//<CourseLibraryMenu handleClose={this.handleClose} sortByElement={props.state.sortByElement}></CourseLibraryMenu>\n\n\nfunction CourseLibraryToolbar(props){\n\n    let menuButtons = props.menuItems.map(menuItem => {\n        return (\n            <Button\n                color=\"inherit\" \n                className=\"menu-button\"\n                onClick={menuItem.clickedFunction}\n            >\n                {menuItem.buttonText}\n            </Button>\n        )\n    })\n\n    let menus = props.menuItems.map(menuItem => {\n        return(\n            <CourseLibraryToolbarMenu\n                element={menuItem.element}\n                closeFunction = {menuItem.closeFunction}\n                options={menuItem.menuOptions}\n                menuId={menuItem.menuId}\n            >\n            </CourseLibraryToolbarMenu>\n        )\n    })\n\n    return(\n        <AppBar position=\"static\" className=\"course-library-app-bar\">\n            <Toolbar>\n                {menuButtons}\n                <SearchBar searchValue={props.searchInfo.value} onChange={props.searchInfo.onChange} onSearchClicked={props.searchInfo.onClick}></SearchBar>\n            </Toolbar>\n            {menus}\n      </AppBar>\n    )\n}\n\nexport default CourseLibraryToolbar","import React from 'react';\nimport './CourseLibrary.css';\nimport {Button} from '@material-ui/core';\nimport CourseCard from '../CourseCard/CourseCard';\nimport { render } from '@testing-library/react';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport {AppBar, Toolbar, IconButton, Typography } from '@material-ui/core';\nimport SearchBar from './CourseLibraryToolbar/SearchBar/SearchBar.component';\nimport CourseLibraryMenu from './CourseLibraryToolbar/CourseLibraryToolbarMenu/CourseLibraryToolbarMenu.component'\n\nimport CourseLibraryToolbar from './CourseLibraryToolbar/CourseLibraryToolbar.component'\n\nclass CourseLibrary extends React.Component {\n  constructor(props) {\n    super(props);\n    // Bind Search\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n    this.handleSearchClicked = this.handleSearchClicked.bind(this);\n    // Bind Sort By\n    this.sortByClicked = this.sortByClicked.bind(this);\n    this.sortByHandleClose = this.sortByHandleClose.bind(this);\n    // Bind Topic\n    this.topicClicked = this.topicClicked.bind(this);\n    this.topicHandleClose = this.topicHandleClose.bind(this);\n    // Bind Organization\n    this.organizationClicked = this.organizationClicked.bind(this);\n    this.organizationHandleClosed = this.organizationHandleClosed.bind(this);\n\n    this.buildMenuItems = this.buildMenuItems.bind(this);\n\n    this.state = {\n      searchValue: \"\",\n      sortByElement: null,\n      topicElement: null,\n      organizationElement: null,\n    }\n  }\n\n  /** Search Function */\n  handleSearchChange(e){\n    console.log(\"Key Entered!\")\n    this.setState({\n      searchValue: e.target.value\n    })\n  }\n\n  handleSearchClicked(e){\n    console.log(\"Search button clicked!\")\n    console.log(this.state.searchValue);\n  }\n\n  /** Sort By Functions */\n  sortByClicked = event => {\n    this.setState({\n      sortByElement: event.currentTarget\n    });\n  };\n\n  sortByHandleClose = () => {\n    this.setState({\n      sortByElement: null\n    });\n  };\n\n\n  /** Topic Functions */\n  topicClicked = event => {\n    this.setState({\n      topicElement: event.currentTarget\n    });\n  };\n\n  topicHandleClose = () => {\n    this.setState({\n      topicElement: null\n    });\n  };\n\n\n  /** Organization functions */\n  organizationClicked = event => {\n    this.setState({\n      organizationElement: event.currentTarget\n    });\n  };\n\n  organizationHandleClosed = () => {\n    this.setState({\n      organizationElement: null\n    });\n  };\n\n  buildMenuItems = () => {\n    const sortByInfo = {\n      buttonText: \"Sort By\",\n      menuId: \"menu-sort-by\",\n      clickedFunction: this.sortByClicked,\n      closeFunction: this.sortByHandleClose,\n      element: this.state.sortByElement,\n      menuOptions: [\n        {\n          display: \"Newest\",\n          associatedClickFunction:  this.sortByHandleClose\n        },\n        {\n          display: \"Recommended\",\n          associatedClickFunction:  this.sortByHandleClose\n        },\n        {\n          display: \"Trending\",\n          associatedClickFunction:  this.sortByHandleClose\n        }\n      ]\n    }\n\n    const topicInfo = {\n      buttonText: \"Topic\",\n      menuId: \"menu-topic\",\n      clickedFunction: this.topicClicked,\n      element: this.state.topicElement,\n      closeFunction: this.topicHandleClose,\n      menuOptions: [\n        {\n          display: \"Science\",\n          associatedClickFunction:  this.topicHandleClose\n        },\n        {\n          display: \"Technology\",\n          associatedClickFunction:  this.topicHandleClose\n        },\n        {\n          display: \"History\",\n          associatedClickFunction:  this.topicHandleClose\n        },\n        {\n          display: \"Arts\",\n          associatedClickFunction:  this.topicHandleClose\n        }\n      ]\n    }\n\n    const organizationInfo = {\n      buttonText: \"Organization\",\n      menuId: \"menu-organization\",\n      clickedFunction: this.organizationClicked,\n      element: this.state.organizationElement,\n      closeFunction: this.organizationHandleClosed,\n      menuOptions: [\n        {\n          display: \"Required\",\n          associatedClickFunction:  this.organizationHandleClosed\n        },\n        {\n          display: \"Recommended\",\n          associatedClickFunction:  this.organizationHandleClosed\n        },\n        {\n          display: \"All Courses\",\n          associatedClickFunction:  this.organizationHandleClosed\n        }\n      ]\n    }\n\n    return [sortByInfo, topicInfo, organizationInfo];\n  }\n\n\n\n  render() {\n    // Mappings\n\n    const menuItems = this.buildMenuItems();\n    const searchInfo = {\n      value: this.state.searchValue,\n      onChange: this.handleSearchChange,\n      onClick: this.handleSearchClicked\n    }\n\n    let listItems = this.props.courses.map(function(item) {\n      return (\n        <div className=\"CurrentCourse\">\n          <CourseCard course={item}\n          ></CourseCard>\n        </div>\n      );\n    });\n    \n    return (\n      <div class=\"course-library\">\n        <CourseLibraryToolbar menuItems={menuItems} searchInfo={searchInfo}></CourseLibraryToolbar>\n          <div className=\"course-list\">\n            {listItems}\n          </div>\n      </div>\n\n      );\n  }\n}\n\nexport default CourseLibrary;\n","// import * as firebase from \"firebase/app\";\n// import \"firebase/firestore\";\n// import \"firebase/auth\";\nimport firebase from 'firebase'\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyA8tAHYGUiNkFHq6452W4Qr79eibVmtRZA\",\n    authDomain: \"mooc-in-a-box.firebaseapp.com\",\n    databaseURL: \"https://mooc-in-a-box.firebaseio.com\",\n    projectId: \"mooc-in-a-box\",\n    storageBucket: \"mooc-in-a-box.appspot.com\",\n    messagingSenderId: \"594314585164\",\n    appId: \"1:594314585164:web:3ae152452d1c238af100e9\",\n    measurementId: \"G-LXH34JCXZS\"\n  };\n\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\n\n\nexport const getCourseById = courseId => {\n    return db.collection('Course')\n        .doc(courseId)\n        .get();\n};\n\nexport const getAllCourses = () => {\n    return db.collection('Course').get();\n}\n\nexport const getAllUsers = () => {\n    return db.collection('Users').get();\n}\n\nexport const updateUser = (userId, updates) => {\n    return db.collection('Users')\n                .doc(userId)\n                .set(updates, { merge: true })\n}","import React, { useState, useEffect } from 'react';\nimport './CourseOverview.css';\n\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport * as FirebaseService from '../../service/firebase.service';\n\nimport { useParams } from \"react-router-dom\";\n\n\n\nfunction generate(element) {\n    return [0, 1, 2].map(value =>\n      React.cloneElement(element, {\n        key: value,\n      }),\n    );\n  }\n\n\n \nfunction CourseOverviewNavigationPane() {\n    return (\n        <Paper className=\"paper\">\n\n        <ExpansionPanel>\n            <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n            >\n            <Typography variant=\"subtitle2\">Topic 1</Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n            <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                    <div>\n                        <List dense=\"true\">\n                        {generate(\n                            <ListItem>\n                                <ListItemText\n                                    primary=\"SubTopic\"\n                                />\n                            </ListItem>,\n                        )}\n                        </List>\n                    </div>\n                    </Grid>\n                </Grid>\n            </ExpansionPanelDetails>\n        </ExpansionPanel>\n        <ExpansionPanel>\n            <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel2a-content\"\n            id=\"panel2a-header\"\n            >\n            <Typography variant=\"subtitle2\">Topic 2</Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n            <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                    <div>\n                        <List dense=\"true\">\n                        {generate(\n                            <ListItem>\n                                <ListItemText\n                                    primary=\"SubTopic2\"\n                                />\n                            </ListItem>,\n                        )}\n                        </List>\n                    </div>\n                    </Grid>\n                </Grid>\n            </ExpansionPanelDetails>\n        </ExpansionPanel>\n\n    </Paper>\n    )\n}  \n\n\nfunction CourseOverviewCoursePane(props) {\n    return (\n        <Paper className=\"paper\">{props.course.title}</Paper>\n    )\n}\n\nfunction CourseOverview(props) {\n\n    const [course, setCourse] = useState();\n    const [error, setError] = useState();\n    let { id } = useParams();\n\n    useEffect(() => {\n        if (id) {\n            console.log(`ID: ${id}`);\n            FirebaseService.getCourseById(id)\n                .then(courseResult => {\n                    console.log(courseResult.exists)\n                    if (courseResult.exists) {\n                        setError(null);\n                        setCourse(courseResult.data());\n                    } else {\n                        setError('Course Not Found');\n                        setCourse();\n                    }\n                })\n                .catch(() => setError('Course Get Fail'));\n      }\n    }, [id]);\n\n    console.log(`Course Overiew: ${course}`)\n    if (course){\n        return (\n            <div className=\"courseOverview\">\n              <Typography className=\"center\" variant=\"h3\" component=\"h3\">\n                  Course Overview\n              </Typography>\n              <Grid container spacing={3}>\n                  <Grid item xs={4}>\n                      <CourseOverviewNavigationPane />\n                  </Grid>\n                  <Grid item xs={8}>\n                       <CourseOverviewCoursePane course={course} />\n                  </Grid>\n              </Grid>\n            </div>\n          );\n    } else {\n        return (\n            <div>\n                Loading...\n                <CircularProgress></CircularProgress>\n            </div>\n        )\n    }\n\n  }\n  \n  export default CourseOverview;","import React from 'react';\nimport './Home.css';\nimport {Button} from '@material-ui/core';\n\nfunction CourseLibrary() {\n  return (\n    <div className=\"Home\">\n      <h1>This Is MOOC IN A BOX</h1>\n    </div>\n  );\n}\n\nexport default CourseLibrary;\n","import React from 'react';\nimport './MyCourses.css';\nimport {Button} from '@material-ui/core';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {Link} from 'react-router-dom'\n\n\n/**\n * \n * http://localhost:3000/courseOverview/rlfxOavBn4nPZLNTRMkL\n * http://localhost:3000/courseOverview/rlfxOavBn4nPZLNTRMkL\n */\n\n /**\n  * \n  * \n  */\n\n\n\nfunction generate(element) {\n  return React.cloneElement(element, {\n      key: element,\n    })\n}\n\n\nfunction CoursesDropdownComponent(props) {\n  let numberOfCourses = props.courses.length;\n  console.log(numberOfCourses);\n  return (\n    <ExpansionPanel>\n            <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n            >\n            <Typography variant=\"subtitle2\">{numberOfCourses} Course(s)</Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n            <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                    <div>\n                        <List dense=\"true\">\n                        {\n                          props.courses.map( course => {\n                            return (\n                              <ListItem \n                                button\n                                component={Link}\n                                to={`/courseOverview/${course.courseId}`}\n                              >\n                                  <ListItemText\n                                      primary={course.courseTitle}\n                                  />\n                              </ListItem>\n                            )\n                          })\n                        }\n                        </List>\n                    </div>\n                    </Grid>\n                </Grid>\n            </ExpansionPanelDetails>\n        </ExpansionPanel>\n  )\n}\n\n\n\n\nfunction CurrentCoursesComponent(props){\n  console.log(`Current Courses Component Props`, props);\n  let numberOfCourses = props.currentCourses.length;\n  console.log(numberOfCourses);\n  return (\n    <div>\n      <h1> Current Courses </h1>\n      <CoursesDropdownComponent courses={props.currentCourses}></CoursesDropdownComponent>\n    </div>\n  )\n}\n\n\nfunction PastCoursesComponent(props){\n  console.log(`Past Courses Component Props: ${props}`);\n  return (\n    <div>\n      <h1> Past Courses </h1>\n      <CoursesDropdownComponent courses={props.pastCourses}></CoursesDropdownComponent>\n    </div>\n  )\n}\n\nfunction SavedCoursesComponent(props){\n  console.log(`Saved Courses Component Props: ${props}`);\n  return (\n    <div>\n      <h1> Saved Courses </h1>\n      <CoursesDropdownComponent courses={props.savedCourses}></CoursesDropdownComponent>\n    </div>\n  )\n}\n\nfunction CreatedCoursesComponent(props){\n  console.log(`Created Courses Component Props: ${props}`);\n  return (\n    <div>\n      <h1> Saved Courses </h1>\n      <CoursesDropdownComponent courses={props.createdCourses}></CoursesDropdownComponent>\n    </div>\n  )\n}\n\n\n\nfunction MyCourses(props) {\n  console.log(\"My Courses Component: \", props.user);\n  if (props.user) {\n    const courseComponentList = []\n    console.log(props.user.favoritedCourses);\n\n    \n    if (props.user.currentCourses && props.user.currentCourses.length > 0){\n      const element = <CurrentCoursesComponent currentCourses={props.user.currentCourses}></CurrentCoursesComponent>\n      courseComponentList.push(element);\n    }\n\n    if (props.user.pastCourses && props.user.currentCourses.pastCourses > 0){\n      const element = <PastCoursesComponent pastCourses={props.user.pastCourses}></PastCoursesComponent>\n      courseComponentList.push(element);\n    }\n\n    if (props.user.favoritedCourses && props.user.favoritedCourses.length > 0){\n      const element = <SavedCoursesComponent savedCourses={props.user.favoritedCourses}></SavedCoursesComponent>\n      courseComponentList.push(element);\n    }\n\n    if (props.user.createdCourses && props.user.createdCourses.length > 0){\n      const element = <CreatedCoursesComponent createdCourses={props.user.createdCourses}></CreatedCoursesComponent>\n      courseComponentList.push(element);\n    }\n\n    return (\n      <div className=\"MyCourses\">\n        <CssBaseline />\n        <Typography className=\"center\" variant=\"h3\" component=\"h3\">\n            My Courses\n        </Typography>\n        <Container maxWidth=\"lg\">\n          <Paper className=\"paper\">\n            {\n              courseComponentList.map( element => element)\n            }\n          </Paper>\n        </Container>\n      </div>\n    );\n  } else {\n    return (\n        <div>\n            You don't have any course history!\n        </div>\n    )\n  }\n\n}\n\nexport default MyCourses;\n","import React from 'react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {Button} from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\n\nfunction EditDialog(props){\n    return (\n      <div>\n        <Dialog open={props.isOpen} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n          <DialogTitle id=\"form-dialog-title\">{props.field}</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              Edit the Field below to update your {props.field}\n            </DialogContentText>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"name\"\n              label={props.field}\n              value={props.value}\n              onChange={props.onChange}\n              type=\"email\"\n              fullWidth\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={props.handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={props.handleSubmit} color=\"primary\">\n              Submit\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    )\n  }\n\n  export default EditDialog","import React from 'react';\n\n\nimport Typography from '@material-ui/core/Typography';\nimport { IconButton } from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport EditDialog from '../EditDialog/EditDialog.component';\n\nconst userKeyToDisplayMap = {\n    \"displayName\": \"Display Name\",\n    \"email\": \"Email Address\",\n    \"password\": \"Password\"\n  }\n\nfunction UserProfileSection(props){\n    return (\n      <div>\n        <Typography align=\"center\" variant=\"h6\" component=\"h6\">\n          <strong>{userKeyToDisplayMap[props.displayKey]}</strong>\n        </Typography>\n        <Typography align=\"center\" variant=\"body1\" component=\"body1\">\n          <span>\n          {props.value}\n            <IconButton className=\"menu-button\" color=\"inherit\" aria-label=\"menu\">\n              <EditIcon onClick={props.openDialog}/>\n            </IconButton>\n          </span>\n        </Typography>\n        <EditDialog \n          isOpen={props.isDialogOpen}\n          handleClose={props.handleClose}\n          handleSubmit={props.handleSubmit}\n          field={userKeyToDisplayMap[props.displayKey]}\n          value={props.value}\n          onChange={props.onChange}\n        />\n      </div>\n    )\n}\n\nexport default UserProfileSection\n  ","import React, { useState } from 'react';\nimport './UserProfile.css';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport Divider from '@material-ui/core/Divider';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport UserProfileSection from './UserProfileSection/UserProfileSection.component';\nimport * as FirebaseService from '../../service/firebase.service';\n\nconst passwordValue = \"*******\";\n\nfunction UserProfile(props) {\n\n  const [displayName, setDisplayName] = useState(null);\n  const [oldDisplayName, setOldDiplayName] = useState(null);\n  const [error, setError] = useState();\n  const [isDisplayNameDialogOpen, setIsDisplayNameDialogOpen] = useState(false)\n\n function  handleDisplayNameClose(){\n    setDisplayName(oldDisplayName)\n    setIsDisplayNameDialogOpen(false)\n  }\n\n  function handleDisplayNameSubmit(){\n    FirebaseService.updateUser(props.user.id, {\n      displayName\n    }).then( result => {\n        setIsDisplayNameDialogOpen(false)\n        setOldDiplayName(displayName)\n      })\n      .catch( err => {\n        console.log(err);\n      })\n  \n  }\n \n  function openDisplayNameDialog(){\n    setOldDiplayName(displayName)\n    setIsDisplayNameDialogOpen(true)\n  }\n\n  function onDisplayNameChange(e){\n    setDisplayName(e.target.value);\n  }\n\n  if (props.user && displayName === null){\n    setDisplayName(props.user.displayName)\n  }\n\n  if (props.user){\n    return (\n      <div className=\"userProfile\">\n        <CssBaseline />\n        <Typography className=\"center\" variant=\"h3\" component=\"h3\">\n            User Profile\n        </Typography>\n        <Container maxWidth=\"lg\">\n          <Paper className=\"paper\">\n  \n            <UserProfileSection \n              displayKey={\"displayName\"} \n              value={displayName}\n              handleClose={handleDisplayNameClose}\n              handleSubmit={handleDisplayNameSubmit}  \n              isDialogOpen={isDisplayNameDialogOpen} \n              openDialog={openDisplayNameDialog}  \n              onChange={onDisplayNameChange}\n            ></UserProfileSection>\n            <Divider />\n            <UserProfileSection displayKey=\"email\" value={props.user.email}></UserProfileSection>\n            <Divider />\n            <UserProfileSection displayKey=\"password\" value={passwordValue}></UserProfileSection>\n  \n          </Paper>\n        </Container>\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        Loading..\n        <CircularProgress></CircularProgress>\n      </div>\n    )\n  }\n\n}\n\nexport default UserProfile;\n","import React, { useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {AppBar, Toolbar, IconButton, Typography, Button, } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\n\n\n\n\nimport CourseLibrary from './components/CourseLibrary/CourseLibrary';\nimport CourseOverview from './components/CourseOverview/CourseOverview';\nimport Home from './components/Home/Home';\nimport MyCourses from './components/MyCourses/MyCourses';\nimport UserProfile from './components/UserProfile/UserProfile';\n\n\nimport * as FirebaseService from '../src/service/firebase.service'\nimport { render } from '@testing-library/react';\n\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      courses: [],\n      users: []\n    };\n    this.fetchCourses = this.fetchCourses.bind(this);\n    this.fetchUsers = this.fetchUsers.bind(this);\n    this.render = this.render.bind(this);\n    this.fetchCourses();\n    this.fetchUsers();\n  }\n\n  useEffect() {\n    // Update the document title using the browser API\n    FirebaseService.getAllCourses().then( (queryResults) => {\n        queryResults.forEach((doc) => {\n          console.log(`${doc.id} => ${doc.data()}`);\n          console.log(doc.data());\n        });\n      })\n    }\n    \n    async fetchCourses() {\n      let courses = [];\n      await FirebaseService.getAllCourses().then( (queryResults) => {\n        queryResults.forEach((doc) => {\n          const course = doc.data();\n          const courseId = doc.id;\n          course.owner.get().then(user => {\n            course.owner = user.data();\n          })\n          course.chapter.lessons.get().then(lesson => {\n            course.chapter.lessons = lesson.data();\n          })\n          course.id = courseId\n          courses.push(course);\n          this.setState({courses: courses});\n        });\n      });\n    }\n\n    async fetchUsers(){\n      let users = [];\n      await FirebaseService.getAllUsers()\n        .then( (queryResults) => {\n          queryResults.forEach( (doc) => {\n            const user = doc.data();\n            user.id = doc.id;\n            users.push(user);\n            this.setState({\n              users\n            })\n          })\n        })\n    }\n\n\n  render() {\n    return (\n      <Router>\n        <div>\n          <nav>\n          <AppBar position=\"static\">\n            <Toolbar>\n              <IconButton edge=\"start\" className=\"menu-button\" color=\"inherit\" aria-label=\"menu\">\n                <MenuIcon />\n              </IconButton>\n              <Button color=\"inherit\" className=\"menu-button\" component={RouterLink} to=\"/\">MOOC-In-A-Box</Button>\n              <Button color=\"inherit\" className=\"menu-button\" component={RouterLink} to=\"/myCourses\">My Courses</Button>\n              <Button color=\"inherit\" className=\"menu-button\" component={RouterLink} to=\"/courseLibrary\">All Courses</Button>\n              <IconButton className=\"menu-button profile-icon\" component={RouterLink} to=\"/profile\" color=\"inherit\" aria-label=\"menu\">\n                <AccountCircleIcon />\n              </IconButton>\n            </Toolbar>\n          </AppBar>\n          </nav>\n\n          {/* A <Switch> looks through its children <Route>s and\n              renders the first one that matches the current URL. */}\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route path=\"/courseLibrary\">\n              <CourseLibrary courses={this.state.courses}/>\n            </Route>\n            <Route path=\"/courseOverview/:id\">\n              <CourseOverview service={FirebaseService}></CourseOverview>\n            </Route>\n            <Route path=\"/myCourses\">\n              <MyCourses user={this.state.users[0]}></MyCourses>\n            </Route>\n            <Route path=\"/profile\">\n              <UserProfile user={this.state.users[0]}></UserProfile>\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    )\n  }\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}