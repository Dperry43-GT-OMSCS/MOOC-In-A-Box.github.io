{"version":3,"sources":["components/CourseCard/placeholder.png","components/CourseCard/CourseCard.js","components/CourseLibrary/CourseLibraryToolbar/SearchBar/SearchBar.component.js","components/CourseLibrary/CourseLibraryToolbar/CourseLibraryToolbarMenu/CourseLibraryToolbarMenuItem/CourseLibraryToolbarMenuItem.component.js","components/CourseLibrary/CourseLibraryToolbar/CourseLibraryToolbarMenu/CourseLibraryToolbarMenu.component.js","components/CourseLibrary/CourseLibraryToolbar/CourseLibraryToolbar.component.js","service/firebase.service.js","components/CourseLibrary/CourseLibrary.js","components/Login/Login.js","components/CoursesDropdown/CoursesDropdown.component.js","components/MyCourses/MyCourses.js","components/UserProfile/EditDialog/EditDialog.component.js","components/UserProfile/UserProfileSection/UserProfileSection.component.js","components/UserProfile/UserProfile.js","components/CreateCourse/CreateCourseDialog/CreateCourseDialog.component.js","components/CreateCourse/CreateCourse.component.js","components/CourseOverview/CourseNavigationPane/CourseChapterPanel/CourseChapterPanel.component.js","components/CourseOverview/CourseNavigationPane/CourseNavigationPane.component.js","components/CourseOverview/CourseOverviewPane/CourseLesson/CourseLesson.component.js","components/CourseOverview/CourseOverviewPane/CourseOverviewPane.component.js","components/CourseOverview/Dialogs/CreateChapterDialog/CreateChapterDialog.component.js","components/CourseOverview/Dialogs/CreateLessonDialog/CreateLessonDialog.component.js","components/CourseOverview/Dialogs/DeleteDialog/DeleteDialog.component.js","components/CourseOverview/CourseOverview.component.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","maxWidth","minWidth","maxHeight","minHeight","position","media","paddingTop","marginLeft","marginRight","expand","transform","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","actionsRow","bottom","left","width","content","overflow","textOverflow","display","WebkitLineClamp","WebkitBoxOrient","CourseCard","props","classes","React","useState","isFavorited","setIsFavorited","isEnrolled","setisEnrolled","isCourseAFavorite","isCourseEnrolled","Card","variant","className","CardHeader","title","course","subheader","owner","displayName","name","action","IconButton","aria-label","onClick","removeFavoriteClicked","favoriteClicked","CardMedia","image","thumbnailUrl","placeholder","CardContent","Typography","color","component","description","CardActions","Button","Link","to","id","enrollClicked","SearchBar","TextField","value","searchValue","onChange","type","onSearchClicked","CourseLibraryToolbarMenuItem","FormControlLabel","control","Radio","label","CourseLibraryToolbarMenu","menuItems","options","map","option","handleClick","associatedClickFunction","Menu","menuId","anchorEl","element","keepMounted","open","Boolean","onClose","closeFunction","MenuItem","FormControl","FormLabel","menuLabel","RadioGroup","radioGroupName","menuValue","event","target","CourseLibraryToolbar","menuButtons","menuItem","clickedFunction","buttonText","menus","menuOptions","AppBar","Toolbar","searchInfo","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","storageRef","storage","ref","getUserById","userId","collection","doc","get","getAllUsers","updateUser","updates","a","set","merge","createUser","userAuth","uid","photoURL","email","getCurrentUser","user","auth","currentUser","deleteUser","delete","then","document","cookie","catch","error","getCourseById","courseId","courseResult","exists","data","addImage","imageFile","child","put","getImageUrl","getDownloadURL","createCourse","courseInfo","userDocRef","newCourseObj","chapters","overview","JSON","stringify","add","courseDoc","usersCreatedCourses","createdCoursesRefs","length","courseRef","push","thumbnailFile","imageRef","imageUrl","courseUpdate","updateCourse","courseDocWithImage","updateObject","favoriteCourse","favoritedCourses","favoritedCoursesRefs","removeFavoriteCourse","filter","item","enrollInCourse","enrolledCourses","enrolledCoursesRefs","unenrollInCourse","deleteCourseInFirebase","courseDeletedResult","queryResults","updateUsersPromises","forEach","createdCoursesRefLength","favoritedCourseRefs","enrolledCourseRefs","Promise","all","deleteAllChapters","arrayOfLessonPromises","deleteLessons","chapter","lessonsRef","deleteCourse","addNewChapter","newChapterInfo","updateLesson","chapterInfo","lessonInfo","lessonDoc","lessonRef","deleteLesson","lesson","courseChapters","chapterInside","lessonsRefs","lessons","lessonInside","result","logUserInUser","isGoog","provider","GoogleAuthProvider","FacebookAuthProvider","users","undefined","authUser","signInWithPopup","u","console","log","signOut","getDocFromDocRef","docRef","myResult","CourseLibrary","sortByClicked","setState","sortByElement","currentTarget","sortByHandleClose","sortFilterValue","topicClicked","topicElement","topicHandleClose","topicFilterValue","organizationClicked","organizationElement","organizationHandleClosed","organizationFilterValue","buildMenuItems","state","find","favoritedCourse","c","handleSearchChange","bind","handleSearchClicked","activeCourses","courses","routeClicked","e","searchValueLowerCase","toLowerCase","this","includes","FirebaseService","enrolled","history","listItems","Grid","s","class","container","spacing","Component","withRouter","LoginPage","redirectToReferrer","loginGoogle","loginFacebook","completeLogin","loadingUser","CircularProgress","from","location","pathname","CoursesDropdownComponent","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","xs","md","List","dense","ListItem","RouterLink","includeEditIcon","CurrentCoursesComponent","currentCourses","EnrolledCoursesComponent","SavedCoursesComponent","savedCourses","CreatedCoursesComponent","createdCourses","MyCourses","setUser","useEffect","courseComponentList","hasCourses","CssBaseline","Container","Paper","EditDialog","Dialog","isOpen","handleClose","aria-labelledby","DialogTitle","field","DialogContent","DialogContentText","autoFocus","margin","fullWidth","DialogActions","handleSubmit","userKeyToDisplayMap","UserProfileSection","align","displayValue","isEditable","openDialog","isDialogOpen","displayKey","setDisplayName","oldDisplayName","setOldDiplayName","isDisplayNameDialogOpen","setIsDisplayNameDialogOpen","userInterests","setUserInterests","oldUserInterests","setOldUserInterests","isUserInterestsDialogOpen","setIsUserInterestsDialogOpen","res","interests","err","Divider","CreateCourseDialog","setDescription","setTitle","editorState","setEditorState","setOverview","isTitleError","setIsTitleError","isDescriptionError","setIsDescriptionError","setThumbnailFile","EditorState","createWithContent","convertFromRaw","parse","createEmpty","required","Input","file","files","helperText","editorClassName","handleKeyCommand","command","newState","RichUtils","convertToRaw","getCurrentContent","onEditorStateChange","titleIsGood","descriptionIsGood","currentContentState","courseDetails","CreateCourse","isCreateCourseDialogOpen","setIsCreateCourseDialogOpen","useHistory","updateCourses","currnetCoursesSection","CourseChapterPanel","addNewLessonButton","lessonItems","isActiveLesson","activeLesson","selected","setChapterInContext","setActiveLesson","listItemClicked","button","ListItemText","primary","editable","openLessonModal","defaultExpanded","chapterInContext","CourseNavigationPane","addNewChapterButton","deleteCourseButton","courseNavigationPanels","openCreateChapterDialog","openDeleteDialog","size","YoutubeComponentConfig","opts","height","playerVars","autoplay","videoId","EditCourseLesson","hasYoutubeVideo","goToPreviousLesson","navigateToPreviousLesson","goToNextLesson","navigateToNextLesson","str","isJson","contentStateObj","toolbarHidden","readOnly","text","ContentState","createFromText","youtubeConfig","url","video","myParamters","split","searchParams","URLSearchParams","getVideoConfig","onReady","pauseVideo","isFirstLesson","isLastLesson","nextLesson","nextChapter","leftButton","endIcon","prevLesson","prevChapter","rightButton","startIcon","getButtonDiv","CourseOverviewPane","openEditCourseOverviewDialogButton","editLessonButton","lessonArray","i","j","openEditCourseOverviewDialog","enrolledButtonText","currentLessonIndex","indexOf","currentLessonIndexInChapter","activeChapter","numLessonsInChapter","numChapters","activeChapterIndex","getLessonInformation","indexOfCurrentLesson","addCompletedLesson","CreateChapterDialog","CreateLessonDialog","setVideo","isYoutubeError","setIsYoutubeError","wrapperClassName","descriptionJSON","tempVideo","DeleteDialog","aria-describedby","deleteType","dialogs","viewPublishedCourseButton","useParams","setCourse","isCreateChapterDialogOpen","setIsCreateChapterDialogOpen","isCreateLessonDialogOpen","setIsCreateLessonDialogOpen","isEditCourseOverviewDialogOpen","setIsEditCourseOverviewDialogOpen","isDeleteDialogOpen","setIsDeleteDialogOpen","addLesson","setAddLesson","setDeleteType","objToDelete","setObjToDelete","openCreateLessonDialog","setDeletingCourse","resolveLessons","results","resolve","resolveChapters","isDeletingCourse","updatedLesson","buttonTheme","createMuiTheme","palette","main","secondary","typography","useNextVariants","overrides","MuiButton","textTransform","light","dark","App","myCourseSelected","allCoursesSelected","createCourseSelected","fetchCourses","fetchUsers","render","getUserOnLoad","deletingCourse","some","trim","startsWith","cookieValue","replace","PrivateRoute","isLoggedIn","browserRouteChanged","hidden","exact","path","window","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.a27456a8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/placeholder.fa9f1a41.png\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { Button } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom'\r\nimport FavoriteBorderOutlinedIcon from '@material-ui/icons/FavoriteBorderOutlined';\r\nimport './CourseCard.css';\r\nimport placeholder from './placeholder.png';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    maxWidth: 345,\r\n    minWidth: 345,\r\n    maxHeight: 400,\r\n    minHeight: 400,\r\n    position: 'relative',\r\n  },\r\n  media: {\r\n    paddingTop: '56.25%', // 16:9\r\n    maxWidth: '50%',\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\"\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n  actionsRow: {\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    left: 0,\r\n\r\n    \"& > *\": {\r\n      width: '10em',\r\n    }\r\n  },\r\n  content: {\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis',\r\n    display: '-webkit-box',\r\n    WebkitLineClamp: '2',\r\n    WebkitBoxOrient: 'vertical',\r\n  }\r\n}));\r\n\r\nexport default function CourseCard(props) {\r\n  const classes = useStyles();\r\n  const [isFavorited, setIsFavorited] = React.useState(false)\r\n  const [isEnrolled, setisEnrolled] = React.useState(false)\r\n\r\n  if (props.isCourseAFavorite != isFavorited) {\r\n    setIsFavorited(props.isCourseAFavorite);\r\n  }\r\n\r\n  if (props.isCourseEnrolled != isEnrolled) {\r\n    setisEnrolled(props.isCourseEnrolled);\r\n  }\r\n\r\n  const favoriteButtonClicked = () => {\r\n    if (isFavorited) {\r\n      setIsFavorited(false);\r\n      props.removeFavoriteClicked(props.course);\r\n    } else {\r\n      setIsFavorited(true);\r\n      props.favoriteClicked(props.course);\r\n    }\r\n  }\r\n\r\n  const enrollClicked = () => {\r\n    props.enrollClicked(props.course);\r\n  };\r\n\r\n  return (\r\n    <Card variant=\"outlined\" className={classes.root}>\r\n      <CardHeader\r\n        title={props.course.title}\r\n        subheader={props.course.owner.displayName ? props.course.owner.displayName : props.course.owner.name}\r\n        action={\r\n          <IconButton aria-label=\"add to favorites\" onClick={favoriteButtonClicked}>\r\n            {isFavorited ? <FavoriteIcon /> : <FavoriteBorderOutlinedIcon />}\r\n          </IconButton>\r\n        }\r\n      />\r\n      <CardMedia\r\n        className={classes.media}\r\n        image={props.course.thumbnailUrl ? props.course.thumbnailUrl : placeholder}\r\n      />\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" className={classes.content}>\r\n          {props.course.description}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions className={classes.actionsRow} >\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          component={Link}\r\n          to={`/courseOverview/${props.course.id}`}\r\n        >\r\n          Overview\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={enrollClicked}\r\n        >\r\n          {isEnrolled ? \"Continue\" : \"Enroll\"}\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}","import React from 'react';\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { IconButton } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport './SearchBar.css';\r\n\r\nfunction SearchBar(props) {\r\n  return (\r\n    <div className=\"search-bar\">\r\n      <TextField value={props.searchValue} onChange={props.onChange} id=\"outlined-search\" type=\"search\" variant=\"outlined\" color=\"secondary\" />\r\n      <IconButton className=\"menu-button\" onClick={props.onSearchClicked}>\r\n        <SearchIcon className=\"search-bar-icon\" />\r\n      </IconButton>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchBar\r\n\r\n\r\n","import React from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\n\r\nfunction CourseLibraryToolbarMenuItem(props){\r\n    return (\r\n      <FormControlLabel value={props.value} control={<Radio />} label={props.value} />\r\n    )\r\n  }\r\n\r\n  export default CourseLibraryToolbarMenuItem","import React from 'react';\r\n\r\nimport Menu from '@material-ui/core/Menu';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport CourseLibraryToolbarMenuItem from './CourseLibraryToolbarMenuItem/CourseLibraryToolbarMenuItem.component';\r\n\r\n\r\n\r\nfunction CourseLibraryToolbarMenu(props){\r\n\r\n  let menuItems = props.options.map( option => {\r\n    return (\r\n      <CourseLibraryToolbarMenuItem\r\n        handleClick={option.associatedClickFunction}\r\n        value={option.display}>\r\n      </CourseLibraryToolbarMenuItem>\r\n    )\r\n  })\r\n\r\n  const onChangeFunction = (event) => {\r\n    props.closeFunction(event.target.value)\r\n  }\r\n\r\n    return (\r\n      <Menu\r\n          id={props.menuId}\r\n          anchorEl={props.element}\r\n          keepMounted\r\n          open={Boolean(props.element)}\r\n          onClose={props.closeFunction}\r\n        >\r\n          <MenuItem>\r\n            <FormControl component=\"fieldset\">\r\n            <FormLabel component=\"legend\">{props.menuLabel}</FormLabel>\r\n            <RadioGroup aria-label=\"gender\" name={props.radioGroupName} value={props.menuValue} onChange={onChangeFunction}>\r\n              {menuItems}\r\n            </RadioGroup>\r\n            </FormControl>\r\n          </MenuItem>\r\n      </Menu>\r\n    )\r\n  }\r\n\r\n  export default CourseLibraryToolbarMenu","import React from 'react';\r\n\r\nimport {AppBar, Toolbar, IconButton, Typography } from '@material-ui/core';\r\nimport {Button} from '@material-ui/core';\r\n\r\nimport SearchBar from './SearchBar/SearchBar.component';\r\nimport CourseLibraryToolbarMenu from './CourseLibraryToolbarMenu/CourseLibraryToolbarMenu.component'\r\n\r\n\r\n//<CourseLibraryMenu handleClose={this.handleClose} sortByElement={props.state.sortByElement}></CourseLibraryMenu>\r\n\r\n\r\nfunction CourseLibraryToolbar(props){\r\n\r\n    let menuButtons = props.menuItems.map(menuItem => {\r\n        return (\r\n            <Button\r\n                color=\"inherit\" \r\n                className=\"menu-button\"\r\n                onClick={menuItem.clickedFunction}\r\n            >\r\n                {menuItem.buttonText}\r\n            </Button>\r\n        )\r\n    })\r\n\r\n    let menus = props.menuItems.map(menuItem => {\r\n        return(\r\n            <CourseLibraryToolbarMenu\r\n                element={menuItem.element}\r\n                closeFunction = {menuItem.closeFunction}\r\n                options={menuItem.menuOptions}\r\n                menuId={menuItem.menuId}\r\n                menuLabel={menuItem.buttonText}\r\n            >\r\n            </CourseLibraryToolbarMenu>\r\n        )\r\n    })\r\n\r\n    return(\r\n        <AppBar position=\"static\" className=\"course-library-app-bar\">\r\n            <Toolbar>\r\n                {menuButtons}\r\n                <SearchBar searchValue={props.searchInfo.value} onChange={props.searchInfo.onChange} onSearchClicked={props.searchInfo.onClick}></SearchBar>\r\n            </Toolbar>\r\n            {menus}\r\n      </AppBar>\r\n    )\r\n}\r\n\r\nexport default CourseLibraryToolbar","import firebase from 'firebase'\r\n\r\n\r\n/**\r\n * Firebase Set Up\r\n */\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyA8tAHYGUiNkFHq6452W4Qr79eibVmtRZA\",\r\n    authDomain: \"mooc-in-a-box.firebaseapp.com\",\r\n    databaseURL: \"https://mooc-in-a-box.firebaseio.com\",\r\n    projectId: \"mooc-in-a-box\",\r\n    storageBucket: \"mooc-in-a-box.appspot.com\",\r\n    messagingSenderId: \"594314585164\",\r\n    appId: \"1:594314585164:web:3ae152452d1c238af100e9\",\r\n    measurementId: \"G-LXH34JCXZS\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nconst db = firebase.firestore();\r\nvar storageRef = firebase.storage().ref();\r\n\r\n\r\n\r\n/*\r\n* -----------------------------------------------------------\r\n*  USER Functions\r\n* -----------------------------------------------------------\r\n*/\r\n\r\nexport const getUserById = userId => {\r\n    return db.collection('Users').doc(userId).get();\r\n}\r\n\r\nexport const getAllUsers = () => {\r\n    return db.collection('Users').get();\r\n}\r\n\r\nexport const updateUser = async (userId, updates) => {\r\n    return db.collection('Users')\r\n        .doc(userId)\r\n        .set(updates, { merge: true })\r\n}\r\n\r\nexport const createUser = async (userAuth) => {\r\n    return db.collection('Users')\r\n        .doc(userAuth.uid)\r\n        .set({\r\n            id: userAuth.uid,\r\n            name: userAuth.displayName,\r\n            photoURL: userAuth.photoURL,\r\n            email: userAuth.email,\r\n        },\r\n            { merge: true }\r\n        )\r\n}\r\n\r\nexport const getCurrentUser = () => {\r\n    var user = firebase.auth().currentUser;\r\n    if (user) {\r\n        return user;\r\n    } else {\r\n        return undefined;\r\n    }\r\n}\r\n\r\nexport const deleteUser = async () => {\r\n    var user = firebase.auth().currentUser;\r\n\r\n    return await user.delete().then(function () {\r\n        document.cookie = 'userid=; expires=Thu, 01 Jan 1970 00:00:01 GMT;';\r\n        return true;\r\n    }).catch(function (error) {\r\n        return false;\r\n    });\r\n}\r\n\r\n\r\n\r\n/*\r\n* -----------------------------------------------------------\r\n*  Course Functions\r\n* -----------------------------------------------------------\r\n*/\r\n\r\nexport const getCourseById = courseId => {\r\n    return db.collection('Course')\r\n        .doc(courseId)\r\n        .get()\r\n        .then(async courseResult => {\r\n            if (courseResult.exists) {\r\n                const course = courseResult.data();\r\n                course.id = courseId;\r\n                return course;\r\n            } else {\r\n                return null\r\n            }\r\n        });\r\n};\r\n\r\nexport const getAllCourses = () => {\r\n    return db.collection('Course').get();\r\n}\r\n\r\n\r\nexport const addImage = (courseId, imageFile) => {\r\n    const courseImageRef = storageRef.child(`images/courses/${courseId}/${imageFile.name}`);\r\n    return courseImageRef.put(imageFile);\r\n}\r\n\r\nexport const getImageUrl = (courseId, imageFile) => {\r\n    const courseImageRef = storageRef.child(`images/courses/${courseId}/${imageFile.name}`);\r\n    return courseImageRef.getDownloadURL();\r\n\r\n}\r\n\r\nexport const createCourse = async (user, courseInfo) => {\r\n    const userDocRef = db.doc(`Users/${user.id}`)\r\n\r\n    const newCourseObj = {\r\n        owner: userDocRef,\r\n        title: courseInfo.title,\r\n        description: courseInfo.description,\r\n        chapters: courseInfo.chapters\r\n    }\r\n\r\n    if (courseInfo.overview) {\r\n        newCourseObj.overview = JSON.stringify(courseInfo.overview)\r\n    }\r\n\r\n    // Create Course\r\n    return await db.collection('Course').add(newCourseObj)\r\n        .then(async courseDoc => {\r\n\r\n            let usersCreatedCourses;\r\n            if (user.createdCoursesRefs && user.createdCoursesRefs.length > 0) {\r\n                usersCreatedCourses = user.createdCoursesRefs;\r\n            } else {\r\n                usersCreatedCourses = []\r\n            }\r\n            const courseRef = db.doc(`Course/${courseDoc.id}`)\r\n            usersCreatedCourses.push(courseRef);\r\n\r\n\r\n            // Check If Image Was Included\r\n            if (courseInfo.thumbnailFile) {\r\n                // Upload Image\r\n                return await addImage(courseDoc.id, courseInfo.thumbnailFile)\r\n                    .then(async imageRef => {\r\n\r\n                        return await getImageUrl(courseDoc.id, courseInfo.thumbnailFile)\r\n                            .then(async imageUrl => {\r\n                                const courseUpdate = {\r\n                                    thumbnailUrl: imageUrl\r\n                                };\r\n\r\n                                return await updateCourse(courseDoc.id, courseUpdate)\r\n                                    .then(async courseDocWithImage => {\r\n                                        const updateObject = {\r\n                                            createdCoursesRefs: usersCreatedCourses\r\n                                        }\r\n\r\n                                        return await updateUser(user.id, updateObject);\r\n                                    })\r\n                            })\r\n                    });\r\n            } else {\r\n                // No Image\r\n                const updateObject = {\r\n                    createdCoursesRefs: usersCreatedCourses\r\n                }\r\n                return await updateUser(user.id, updateObject);\r\n            }\r\n        })\r\n}\r\n\r\nexport const favoriteCourse = async (user, courseInfo) => {\r\n    const courseRef = db.doc(`Course/${courseInfo.id}`)\r\n    let favoritedCourses;\r\n\r\n    if (user.favoritedCoursesRefs && user.favoritedCoursesRefs.length > 0) {\r\n        favoritedCourses = user.favoritedCoursesRefs;\r\n    } else {\r\n        favoritedCourses = []\r\n    }\r\n\r\n    favoritedCourses.push(courseRef);\r\n\r\n    const updateObject = {\r\n        favoritedCoursesRefs: favoritedCourses\r\n    }\r\n\r\n    return await updateUser(user.id, updateObject);\r\n}\r\n\r\nexport const removeFavoriteCourse = async (user, courseInfo) => {\r\n    const favoritedCourses = user.favoritedCoursesRefs.filter(item => item.id !== courseInfo.id);\r\n    const updateObject = {\r\n        favoritedCoursesRefs: favoritedCourses\r\n    }\r\n\r\n    return await updateUser(user.id, updateObject);\r\n}\r\n\r\n\r\nexport const enrollInCourse = async (user, courseInfo) => {\r\n    const courseRef = db.doc(`Course/${courseInfo.id}`)\r\n    let enrolledCourses;\r\n\r\n    if (user.enrolledCoursesRefs && user.enrolledCoursesRefs.length > 0) {\r\n        enrolledCourses = user.enrolledCoursesRefs;\r\n    } else {\r\n        enrolledCourses = []\r\n    }\r\n\r\n    enrolledCourses.push(courseRef);\r\n\r\n    const updateObject = {\r\n        enrolledCoursesRefs: enrolledCourses\r\n    }\r\n\r\n    return await updateUser(user.id, updateObject);\r\n}\r\n\r\nexport const unenrollInCourse = async (user, courseInfo) => {\r\n    const enrolledCourses = user.enrolledCoursesRefs.filter(item => item.id !== courseInfo.id);\r\n    const updateObject = {\r\n        enrolledCoursesRefs: enrolledCourses\r\n    }\r\n\r\n    return await updateUser(user.id, updateObject);\r\n}\r\n\r\n\r\nexport const updateCourse = async (courseId, updates) => {\r\n\r\n    if (updates.overview) {\r\n        updates.overview = JSON.stringify(updates.overview);\r\n    }\r\n\r\n    if (updates.thumbnailFile) {\r\n        return await addImage(courseId, updates.thumbnailFile)\r\n            .then(async imageRef => {\r\n\r\n                return await getImageUrl(courseId, updates.thumbnailFile)\r\n                    .then(async imageUrl => {\r\n\r\n                        delete updates.thumbnailFile;\r\n                        updates.thumbnailUrl = imageUrl\r\n\r\n                        return db.collection('Course')\r\n                            .doc(courseId)\r\n                            .set(updates, { merge: true });\r\n                    })\r\n            })\r\n    } else {\r\n        return db.collection('Course')\r\n            .doc(courseId)\r\n            .set(updates, { merge: true });\r\n    }\r\n}\r\n\r\n\r\nconst deleteCourseInFirebase = async (courseId) => {\r\n\r\n    return db.collection('Course').doc(courseId).delete().then(async courseDeletedResult => {\r\n        return await getAllUsers().then(async (queryResults) => {\r\n            const updateUsersPromises = []\r\n\r\n            queryResults.forEach((doc) => {\r\n                let updateUser = false;\r\n                const user = doc.data();\r\n                user.id = doc.id;\r\n                // const createdCoursesRefLength =  user.createdCoursesRefs?.length();\r\n                // const favoritedCourseRefs = user.favoritedCoursesRefs?.length();\r\n\r\n                if (user.createdCoursesRefs && user.createdCoursesRefs.length > 0) {\r\n                    const createdCoursesRefLength = user.createdCoursesRefs.length;\r\n                    user.createdCoursesRefs = user.createdCoursesRefs.filter(courseRef => courseRef.id !== courseId);\r\n                    if (user.createdCoursesRefs.length !== createdCoursesRefLength) {\r\n                        updateUser = true;\r\n                    }\r\n                }\r\n\r\n                if (user.favoritedCourseRefs && user.favoritedCourseRefs.length > 0) {\r\n                    const favoritedCourseRefs = user.favoritedCoursesRefs.length;\r\n                    user.favoritedCourseRefs = user.favoritedCoursesRefs.filter(courseRef => courseRef.id !== courseId);\r\n                    if (user.favoritedCourseRefs.length !== favoritedCourseRefs) {\r\n                        updateUser = true;\r\n                    }\r\n                }\r\n\r\n                if (user.enrolledCourseRefs && user.enrolledCourseRefs.length > 0) {\r\n                    const enrolledCourseRefs = user.enrolledCoursesRefs.length;\r\n                    user.enrolledCourseRefs = user.enrolledCoursesRefs.filter(courseRef => courseRef.id !== courseId);\r\n                    if (user.enrolledCourseRefs.length !== enrolledCourseRefs) {\r\n                        updateUser = true;\r\n                    }\r\n                }\r\n\r\n                if (updateUser) {\r\n                    updateUsersPromises.push(db.collection('Users').doc(user.id).set(user, { merge: true }));\r\n                }\r\n            })\r\n\r\n            return await Promise.all(updateUsersPromises);\r\n        })\r\n    });\r\n}\r\n\r\n\r\nconst deleteAllChapters = async (course) => {\r\n    const arrayOfLessonPromises = [];\r\n    let deleteLessons = false;\r\n    for (const chapter of course.chapters) {\r\n        if (chapter.lessonsRef?.length > 0) {\r\n            deleteLessons = true;\r\n            break;\r\n        }\r\n    }\r\n    if (deleteLessons) {\r\n        // var batch = firebase.firestore().batch()\r\n\r\n        db.collection(`/Course/${course.id}/Lessons`).get()\r\n            .then(queryResults => {\r\n                // values.map(val => {\r\n                //     batch.delete(val)\r\n                // })\r\n                queryResults.forEach(doc => {\r\n                    arrayOfLessonPromises.push(\r\n                        db.collection(`/Course/${course.id}/Lessons/`).doc(doc.id).delete()\r\n                    )\r\n                })\r\n            })\r\n\r\n        return await Promise.all(arrayOfLessonPromises);\r\n    }\r\n}\r\n\r\n// const deleteChapter = async (course, chapter) => {\r\n//     db.collection(`/Course/${course.id}/`)\r\n// }\r\n\r\n\r\n\r\nexport const deleteCourse = async (course) => {\r\n\r\n    if (course.chapters?.length > 0) {\r\n        await deleteAllChapters(course)\r\n    }\r\n    return await deleteCourseInFirebase(course.id);\r\n}\r\n\r\n\r\n/*\r\n* !!!!!!!!\r\n* Course Attributes Section\r\n* !!!!!!!!\r\n*/\r\nexport const updateCourseOverview = async (course, content) => {\r\n    const contentJSON = JSON.stringify(content);\r\n\r\n    const updateObject = {\r\n        overview: contentJSON\r\n    }\r\n\r\n    return await updateCourse(course.id, updateObject);\r\n}\r\n\r\nexport const addNewChapter = async (course, newChapterInfo) => {\r\n    const chapter = {}\r\n    chapter.title = newChapterInfo.title;\r\n    chapter.description = newChapterInfo.description;\r\n    chapter.id = 0\r\n    chapter.lessonsRef = [];\r\n\r\n    if (course.chapters && course.chapters.length > 0) {\r\n        chapter.id = course.chapters.length;\r\n        course.chapters.push(chapter);\r\n    } else {\r\n        course.chapters = [];\r\n        course.chapters.push(chapter);\r\n    }\r\n\r\n    const updateObject = {\r\n        chapters: course.chapters\r\n    }\r\n\r\n    return await updateCourse(course.id, updateObject);\r\n\r\n}\r\n\r\nexport const updateLesson = async (course, chapterInfo, lessonInfo, add) => {\r\n    if (add) { // For initial lesson creation.\r\n        delete lessonInfo.id; // cuz undefined is not allowed\r\n        return await db.collection('Course').doc(course.id).collection('Lessons').add(lessonInfo)\r\n            .then(async lessonDoc => {\r\n                const lessonRef = db.doc(`Course/${course.id}/Lessons/${lessonDoc.id}`);\r\n                const chapters = course.chapters.map(chapter => {\r\n                    if (chapter === chapterInfo) {\r\n                        chapter.lessonsRef.push(lessonRef);\r\n                    }\r\n                    return chapter\r\n                });\r\n\r\n                const updateObject = {\r\n                    chapters\r\n                }\r\n                return await updateCourse(course.id, updateObject)\r\n            });\r\n    } else {\r\n        const lessonRef = db.doc(`Course/${course.id}/Lessons/${lessonInfo.id}`);\r\n        return await lessonRef.set(lessonInfo, { merge: true });\r\n    }\r\n}\r\n\r\nexport const deleteLesson = async (course, chapter, lesson) => {\r\n\r\n    const courseChapters = course.chapters.map(chapterInside => {\r\n        if (chapterInside.title === chapter.title) {\r\n            const lessonsRefs = [];\r\n            chapterInside.lessonsRef.forEach(lessonRef => {\r\n                if (lessonRef.id !== lesson.id) {\r\n                    lessonsRefs.push(lessonRef);\r\n                }\r\n            })\r\n            chapterInside.lessonsRef = lessonsRefs;\r\n\r\n            const lessons = []\r\n            chapterInside.lessons.forEach(lessonInside => {\r\n                if (lessonInside.id !== lesson.id) {\r\n                    lessons.push(lessonInside);\r\n                }\r\n            })\r\n            chapterInside.lessons = lessons;\r\n        }\r\n        return chapterInside;\r\n    });\r\n\r\n\r\n    return await db.collection(`/Course/${course.id}/Lessons`).doc(lesson.id).delete().then(async result => {\r\n        return await updateCourse(course.id, {\r\n            chapters: courseChapters\r\n        });\r\n    });\r\n\r\n}\r\n\r\n\r\n/*\r\n* -----------------------------------------------------------\r\n*  Login Functions\r\n* -----------------------------------------------------------\r\n*/\r\n\r\nexport const logUserInUser = async (isGoog) => {\r\n    let provider;\r\n    isGoog ? provider = new firebase.auth.GoogleAuthProvider() :\r\n        provider = new firebase.auth.FacebookAuthProvider();\r\n    let users = [];\r\n    let currentUser = undefined;\r\n    let authUser = undefined;\r\n    // Get all users so we can see if the logged in one is one of ours.\r\n    // TODO(jessi): store this data so we don't need to fetch it, or directly ask for the user\r\n    // once they log in and if no user exists create one. Sounds like work.\r\n    await getAllUsers()\r\n        .then((queryResults) => {\r\n            queryResults.forEach((doc) => {\r\n                const user = doc.data();\r\n                user.id = doc.id;\r\n                users.push(user);\r\n            })\r\n        });\r\n\r\n    return await firebase.auth().signInWithPopup(provider).then(async function (result) {\r\n        authUser = result.user;\r\n        users.forEach(u => {\r\n            if (u.id === authUser.uid) {\r\n                currentUser = u;\r\n            }\r\n        });\r\n        // Didn't find an existing user.\r\n        if (currentUser === undefined) {\r\n            // Create new user\r\n            await createUser(authUser).then(async () => {\r\n                // Get the new user to return\r\n                return getCurrentUser();\r\n            }).catch(error => {\r\n                console.log(error);\r\n            });\r\n        }\r\n        return currentUser;\r\n    }).catch(function (error) {\r\n        console.log(error);\r\n    });\r\n}\r\n\r\nexport const signOut = async () => {\r\n    return await firebase.auth().signOut().then(function () {\r\n        document.cookie = 'userid=; expires=Thu, 01 Jan 1970 00:00:01 GMT;';\r\n        return true;\r\n    }).catch(function (error) {\r\n        console.log(error);\r\n        return false;\r\n    });\r\n}\r\n\r\n\r\n\r\n/*\r\n* -----------------------------------------------------------\r\n*  Utility Functions\r\n* -----------------------------------------------------------\r\n*/\r\n\r\nexport const getDocFromDocRef = docRef => {\r\n    return docRef.get()\r\n        .then(result => {\r\n            if (result.exists) {\r\n                const myResult = result.data();\r\n                myResult.id = result.id;\r\n                return myResult;\r\n            } else {\r\n                return null;\r\n            }\r\n        })\r\n}","import React from 'react';\r\nimport './CourseLibrary.css';\r\nimport CourseCard from '../CourseCard/CourseCard';\r\nimport { withRouter, Redirect } from \"react-router-dom\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CourseLibraryToolbar from './CourseLibraryToolbar/CourseLibraryToolbar.component'\r\n\r\nimport * as FirebaseService from '../../service/firebase.service';\r\n\r\n\r\nclass CourseLibrary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // Bind Search\r\n    this.handleSearchChange = this.handleSearchChange.bind(this);\r\n    this.handleSearchClicked = this.handleSearchClicked.bind(this);\r\n    // Bind Sort By\r\n    this.sortByClicked = this.sortByClicked.bind(this);\r\n    this.sortByHandleClose = this.sortByHandleClose.bind(this);\r\n    // Bind Topic\r\n    this.topicClicked = this.topicClicked.bind(this);\r\n    this.topicHandleClose = this.topicHandleClose.bind(this);\r\n    // Bind Organization\r\n    this.organizationClicked = this.organizationClicked.bind(this);\r\n    this.organizationHandleClosed = this.organizationHandleClosed.bind(this);\r\n\r\n    this.buildMenuItems = this.buildMenuItems.bind(this);\r\n    this.favoriteClicked = this.favoriteClicked.bind(this);\r\n    this.enrollClicked = this.enrollClicked.bind(this);\r\n    this.removeFavoriteClicked = this.removeFavoriteClicked.bind(this);\r\n    this.state = {\r\n      searchValue: \"\",\r\n      sortByElement: null,\r\n      topicElement: null,\r\n      organizationElement: null,\r\n      sortFilterValue: null,\r\n      topicFilterValue: null,\r\n      organizationFilterValue: null,\r\n      activeCourses: props.courses\r\n    }\r\n    props.routeClicked(\"Course Library\");\r\n  }\r\n\r\n  /** Search Function */\r\n  handleSearchChange(e) {\r\n    const searchValue = e.target.value;\r\n    const searchValueLowerCase = searchValue.toLowerCase();\r\n    const activeCourses = this.props.courses.filter(course =>\r\n      (course.title?.toLowerCase().includes(searchValueLowerCase)\r\n        || course.description?.toLowerCase().includes(searchValueLowerCase)\r\n        || course.owner.displayName?.toLowerCase().includes(searchValueLowerCase)\r\n      ))\r\n    this.setState({\r\n      searchValue,\r\n      activeCourses\r\n    })\r\n  }\r\n\r\n  handleSearchClicked(e) {\r\n  }\r\n\r\n  /** Sort By Functions */\r\n  sortByClicked = event => {\r\n    this.setState({\r\n      sortByElement: event.currentTarget\r\n    });\r\n  };\r\n\r\n  sortByHandleClose = (value) => {\r\n    this.setState({\r\n      sortByElement: null,\r\n      sortFilterValue: value\r\n    });\r\n  };\r\n\r\n\r\n  /** Topic Functions */\r\n  topicClicked = event => {\r\n    this.setState({\r\n      topicElement: event.currentTarget\r\n    });\r\n  };\r\n\r\n  topicHandleClose = (value) => {\r\n    this.setState({\r\n      topicElement: null,\r\n      topicFilterValue: value\r\n    });\r\n  };\r\n\r\n  /** Organization functions */\r\n  organizationClicked = event => {\r\n    this.setState({\r\n      organizationElement: event.currentTarget\r\n    });\r\n  };\r\n\r\n  organizationHandleClosed = (value) => {\r\n    this.setState({\r\n      organizationElement: null,\r\n      organizationFilterValue: value\r\n    });\r\n  };\r\n\r\n  async favoriteClicked(course) {\r\n    await FirebaseService.favoriteCourse(this.props.user, course);\r\n    this.props.updateUser(this.props.user.id)\r\n  }\r\n\r\n  async removeFavoriteClicked(course) {\r\n    await FirebaseService.removeFavoriteCourse(this.props.user, course);\r\n    this.props.updateUser(this.props.user.id)\r\n  }\r\n\r\n  async enrollClicked(course) {\r\n    let enrolled = false;\r\n    if (this.props.user.enrolledCourses) {\r\n      enrolled = this.props.user.enrolledCourses.find(c => {\r\n        return c.id === course.id;\r\n      })\r\n    }\r\n\r\n    if (enrolled) {\r\n      this.props.history.push(`/courseOverview/${course.id}`);\r\n      // TODO(jessi): go to most recent lesson\r\n    } else {\r\n      await FirebaseService.enrollInCourse(this.props.user, course);\r\n      this.props.updateUser(this.props.user.id);\r\n    }\r\n  }\r\n\r\n  buildMenuItems = () => {\r\n    const sortByInfo = {\r\n      buttonText: \"Sort By\",\r\n      menuId: \"menu-sort-by\",\r\n      clickedFunction: this.sortByClicked,\r\n      closeFunction: this.sortByHandleClose,\r\n      element: this.state.sortByElement,\r\n      radioGroupName: \"menuRadio\",\r\n      menuValue: this.state.sortFilterValue,\r\n      menuOptions: [\r\n        {\r\n          display: \"Newest\",\r\n          associatedClickFunction: this.sortByHandleClose\r\n        },\r\n        {\r\n          display: \"Recommended\",\r\n          associatedClickFunction: this.sortByHandleClose\r\n        },\r\n        {\r\n          display: \"Trending\",\r\n          associatedClickFunction: this.sortByHandleClose\r\n        }\r\n      ]\r\n    }\r\n\r\n    const topicInfo = {\r\n      buttonText: \"Topic\",\r\n      menuId: \"menu-topic\",\r\n      clickedFunction: this.topicClicked,\r\n      element: this.state.topicElement,\r\n      closeFunction: this.topicHandleClose,\r\n      radioGroupName: \"topicRadio\",\r\n      menuValue: this.state.topicFilterValue,\r\n      menuOptions: [\r\n        {\r\n          display: \"Science\",\r\n          associatedClickFunction: this.topicHandleClose\r\n        },\r\n        {\r\n          display: \"Technology\",\r\n          associatedClickFunction: this.topicHandleClose\r\n        },\r\n        {\r\n          display: \"History\",\r\n          associatedClickFunction: this.topicHandleClose\r\n        },\r\n        {\r\n          display: \"Arts\",\r\n          associatedClickFunction: this.topicHandleClose\r\n        }\r\n      ]\r\n    }\r\n\r\n    const organizationInfo = {\r\n      buttonText: \"Organization\",\r\n      menuId: \"menu-organization\",\r\n      clickedFunction: this.organizationClicked,\r\n      element: this.state.organizationElement,\r\n      closeFunction: this.organizationHandleClosed,\r\n      radioGroupName: \"organizationRadio\",\r\n      menuValue: this.state.organizationFilterValue,\r\n      menuOptions: [\r\n        {\r\n          display: \"Required\",\r\n          associatedClickFunction: this.organizationHandleClosed\r\n        },\r\n        {\r\n          display: \"Recommended\",\r\n          associatedClickFunction: this.organizationHandleClosed\r\n        },\r\n        {\r\n          display: \"All Courses\",\r\n          associatedClickFunction: this.organizationHandleClosed\r\n        }\r\n      ]\r\n    }\r\n\r\n    return [sortByInfo, topicInfo, organizationInfo];\r\n  }\r\n\r\n  isCourseAFavorite = (user, course) => {\r\n\r\n    if (user.favoritedCourses && user.favoritedCourses.length > 0) {\r\n      return user.favoritedCourses\r\n        .find(favoritedCourse => favoritedCourse.id === course.id);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  isCourseEnrolled = (user, course) => {\r\n\r\n    if (user.enrolledCourses && user.enrolledCourses.length > 0) {\r\n      return user.enrolledCourses.find(c => c.id === course.id);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  render() {\r\n    // Mappings\r\n    const menuItems = this.buildMenuItems();\r\n    const favoriteClicked = this.favoriteClicked;\r\n    const isCourseAFavorite = this.isCourseAFavorite;\r\n    const removeFavoriteClicked = this.removeFavoriteClicked\r\n    const enrollClicked = this.enrollClicked;\r\n    const isCourseEnrolled = this.isCourseEnrolled;\r\n\r\n    const user = this.props.user;\r\n    const searchInfo = {\r\n      value: this.state.searchValue,\r\n      onChange: this.handleSearchChange,\r\n      onClick: this.handleSearchClicked\r\n    }\r\n    let listItems = []\r\n    if (user) {\r\n\r\n      listItems = this.state.activeCourses.map(function (item) {\r\n        return (\r\n          <Grid item s={4}>\r\n            <CourseCard course={item} enrollClicked={enrollClicked} isCourseEnrolled={isCourseEnrolled(user, item)} favoriteClicked={favoriteClicked} removeFavoriteClicked={removeFavoriteClicked} isCourseAFavorite={isCourseAFavorite(user, item)}></CourseCard>\r\n          </Grid>\r\n        );\r\n      });\r\n    }\r\n\r\n    return (\r\n      <div class=\"course-library\">\r\n        <CourseLibraryToolbar menuItems={menuItems} searchInfo={searchInfo}></CourseLibraryToolbar>\r\n        <div className=\"course-list\">\r\n          <Grid container spacing={3}>\r\n            {listItems}\r\n          </Grid>\r\n        </div>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(CourseLibrary);\r\n","import React from 'react';\r\nimport './Login.css';\r\nimport { Button } from '@material-ui/core';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { withRouter, Redirect } from \"react-router-dom\";\r\nimport * as FirebaseService from '../../service/firebase.service';\r\n\r\nclass LoginPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { redirectToReferrer: false };\r\n    this.loginGoogle = this.loginGoogle.bind(this);\r\n    this.loginFacebook = this.loginFacebook.bind(this);\r\n\r\n  }\r\n\r\n  async loginGoogle(event) {\r\n    // TODO(jessi): set a loading state\r\n    await FirebaseService.logUserInUser(/* isGoog= */ true).then(u => {\r\n      this.props.completeLogin(u);\r\n      this.props.history.push(\"/courseLibrary\");\r\n      this.setState({ redirectToReferrer: true });\r\n    });\r\n    // TODO(jessi): unset loading state\r\n  }\r\n\r\n  async loginFacebook(event) {\r\n    // TODO(jessi): set a loading state\r\n    await FirebaseService.logUserInUser(/* isGoog= */ false).then(u => {\r\n      this.props.completeLogin(u);\r\n      this.props.history.push(\"/courseLibrary\");\r\n      this.setState({ redirectToReferrer: true });\r\n    });\r\n    // TODO(jessi): unset loading state\r\n  }\r\n\r\n  render() {\r\n    // Show loading screen while we load the user.\r\n    if (this.props.loadingUser) {\r\n      return (\r\n        <div>\r\n          Loading..\r\n          <CircularProgress></CircularProgress>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    // Redirect if logged in or complete login.\r\n    const { from } = this.props.location.state || { from: { pathname: '/' } }\r\n    const { redirectToReferrer } = this.state\r\n    if (redirectToReferrer === true || this.props.user) {\r\n      return <Redirect to={from} />\r\n    }\r\n\r\n\r\n    // TODO(jessi): style these buttons\r\n    return (\r\n      <div className=\"login\">\r\n        <h1>Sign into Mooc in a Box</h1>\r\n        <Button color=\"inherit\" className=\"menu-button\" onClick={this.loginFacebook}>\r\n          Sign in with Facebook\r\n      </Button>\r\n        <Button color=\"inherit\" className=\"menu-button\" onClick={this.loginGoogle}>\r\n          Sign in with Google\r\n      </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(LoginPage);\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Link as RouterLink,\r\n} from \"react-router-dom\";\r\nimport { Button } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { IconButton } from '@material-ui/core';\r\nimport './CoursesDropdown.css';\r\n\r\nfunction CoursesDropdownComponent(props) {\r\n  return (\r\n    <ExpansionPanel>\r\n      <ExpansionPanelSummary\r\n        expandIcon={<ExpandMoreIcon />}\r\n        aria-controls=\"panel1a-content\"\r\n        id=\"panel1a-header\"\r\n      >\r\n        <Typography variant=\"subtitle2\">{props.courses.length} Course(s)</Typography>\r\n      </ExpansionPanelSummary>\r\n      <ExpansionPanelDetails>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} md={6}>\r\n            <div>\r\n              <List dense=\"true\">\r\n                {\r\n                  props.courses.map(course => {\r\n                    return (\r\n                      <span>\r\n                        <ListItem\r\n                        >\r\n                          <Button id=\"course-link\"\r\n                            component={RouterLink}\r\n                            to={`/courseOverview/${course.id}`}\r\n                          >\r\n                            {course.title}\r\n                          </Button>\r\n                          {props.includeEditIcon &&\r\n                            <IconButton id=\"edit-button\"\r\n                              className=\"menu-button\"\r\n                              color=\"inherit\"\r\n                              aria-label=\"menu\"\r\n                              component={RouterLink}\r\n                              to={`/editCourse/${course.id}`}\r\n                            >\r\n                              <EditIcon />\r\n                            </IconButton>\r\n                          }\r\n                        </ListItem>\r\n                      </span>\r\n\r\n                    )\r\n                  })\r\n                }\r\n              </List>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </ExpansionPanelDetails>\r\n    </ExpansionPanel>\r\n  )\r\n}\r\n\r\nexport default CoursesDropdownComponent;\r\n","import React, { useState } from 'react';\r\nimport './MyCourses.css';\r\nimport {\r\n  Link as RouterLink,\r\n} from \"react-router-dom\";\r\nimport { Button } from '@material-ui/core';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { IconButton } from '@material-ui/core';\r\n\r\nimport CoursesDropdownComponent from '../CoursesDropdown/CoursesDropdown.component';\r\n\r\n\r\n\r\n/**\r\n * \r\n * http://localhost:3000/courseOverview/rlfxOavBn4nPZLNTRMkL\r\n * http://localhost:3000/courseOverview/rlfxOavBn4nPZLNTRMkL\r\n */\r\n\r\n\r\nfunction generate(element) {\r\n  return React.cloneElement(element, {\r\n    key: element,\r\n  })\r\n}\r\n\r\nfunction CurrentCoursesComponent(props) {\r\n  let numberOfCourses = props.currentCourses.length;\r\n\r\n  return (\r\n    <div>\r\n      <h2> Current Courses </h2>\r\n      <CoursesDropdownComponent courses={props.currentCourses}></CoursesDropdownComponent>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nfunction EnrolledCoursesComponent(props) {\r\n  return (\r\n    <div>\r\n      <h2> Current Courses </h2>\r\n      <CoursesDropdownComponent courses={props.enrolledCourses}></CoursesDropdownComponent>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction SavedCoursesComponent(props) {\r\n  return (\r\n    <div>\r\n      <h2> Favorited Courses </h2>\r\n      <CoursesDropdownComponent courses={props.savedCourses}></CoursesDropdownComponent>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction CreatedCoursesComponent(props) {\r\n  return (\r\n    <div>\r\n      <h2> Created Courses </h2>\r\n      <CoursesDropdownComponent courses={props.createdCourses} includeEditIcon={true}></CoursesDropdownComponent>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nfunction MyCourses(props) {\r\n\r\n  const [user, setUser] = useState();\r\n  props.routeClicked(\"My Courses\");\r\n\r\n\r\n  React.useEffect(() => {\r\n    setUser(props.user);\r\n  }, [props]);\r\n\r\n\r\n  if (user) {\r\n    const courseComponentList = []\r\n    let hasCourses = false;\r\n\r\n\r\n    if (user.currentCourses && user.currentCourses.length > 0) {\r\n      const element = <CurrentCoursesComponent currentCourses={user.currentCourses}></CurrentCoursesComponent>\r\n      courseComponentList.push(element);\r\n      hasCourses = true;\r\n    }\r\n\r\n    if (user.enrolledCourses && user.enrolledCourses.length > 0) {\r\n      const element = <EnrolledCoursesComponent enrolledCourses={user.enrolledCourses}></EnrolledCoursesComponent>\r\n      courseComponentList.push(element);\r\n      hasCourses = true;\r\n\r\n    }\r\n\r\n    if (user.favoritedCourses && user.favoritedCourses.length > 0) {\r\n      const element = <SavedCoursesComponent savedCourses={user.favoritedCourses}></SavedCoursesComponent>\r\n      courseComponentList.push(element);\r\n      hasCourses = true;\r\n\r\n    }\r\n\r\n    if (user.createdCourses && user.createdCourses.length > 0) {\r\n      const element = <CreatedCoursesComponent createdCourses={user.createdCourses}></CreatedCoursesComponent>\r\n      courseComponentList.push(element);\r\n      hasCourses = true;\r\n\r\n    }\r\n    if (hasCourses) {\r\n      return (\r\n        <div className=\"MyCourses\">\r\n          <CssBaseline />\r\n          <Container maxWidth=\"lg\">\r\n            <Paper className=\"paper\">\r\n              {\r\n                courseComponentList.map(element => element)\r\n              }\r\n            </Paper>\r\n          </Container>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"MyCourses\">\r\n          <CssBaseline />\r\n          <Container maxWidth=\"lg\">\r\n            <Paper className=\"paper\">\r\n              <h4>You don't have any courses saved yet!</h4>\r\n            </Paper>\r\n          </Container>\r\n        </div>\r\n      )\r\n    }\r\n\r\n\r\n  } else {\r\n    return (\r\n      <div>\r\n        Loading..\r\n        <CircularProgress></CircularProgress>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default MyCourses;\r\n","import React from 'react';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { Button } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nfunction EditDialog(props) {\r\n  return (\r\n    <div>\r\n      <Dialog open={props.isOpen} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">{props.field}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Edit the Field below to update your {props.field}\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label={props.field}\r\n            value={props.value}\r\n            onChange={props.onChange}\r\n            type=\"email\"\r\n            color=\"secondary\"\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={props.handleClose} color=\"secondary\">\r\n            Cancel\r\n            </Button>\r\n          <Button onClick={props.handleSubmit} color=\"secondary\">\r\n            Submit\r\n            </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditDialog","import React from 'react';\r\n\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { IconButton } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport EditDialog from '../EditDialog/EditDialog.component';\r\n\r\nconst userKeyToDisplayMap = {\r\n    \"displayName\": \"Display Name\",\r\n    \"email\": \"Email Address\",\r\n    \"password\": \"Password\"\r\n  }\r\n\r\nfunction UserProfileSection(props){\r\n    function getEditIconIfNecessary(){\r\n      return props.isEditable ? \r\n        <IconButton className=\"menu-button\" color=\"inherit\" aria-label=\"menu\">\r\n          <EditIcon onClick={props.openDialog}/>\r\n        </IconButton>\r\n        :\r\n        <div></div>\r\n    }\r\n\r\n\r\n    return (\r\n      <div>\r\n        <Typography align=\"center\" variant=\"h6\" component=\"h6\">\r\n          <strong>{props.displayValue}</strong>\r\n        </Typography>\r\n        <Typography align=\"center\" variant=\"body1\" component=\"body1\">\r\n          <span>\r\n            {props.value}\r\n            {getEditIconIfNecessary()}\r\n          </span>\r\n        </Typography>\r\n        <EditDialog \r\n          isOpen={props.isDialogOpen}\r\n          handleClose={props.handleClose}\r\n          handleSubmit={props.handleSubmit}\r\n          field={userKeyToDisplayMap[props.displayKey]}\r\n          value={props.value}\r\n          onChange={props.onChange}\r\n        />\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default UserProfileSection\r\n  ","import React, { useState } from 'react';\r\nimport './UserProfile.css';\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport UserProfileSection from './UserProfileSection/UserProfileSection.component';\r\nimport { Button } from '@material-ui/core';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport * as FirebaseService from '../../service/firebase.service';\r\n\r\nconst passwordValue = \"*******\";\r\n\r\nfunction UserProfile(props) {\r\n\r\n\r\n  const [displayName, setDisplayName] = useState(null);\r\n  const [oldDisplayName, setOldDiplayName] = useState(null);\r\n  const [error, setError] = useState();\r\n  const [isDisplayNameDialogOpen, setIsDisplayNameDialogOpen] = useState(false)\r\n  const [userInterests, setUserInterests] = useState(null);\r\n  const [oldUserInterests, setOldUserInterests] = useState(null);\r\n  const [isUserInterestsDialogOpen, setIsUserInterestsDialogOpen] = useState(false);\r\n\r\n  props.routeClicked(\"User Profile\");\r\n\r\n\r\n\r\n  function handleDisplayNameClose() {\r\n    setDisplayName(oldDisplayName)\r\n    setIsDisplayNameDialogOpen(false)\r\n  }\r\n\r\n  function handleDisplayNameSubmit() {\r\n    FirebaseService.updateUser(props.user.id, {\r\n      displayName\r\n    }).then(result => {\r\n      setIsDisplayNameDialogOpen(false)\r\n      setOldDiplayName(displayName)\r\n      props.updateUser(props.user.id);\r\n\r\n    })\r\n      .catch(err => {\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  function openDisplayNameDialog() {\r\n    setOldDiplayName(displayName)\r\n    setIsDisplayNameDialogOpen(true)\r\n  }\r\n\r\n  function onDisplayNameChange(e) {\r\n    setDisplayName(e.target.value);\r\n  }\r\n\r\n  /**\r\n   * Begin User Interests\r\n   */\r\n  function handleUserInterestsDialogClose() {\r\n    setUserInterests(oldUserInterests)\r\n    setIsUserInterestsDialogOpen(false)\r\n  }\r\n\r\n  function openUserInterestDialog() {\r\n    setOldUserInterests(userInterests)\r\n    setIsUserInterestsDialogOpen(true)\r\n  }\r\n\r\n  function onUserInterestsChange(e) {\r\n    setUserInterests(e.target.value);\r\n  }\r\n\r\n  function handleUserInterestSubmit() {\r\n    FirebaseService.updateUser(props.user.id, {\r\n      interests: userInterests\r\n    }).then(result => {\r\n      setIsUserInterestsDialogOpen(false)\r\n      setUserInterests(userInterests)\r\n      props.updateUser(props.user.id);\r\n    })\r\n      .catch(err => {\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  async function signOut() {\r\n    await FirebaseService.signOut().then((res) => {\r\n      if (res) {\r\n        props.history.push(\"/\");\r\n        props.updateUser(undefined);\r\n      }\r\n      // TODO(jessi) handle error\r\n    });\r\n  }\r\n\r\n  async function deleteAccount() {\r\n    await FirebaseService.deleteUser().then((res) => {\r\n      if (res) {\r\n        props.history.push(\"/\");\r\n        props.updateUser(undefined);\r\n      }\r\n      // TODO(jessi) handle error\r\n    });\r\n  }\r\n\r\n  if (props.user && displayName === null && userInterests === null) {\r\n    setDisplayName(props.user.displayName)\r\n    setUserInterests(props.user.interests)\r\n  }\r\n\r\n  if (props.user) {\r\n    return (\r\n      <div className=\"userProfile\">\r\n        <CssBaseline />\r\n        <Container className=\"userProfile-bottom-padding\" maxWidth=\"lg\">\r\n          <Paper className=\"paper\">\r\n\r\n            <UserProfileSection\r\n              isEditable={true}\r\n              displayValue=\"User Interests\"\r\n              value={userInterests}\r\n              handleClose={handleUserInterestsDialogClose}\r\n              handleSubmit={handleUserInterestSubmit}\r\n              isDialogOpen={isUserInterestsDialogOpen}\r\n              openDialog={openUserInterestDialog}\r\n              onChange={onUserInterestsChange}\r\n              isEditable={true}\r\n            ></UserProfileSection>\r\n\r\n          </Paper>\r\n        </Container>\r\n        <Divider />\r\n\r\n\r\n        <Container maxWidth=\"lg\">\r\n          <Paper className=\"paper\">\r\n\r\n            <UserProfileSection\r\n              isEditable={true}\r\n              displayValue=\"Display Name\"\r\n              value={displayName}\r\n              handleClose={handleDisplayNameClose}\r\n              handleSubmit={handleDisplayNameSubmit}\r\n              isDialogOpen={isDisplayNameDialogOpen}\r\n              openDialog={openDisplayNameDialog}\r\n              onChange={onDisplayNameChange}\r\n            />\r\n            <Divider />\r\n            <UserProfileSection\r\n              isEditable={false}\r\n              displayValue=\"Email\"\r\n              value={props.user.email}\r\n            />\r\n            <Divider />\r\n            <div className=\"logout-btns\">\r\n              <Button color=\"inherit\" className=\"menu-button\" onClick={signOut}>\r\n                Sign out\r\n              </Button>\r\n              <Button color=\"inherit\" className=\"menu-button\" onClick={deleteAccount}>\r\n                Delete account\r\n              </Button>\r\n            </div>\r\n          </Paper>\r\n        </Container>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        Loading..\r\n        <CircularProgress></CircularProgress>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(UserProfile);\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Input from '@material-ui/core/Input';\r\nimport { Button, Divider } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport { EditorState, convertFromRaw, convertToRaw, RichUtils } from 'draft-js';\r\nimport '../../../../node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport './CreateCourseDialog.css'\r\n\r\n\r\nfunction CreateCourseDialog(props) {\r\n  const [description, setDescription] = useState(props.course?.description);\r\n  const [title, setTitle] = useState(props.course?.title);\r\n  const [editorState, setEditorState] = useState();\r\n  const [overview, setOverview] = useState(props.course?.overview);\r\n  const [isTitleError, setIsTitleError] = useState(false);\r\n  const [isDescriptionError, setIsDescriptionError] = useState(false);\r\n  const [thumbnailFile, setThumbnailFile] = useState();\r\n\r\n\r\n\r\n  function onCourseTitleChange(e) {\r\n    setTitle(e.target.value);\r\n  }\r\n\r\n  function onCourseDescriptionChange(e) {\r\n    setDescription(e.target.value);\r\n\r\n  }\r\n\r\n  function onEditorStateChange(editorState) {\r\n    setEditorState(editorState);\r\n  };\r\n\r\n  function onFileUploadChange({ target }) {\r\n    console.log(\"Upload happened\");\r\n    // const fileReader = new FileReader();\r\n    // const name = target.accept.includes('image') ? 'images' : 'videos';\r\n    const file = target.files[0];\r\n    setThumbnailFile(file);\r\n  }\r\n\r\n\r\n  function handleKeyCommand(command) {\r\n    const newState = RichUtils.handleKeyCommand(editorState, command);\r\n    if (newState) {\r\n      setEditorState(newState);\r\n      setOverview(convertToRaw(newState.getCurrentContent()));\r\n\r\n      return 'handled';\r\n    }\r\n    return 'not-handled';\r\n  };\r\n\r\n  function isValidTitle() {\r\n    if (title && title.length > 0) {\r\n      setIsTitleError(false)\r\n      return true;\r\n    } else {\r\n      setIsTitleError(true);\r\n      return false;\r\n    }\r\n\r\n  }\r\n\r\n  function isValidDescription() {\r\n    if (description && description.length > 0) {\r\n      setIsDescriptionError(false)\r\n      return true;\r\n    } else {\r\n      setIsDescriptionError(true);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  function handleSubmit() {\r\n\r\n    const titleIsGood = isValidTitle();\r\n    const descriptionIsGood = isValidDescription();\r\n\r\n    if (titleIsGood && descriptionIsGood) {\r\n      const currentContentState = editorState.getCurrentContent();\r\n      setOverview(convertToRaw(currentContentState));\r\n\r\n      const courseDetails = {\r\n        title,\r\n        description,\r\n        overview: convertToRaw(currentContentState),\r\n        thumbnailFile\r\n      }\r\n      props.handleSubmit(courseDetails);\r\n    }\r\n  }\r\n\r\n  function handleClose() {\r\n    setIsTitleError(false)\r\n    setIsDescriptionError(false)\r\n    setDescription(props.course?.description)\r\n    setTitle(props.course?.title)\r\n    setOverview(props.course?.overview)\r\n    props.handleClose();\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (overview) {\r\n      setEditorState(EditorState.createWithContent(convertFromRaw(JSON.parse(overview))));\r\n    }\r\n    else {\r\n      setEditorState(EditorState.createEmpty());\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={props.isOpen} onClose={handleClose} aria-labelledby=\"form-dialog-title\" maxWidth=\"md\">\r\n        <DialogTitle id=\"form-dialog-title\">\r\n          {\r\n            props.course ? \"Edit Course\" : \"Create A New Course\"\r\n          }\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            {\r\n              props.course ?\r\n                \"Edit the existing course's title, display card, or overview.\"\r\n                :\r\n                \"Create a new course. Start by entering at least the title and description below.\"\r\n            }\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            required\r\n            error={isTitleError}\r\n            margin=\"normal\"\r\n            id=\"title\"\r\n            label=\"Course Title\"\r\n            onChange={onCourseTitleChange}\r\n            type=\"text\"\r\n            color=\"secondary\"\r\n            value={title}\r\n            fullWidth\r\n          />\r\n\r\n          <Divider />\r\n\r\n          <h3 class=\"section-heading\">Course Card</h3>\r\n          <span id=\"thumbnail-span\">\r\n            <p id=\"thumbnail-text\">Course Thumbnail</p>\r\n            <Input\r\n              label=\"Upload Course Thumbnail\"\r\n              type=\"file\"\r\n              onChange={onFileUploadChange}\r\n            >\r\n            </Input>\r\n          </span>\r\n          <TextField\r\n            margin=\"normal\"\r\n            id=\"description\"\r\n            error={isDescriptionError}\r\n            label=\"Course Description\"\r\n            required\r\n            onChange={onCourseDescriptionChange}\r\n            helperText=\"This field is shown under the thumbnail\"\r\n            type=\"text\"\r\n            color=\"secondary\"\r\n            value={description}\r\n            fullWidth\r\n          />\r\n\r\n          <Divider />\r\n\r\n          <h3 class=\"section-heading\">Course Overview</h3>\r\n          <div className=\"course-overview-section\">\r\n            <Editor\r\n              editorState={editorState}\r\n              editorClassName=\"editor-textbox\"\r\n              handleKeyCommand={handleKeyCommand}\r\n              onEditorStateChange={onEditorStateChange}\r\n              label=\"Course Overview\"\r\n            />\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"secondary\">\r\n            Cancel\r\n            </Button>\r\n          <Button onClick={handleSubmit} color=\"secondary\">\r\n            Submit\r\n            </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CreateCourseDialog","import React, { useState } from 'react';\r\nimport './CreateCourse.css';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport * as FirebaseService from '../../service/firebase.service';\r\nimport CreateCourseDialog from './CreateCourseDialog/CreateCourseDialog.component';\r\nimport CoursesDropdownComponent from '../CoursesDropdown/CoursesDropdown.component';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nfunction CreatedCoursesComponent(props) {\r\n\r\n  return (\r\n    <div className=\"courses-section\">\r\n      <h2> Courses You've Created </h2>\r\n      <CoursesDropdownComponent courses={props.createdCourses} includeEditIcon={true}></CoursesDropdownComponent>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction CreateCourse(props) {\r\n  const [isCreateCourseDialogOpen, setIsCreateCourseDialogOpen] = useState(false);\r\n  const history = useHistory();\r\n\r\n  props.routeClicked(\"Create Course\");\r\n\r\n\r\n  function handleCreateCourseDialogClose() {\r\n    setIsCreateCourseDialogOpen(false);\r\n  }\r\n\r\n  function openCreateCourseDialog() {\r\n    setIsCreateCourseDialogOpen(true);\r\n\r\n  }\r\n\r\n  async function handleSubmit(courseInfo) {\r\n    courseInfo.owner = props.user.id;\r\n\r\n    courseInfo.chapters = []\r\n\r\n    const response = await FirebaseService.createCourse(props.user, courseInfo)\r\n    setIsCreateCourseDialogOpen(false);\r\n    await props.updateCourses();\r\n    await props.updateUser(props.user.id);\r\n    // Navigate to Edit Course page\r\n    history.push(`/editCourse/${props.user.createdCoursesRefs[props.user.createdCoursesRefs.length - 1].id}`)\r\n  }\r\n\r\n  const hasCurrentCourses = false\r\n  let currnetCoursesSection = null;\r\n  if (props.user && props.user.createdCourses && props.user.createdCourses.length > 0) {\r\n    currnetCoursesSection = <CreatedCoursesComponent createdCourses={props.user.createdCourses}></CreatedCoursesComponent>\r\n  } else {\r\n    currnetCoursesSection = <h3>You have not created any courses</h3>\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"CreateCourse\">\r\n      <CssBaseline />\r\n      <Container className=\"userProfile-bottom-padding\" maxWidth=\"lg\">\r\n        <Paper className=\"paper\">\r\n          {\r\n            currnetCoursesSection\r\n          }\r\n          <span>\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={openCreateCourseDialog}>\r\n              Create New Course\r\n              </Button>\r\n          </span>\r\n        </Paper>\r\n      </Container>\r\n\r\n      <CreateCourseDialog\r\n        isOpen={isCreateCourseDialogOpen}\r\n        handleClose={handleCreateCourseDialogClose}\r\n        handleSubmit={handleSubmit}\r\n        user={props.user}\r\n      />\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateCourse;\r\n","import React, { useState, useEffect } from 'react';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Button } from '@material-ui/core';\r\n\r\n\r\nimport './CourseChapterPanel.css';\r\n\r\nfunction CourseChapterPanel(props) {\r\n\r\n    function listItemClicked(lesson) {\r\n        props.setChapterInContext(props.chapter);\r\n        props.setActiveLesson(lesson);\r\n    }\r\n\r\n    let lessonItems = []\r\n\r\n    const lessonsLength = props.chapter?.lessons?.length;\r\n    if (lessonsLength > 0) {\r\n        lessonItems = props.chapter.lessons.map(lesson => {\r\n            const isActiveLesson = (lesson === props.activeLesson);\r\n\r\n            return (\r\n                <span>\r\n                    <ListItem selected={isActiveLesson} onClick={() => listItemClicked(lesson)} id={lesson.id} button>\r\n                        <ListItemText primary={lesson.title} />\r\n                    </ListItem>\r\n                </span>\r\n            )\r\n        });\r\n    } else {\r\n        lessonItems[0] = <ListItem> <ListItemText primary=\"No Lessons Added\" /> </ListItem>\r\n    }\r\n\r\n\r\n    function openLessonModal() {\r\n        props.setChapterInContext(props.chapter);\r\n        props.openLessonModal(/**addLesson=*/true);\r\n    }\r\n\r\n    let addNewLessonButton;\r\n\r\n    if (props.editable) {\r\n        addNewLessonButton = <Button variant=\"contained\" onClick={openLessonModal} color=\"secondary\" id=\"add-lesson\">Add New Lesson</Button>\r\n    }\r\n\r\n\r\n    return (\r\n        <ExpansionPanel\r\n            defaultExpanded={props.chapter === props.chapterInContext}\r\n        >\r\n            <ExpansionPanelSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n            >\r\n                <Typography variant=\"subtitle2\">{props.chapter.title}</Typography>\r\n            </ExpansionPanelSummary>\r\n            <ExpansionPanelDetails>\r\n\r\n                <List dense=\"true\" className=\"lessons-list\">\r\n                    {lessonItems}\r\n                    {addNewLessonButton}\r\n                </List>\r\n\r\n            </ExpansionPanelDetails>\r\n        </ExpansionPanel>\r\n    )\r\n}\r\n\r\nexport default CourseChapterPanel;","import React from 'react';\r\nimport './CourseNavigationPane.css';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { IconButton, Button } from '@material-ui/core';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\n\r\n\r\nimport CourseChapterPanel from './CourseChapterPanel/CourseChapterPanel.component';\r\n\r\n\r\n/**\r\n * Generate multiple function\r\n */\r\n\r\n\r\nfunction generate(element) {\r\n  return [0, 1, 2].map(value =>\r\n    React.cloneElement(element, {\r\n      key: value,\r\n    }),\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\nfunction CourseNavigationPane(props) {\r\n\r\n  function setChapterInContext(chapter) {\r\n    props.setChapterInContext(chapter);\r\n  }\r\n\r\n  const courseOverviewClicked = () => {\r\n    props.setActiveLesson(undefined);\r\n    props.setChapterInContext(undefined);\r\n  }\r\n\r\n  const openDeleteDialog = (e) => {\r\n    props.openDeleteDialog(\"Course\", props.course);\r\n  }\r\n\r\n  let courseNavigationPanels = []\r\n  const chaptersLength = props.course?.chapters?.length;\r\n\r\n  if (chaptersLength > 0) {\r\n    courseNavigationPanels = props.course.chapters.map(chapter =>\r\n      <CourseChapterPanel editable={props.editable} setActiveLesson={props.setActiveLesson} activeLesson={props.activeLesson} openLessonModal={props.openLessonModal} chapterInContext={props.chapterInContext} setChapterInContext={setChapterInContext} chapter={chapter} />\r\n    )\r\n  }\r\n\r\n  let addNewChapterButton;\r\n  let deleteCourseButton;\r\n  if (props.editable) {\r\n    addNewChapterButton = <Button id=\"new-chapter\" variant=\"contained\" onClick={props.openCreateChapterDialog} color=\"secondary\"> Add New Chapter </Button>\r\n    deleteCourseButton = <IconButton id=\"delete-button\" onClick={openDeleteDialog}> <DeleteForeverIcon /> </IconButton>\r\n  }\r\n\r\n\r\n  return (\r\n    <Paper className=\"paper\">\r\n      <span>\r\n        <Button id=\"course-overview\" size=\"medium\"\r\n          onClick={courseOverviewClicked}>\r\n          {props.course.title}\r\n        </Button>\r\n        {deleteCourseButton}\r\n        <br />\r\n      </span>\r\n      {courseNavigationPanels}\r\n      {addNewChapterButton}\r\n    </Paper>\r\n  )\r\n}\r\n\r\nexport default CourseNavigationPane;","import React, { useState } from 'react';\r\nimport YouTube from 'react-youtube';\r\nimport { IconButton, Button, Typography } from '@material-ui/core';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport { EditorState, convertFromRaw, ContentState } from \"draft-js\";\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport './CourseLesson.css';\r\n\r\n// Youtube Constants\r\n\r\nconst YoutubeComponentConfig = {\r\n    opts: {\r\n        height: '390',\r\n        width: '640',\r\n        playerVars: {\r\n            autoplay: 0,\r\n        },\r\n    },\r\n    videoId: \"BKorP55Aqvg\"\r\n\r\n}\r\n\r\n\r\nfunction EditCourseLesson(props) {\r\n\r\n    let hasYoutubeVideo = false;\r\n\r\n    function _onReady(event) {\r\n        // access to player in all event handlers via event.target\r\n        event.target.pauseVideo();\r\n    }\r\n\r\n\r\n    function openDeleteDialog(e) {\r\n        props.openDeleteDialog(\"Lesson\", props.lesson);\r\n    }\r\n\r\n\r\n    function goToPreviousLesson() {\r\n        props.navigateToPreviousLesson(props.lesson);\r\n    }\r\n\r\n    function goToNextLesson() {\r\n        props.navigateToNextLesson(props.lesson);\r\n    }\r\n\r\n    function getButtonDiv() {\r\n        if (props.isFirstLesson && props.isLastLesson) {\r\n            return '';\r\n        }\r\n\r\n        let leftButton, rightButton;\r\n\r\n        if (props.nextLesson || props.nextChapter) {\r\n            leftButton =\r\n                <Button variant=\"contained\" onClick={goToNextLesson} className=\"next-button\" color=\"secondary\" endIcon={<ArrowForwardIosIcon />}>\r\n                    {props.nextLesson ? \"Next Lesson\" : \"Next Chapter\"}\r\n                </Button>\r\n        }\r\n\r\n        if (props.prevLesson || props.prevChapter) {\r\n            rightButton =\r\n                <Button variant=\"contained\" onClick={goToPreviousLesson} className=\"previous-button\" color=\"secondary\" startIcon={<ArrowBackIosIcon />}>\r\n                    {props.prevLesson ? \"Previous Lesson\" : \"Previous Chapter\"}\r\n                </Button>\r\n        }\r\n\r\n        return (\r\n            <div className=\"button-div\">\r\n                {leftButton}\r\n                {rightButton}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function getVideoConfig() {\r\n        const youtubeConfig = { ...YoutubeComponentConfig };\r\n        const url = props.lesson?.video;\r\n        if (url && url.includes(\"youtube\") && (url.includes(\"v=\"))) {\r\n            const myParamters = url.split(\"?\");\r\n            var searchParams = new URLSearchParams(myParamters[1]);\r\n            youtubeConfig.videoId = searchParams.get('v');\r\n            hasYoutubeVideo = true;\r\n        }\r\n        return youtubeConfig;\r\n    }\r\n\r\n    function isJson(str) {\r\n        try {\r\n            JSON.parse(str);\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    let content = undefined;\r\n    if (props.lesson?.description && isJson(props.lesson.description)) {\r\n        const contentStateObj = JSON.parse(props.lesson.description);\r\n        const editorState = EditorState.createWithContent(convertFromRaw(contentStateObj));\r\n        content = <Editor\r\n            toolbarHidden\r\n            editorState={editorState}\r\n            readOnly={true}\r\n        />\r\n    }\r\n    else {\r\n        const text = props.lesson?.description ? props.lesson.description : \"No text entered.\";\r\n        content = <Editor\r\n            toolbarHidden\r\n            editorState={EditorState.createWithContent(ContentState.createFromText(text))}\r\n            readOnly={true}\r\n        />\r\n    }\r\n\r\n    if (props.lesson) {\r\n        const youtubeConfig = getVideoConfig();\r\n\r\n        return (\r\n            <div>\r\n                <div id=\"lesson-header\">\r\n                    <p id=\"class-title\"> {props.lesson.title} </p>\r\n                    {props.editable ?\r\n                        <IconButton id=\"delete-lesson\" onClick={openDeleteDialog}>\r\n                            <DeleteForeverIcon />\r\n                        </IconButton>\r\n                        :\r\n                        ''\r\n                    }\r\n                </div>\r\n                <div id=\"content\">\r\n                    {\r\n                        hasYoutubeVideo\r\n                            ?\r\n                            <YouTube videoId={youtubeConfig.videoId} opts={youtubeConfig.opts} onReady={_onReady} />\r\n                            :\r\n                            \"\"\r\n                    }\r\n                    {content}\r\n                    {getButtonDiv()}\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div>\r\n                <h5> No Lesson Details </h5>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditCourseLesson;","import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport CourseLesson from './CourseLesson/CourseLesson.component';\r\nimport { Button, IconButton, useRadioGroup } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport { EditorState, convertFromRaw, ContentState } from \"draft-js\";\r\n\r\nimport './CourseOverviewPane.css';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\n\r\nfunction CourseOverviewPane(props) {\r\n\r\n    let lessonArray = [];\r\n    for (let i = 0; i < props.course.chapters.length; i++) {\r\n        for (let j = 0; j < props.course.chapters[i].lessons?.length; j++) {\r\n            lessonArray.push(props.course.chapters[i].lessons[j]);\r\n        }\r\n    }\r\n\r\n    function navigateToNextLesson(lesson) {\r\n        const indexOfCurrentLesson = props.activeChapter.lessons.indexOf(lesson);\r\n\r\n        const enrolledInCurrentCourse = props.user.enrolledCourses.find(course => {\r\n            return course.id === props.course.id;\r\n        })\r\n        if (enrolledInCurrentCourse) props.addCompletedLesson(props.activeChapter.lessons[indexOfCurrentLesson]);\r\n\r\n        if (indexOfCurrentLesson !== props.activeChapter.lessons.length - 1) {\r\n            props.setActiveLesson(props.activeChapter.lessons[indexOfCurrentLesson + 1]);\r\n            return;\r\n        } else {\r\n            const activeChapterIndex = props.course.chapters.indexOf(props.activeChapter);\r\n            const nextChapter = props.course.chapters[activeChapterIndex + 1];\r\n            props.setChapterInContext(nextChapter);\r\n            props.setActiveLesson(nextChapter.lessons[0]);\r\n        }\r\n    }\r\n\r\n    function navigateToPreviousLesson(lesson) {\r\n        const indexOfCurrentLesson = props.activeChapter.lessons.indexOf(lesson);\r\n\r\n        if (indexOfCurrentLesson !== 0) {\r\n            props.setActiveLesson(props.activeChapter.lessons[indexOfCurrentLesson - 1]);\r\n            return;\r\n        } else {\r\n            const activeChapterIndex = props.course.chapters.indexOf(props.activeChapter);\r\n            const prevChapter = props.course.chapters[activeChapterIndex - 1];\r\n            props.setChapterInContext(prevChapter);\r\n            props.setActiveLesson(prevChapter.lessons[prevChapter.lessons.length - 1]);\r\n        }\r\n\r\n    }\r\n\r\n    function openLessonModal() {\r\n        props.openLessonModal(/**addLesson=*/false);\r\n    }\r\n\r\n\r\n    let openEditCourseOverviewDialogButton;\r\n    let editLessonButton;\r\n    if (props.editable) {\r\n        openEditCourseOverviewDialogButton = <IconButton variant=\"contained\" onClick={props.openEditCourseOverviewDialog} color=\"secondary\" id=\"edit-lesson\"> <EditIcon /> </IconButton>\r\n        editLessonButton = <IconButton variant=\"contained\" onClick={openLessonModal} color=\"secondary\" id=\"edit-lesson\"> <EditIcon /> </IconButton>\r\n    }\r\n\r\n    let content = undefined;\r\n    if (props.course.overview) {\r\n        const contentStateObj = JSON.parse(props.course.overview);\r\n        const editorState = EditorState.createWithContent(convertFromRaw(contentStateObj));\r\n        content = <Editor\r\n            toolbarHidden\r\n            editorState={editorState}\r\n            readOnly={true}\r\n        />\r\n    }\r\n    else {\r\n        content = <Editor\r\n            toolbarHidden\r\n            editorState={EditorState.createWithContent(ContentState.createFromText(\"No text entered.\"))}\r\n            readOnly={true}\r\n        />\r\n    }\r\n\r\n    function getLessonInformation() {\r\n        let prevLesson, nextLesson, prevChapter, nextChapter = false;\r\n\r\n        if (props.activeLesson) {\r\n            const currentLessonIndex = lessonArray.indexOf(props.activeLesson);\r\n            const currentLessonIndexInChapter = props.activeChapter.lessons.indexOf(props.activeLesson);\r\n            const numLessonsInChapter = props.activeChapter.lessons.length;\r\n            const numChapters = props.course.chapters.length;\r\n            const activeChapterIndex = props.course.chapters.indexOf(props.activeChapter);\r\n\r\n            prevLesson = currentLessonIndexInChapter > 0;\r\n            nextLesson = currentLessonIndexInChapter < numLessonsInChapter - 1;\r\n            prevChapter = currentLessonIndexInChapter === 0 && currentLessonIndex > 0\r\n            nextChapter = currentLessonIndexInChapter === numLessonsInChapter - 1\r\n                && currentLessonIndex < lessonArray.length - 1\r\n                && activeChapterIndex !== numChapters - 1;\r\n        }\r\n\r\n        return [prevLesson, nextLesson, prevChapter, nextChapter]\r\n    }\r\n\r\n    let enrolledButtonText;\r\n    if (props.user.enrolledCourses && props.user.enrolledCourses.length > 0) {\r\n        const enrolledInCurrentCourse = props.user.enrolledCourses.find(course => {\r\n            return course.id === props.course.id;\r\n        })\r\n        enrolledButtonText = enrolledInCurrentCourse ? \"Unenroll\" : \"Enroll\";\r\n    } else {\r\n        enrolledButtonText = \"Enroll\";\r\n    }\r\n\r\n\r\n    let prevLesson, nextLesson, prevChapter, nextChapter = false;\r\n    if (props.activeLesson) {\r\n        [prevLesson, nextLesson, prevChapter, nextChapter] = getLessonInformation();\r\n    }\r\n\r\n    return (\r\n        <Paper className=\"paper\">\r\n            {props.activeChapter ?\r\n                <div>\r\n                    {editLessonButton}\r\n                    <CourseLesson\r\n                        navigateToNextLesson={navigateToNextLesson}\r\n                        navigateToPreviousLesson={navigateToPreviousLesson}\r\n                        prevLesson={prevLesson}\r\n                        nextLesson={nextLesson}\r\n                        prevChapter={prevChapter}\r\n                        nextChapter={nextChapter}\r\n                        lesson={props.activeLesson}\r\n                        editable={props.editable}\r\n                        openDeleteDialog={props.openDeleteDialog}\r\n                    />\r\n                </div> :\r\n                <div>\r\n                    {openEditCourseOverviewDialogButton}\r\n                    {content}\r\n                    <Button onClick={props.enrollInCourse} color=\"secondary\" variant=\"contained\"> {enrolledButtonText} </Button>\r\n                </div>\r\n            }\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default CourseOverviewPane;","import React, { useState } from 'react';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { Button } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nfunction CreateChapterDialog(props) {\r\n  const [description, setDescription] = useState();\r\n  const [title, setTitle] = useState();\r\n\r\n  function onCourseTitleChange(e) {\r\n    setTitle(e.target.value);\r\n  }\r\n\r\n  function onCourseDescriptionChange(e) {\r\n    setDescription(e.target.value);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    const chapterInfo = {\r\n      title,\r\n      description,\r\n    }\r\n\r\n    props.handleSubmit(chapterInfo);\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={props.isOpen} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Create New Chapter</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Create a new chapter within your course. Enter a title and description below.\r\n            </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"title\"\r\n            label=\"Chapter Title\"\r\n            onChange={onCourseTitleChange}\r\n            type=\"text\"\r\n            color=\"secondary\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"description\"\r\n            label=\"Chapter Description\"\r\n            onChange={onCourseDescriptionChange}\r\n            type=\"text\"\r\n            color=\"secondary\"\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={props.handleClose} color=\"secondary\">\r\n            Cancel\r\n            </Button>\r\n          <Button onClick={handleSubmit} color=\"secondary\">\r\n            Submit\r\n            </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CreateChapterDialog","import React, { useState, useEffect } from 'react';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { Button } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport { EditorState, convertFromRaw, ContentState, convertToRaw, RichUtils } from \"draft-js\";\r\n\r\n// import './CreateLessonDialog.css';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\n\r\nfunction CreateLessonDialog(props) {\r\n  const [description, setDescription] = useState();\r\n  const [title, setTitle] = useState();\r\n  const [video, setVideo] = useState();\r\n  const [isDescriptionError, setIsDescriptionError] = useState(false);\r\n  const [isTitleError, setIsTitleError] = useState(false);\r\n  const [isYoutubeError, setIsYoutubeError] = useState(false);\r\n  const [editorState, setEditorState] = useState();\r\n\r\n  function onEditorStateChange(editorState) {\r\n    setEditorState(editorState);\r\n    const currentContentState = editorState.getCurrentContent();\r\n    setDescription(JSON.stringify(convertToRaw(currentContentState)));\r\n  };\r\n\r\n  function handleKeyCommand(command) {\r\n    const newState = RichUtils.handleKeyCommand(editorState, command);\r\n    if (newState) {\r\n      setEditorState(newState);\r\n      return 'handled';\r\n    }\r\n    return 'not-handled';\r\n  };\r\n\r\n  function onCourseTitleChange(e) {\r\n    setTitle(e.target.value);\r\n  }\r\n\r\n  function onVideoUrlChange(e) {\r\n    setVideo(e.target.value);\r\n  }\r\n\r\n  function isValidTitle() {\r\n    if (title && title.length > 0) {\r\n      setIsTitleError(false)\r\n      return true;\r\n    } else {\r\n      setIsTitleError(true);\r\n      return false;\r\n    }\r\n\r\n  }\r\n\r\n  function isValidDescription() {\r\n    if (description && (isJson(description) || description.length > 0)) {\r\n      setIsDescriptionError(false)\r\n      return true;\r\n    } else {\r\n      setIsDescriptionError(true);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  function isValidYoutubeURL() {\r\n    if (video === undefined || video.length === 0) {\r\n      setIsYoutubeError(false);\r\n      return true;\r\n    } else if (video && video.includes(\"youtube\") && (video.includes(\"v=\"))) {\r\n      setIsYoutubeError(false);\r\n      return true;\r\n    } else {\r\n      setIsYoutubeError(true);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    const id = props.lesson?.id ? props.lesson.id : undefined;\r\n\r\n    const currentContentState = editorState.getCurrentContent();\r\n    const descriptionJSON = JSON.stringify(convertToRaw(currentContentState));\r\n    setDescription(descriptionJSON);\r\n\r\n    let tempVideo = \"\";\r\n    if (isValidTitle() && isValidDescription() && isValidYoutubeURL()) {\r\n      if (video === undefined || video.length === 0) {\r\n        setVideo(\"\"); // So firebase won't die with undefined.\r\n      } else {\r\n        tempVideo = video;\r\n      }\r\n      const lessonInfo = {\r\n        id,\r\n        title,\r\n        description: descriptionJSON,\r\n        video: tempVideo,\r\n      }\r\n      props.updateLesson(lessonInfo, props.add);\r\n    }\r\n  }\r\n\r\n  function handleClose() {\r\n    // Reset State\r\n    setTitle();\r\n    setVideo();\r\n    setDescription();\r\n    setIsTitleError(false);\r\n    setIsDescriptionError(false);\r\n    setIsYoutubeError(false);\r\n    setEditorState(EditorState.createEmpty());\r\n    props.handleClose();\r\n  }\r\n\r\n  function isJson(str) {\r\n    try {\r\n      JSON.parse(str);\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!props.add && props.lesson) {\r\n      setTitle(props.lesson.title);\r\n      setDescription(props.lesson.description);\r\n      setVideo(props.lesson.video);\r\n      if (props.lesson.description) {\r\n        if (isJson(props.lesson.description)) {\r\n          setEditorState(EditorState.createWithContent(convertFromRaw(JSON.parse(props.lesson.description))));\r\n        } else {\r\n          // For backwards compatibility\r\n          setEditorState(EditorState.createWithContent(ContentState.createFromText(props.lesson.description)));\r\n        }\r\n      }\r\n      else {\r\n        setEditorState(EditorState.createEmpty());\r\n      }\r\n    } else {\r\n      setTitle()\r\n      setDescription()\r\n      setVideo()\r\n      setEditorState(EditorState.createEmpty());\r\n    }\r\n\r\n  }, [props]);\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={props.isOpen} onClose={handleClose} aria-labelledby=\"form-dialog-title\" maxWidth=\"md\">\r\n        <DialogTitle id=\"form-dialog-title\">{props.add ? \"Create New\" : \"Edit\"} Lesson</DialogTitle>\r\n        <DialogContent>\r\n          {props.add ?\r\n            <DialogContentText>\r\n              Add a new lesson to your course\r\n            </DialogContentText>\r\n            :\r\n            <DialogContentText>\r\n              Edit existing lesson\r\n            </DialogContentText>\r\n          }\r\n\r\n          <TextField\r\n            autoFocus\r\n            required\r\n            margin=\"normal\"\r\n            error={isTitleError}\r\n            id=\"title\"\r\n            label=\"Lesson Title\"\r\n            onChange={onCourseTitleChange}\r\n            type=\"text\"\r\n            color=\"secondary\"\r\n            value={title}\r\n            helperText={isTitleError ? \"Title is a required field\" : \"\"}\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            margin=\"normal\"\r\n            error={isYoutubeError}\r\n            id=\"video\"\r\n            label=\"Video URL (optional)\"\r\n            onChange={onVideoUrlChange}\r\n            type=\"text\"\r\n            color=\"secondary\"\r\n            value={video}\r\n            helperText={isYoutubeError ? \"Youtube URL is malformed. It must have the form: https://www.youtube.com?v=<SomeCharacterString>\" : \"\"}\r\n            fullWidth\r\n          />\r\n          <Editor\r\n            editorState={editorState}\r\n            wrapperClassName=\"editor-wrapper\"\r\n            editorClassName=\"editor-textbox\"\r\n            handleKeyCommand={handleKeyCommand}\r\n            onEditorStateChange={onEditorStateChange}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={props.handleClose} color=\"secondary\">\r\n            Cancel\r\n            </Button>\r\n          <Button onClick={handleSubmit} color=\"secondary\">\r\n            Submit\r\n            </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CreateLessonDialog","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function DeleteDialog(props) {\r\n\r\n  const handleSubmit = () => {\r\n    props.handleSubmit();\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={props.isOpen}\r\n        onClose={props.handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{`Delete ${props.deleteType}?`}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Are you sure you want to delete this {props.deleteType?.toLowerCase()}?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={props.handleClose} color=\"secondary\" autoFocus>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleSubmit} color=\"secondary\" >\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport './CourseOverview.css';\r\nimport {\r\n    Link as RouterLink,\r\n    useParams,\r\n    useHistory\r\n} from \"react-router-dom\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Button } from '@material-ui/core';\r\nimport * as FirebaseService from '../../service/firebase.service';\r\nimport CourseNavigationPane from './CourseNavigationPane/CourseNavigationPane.component';\r\n\r\nimport CourseOverviewPane from './CourseOverviewPane/CourseOverviewPane.component';\r\nimport CreateChapterDialog from './Dialogs/CreateChapterDialog/CreateChapterDialog.component';\r\nimport CreateLessonDialog from './Dialogs/CreateLessonDialog/CreateLessonDialog.component';\r\nimport EditCourseOverviewDialog from './Dialogs/EditCourseOverviewDialog/EditCourseOverviewDialog.component';\r\nimport CreateCourseDialog from '../CreateCourse/CreateCourseDialog/CreateCourseDialog.component';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport DeleteDialog from './Dialogs/DeleteDialog/DeleteDialog.component';\r\n\r\n\r\n\r\n\r\nfunction CourseOverview(props) {\r\n    // Get ID from Route Params\r\n    let { id } = useParams();\r\n    // Create State Variables\r\n    const [course, setCourse] = useState();\r\n    const [error, setError] = useState();\r\n    const [isCreateChapterDialogOpen, setIsCreateChapterDialogOpen] = useState(false);\r\n    const [isCreateLessonDialogOpen, setIsCreateLessonDialogOpen] = useState(false);\r\n    const [isEditCourseOverviewDialogOpen, setIsEditCourseOverviewDialogOpen] = useState(false);\r\n    const [isDeleteDialogOpen, setIsDeleteDialogOpen] = useState(false);\r\n    const [chapterInContext, setChapterInContext] = useState();\r\n    const [activeLesson, setActiveLesson] = useState();\r\n    const [addLesson, setAddLesson] = useState();\r\n    const [deleteType, setDeleteType] = useState();\r\n    const [objToDelete, setObjToDelete] = useState();\r\n    const [isDeleting, setIsDeleting] = useState(false);\r\n    const history = useHistory();\r\n\r\n\r\n    props.routeClicked(\"Course Overview\");\r\n\r\n\r\n\r\n    function handleCreateChapterClose() {\r\n        setIsCreateChapterDialogOpen(false);\r\n    }\r\n\r\n    function openCreateChapterDialog() {\r\n        setIsCreateChapterDialogOpen(true);\r\n    }\r\n\r\n    function handleCreateLessonDialogClose() {\r\n        setIsCreateLessonDialogOpen(false);\r\n    }\r\n\r\n    function openCreateLessonDialog(addLesson) {\r\n        setAddLesson(addLesson);\r\n        setIsCreateLessonDialogOpen(true);\r\n    }\r\n\r\n    function handleEditCourseOverviewDialogClose() {\r\n        setIsEditCourseOverviewDialogOpen(false);\r\n    }\r\n\r\n    function openEditCourseOverviewDialog() {\r\n        setIsEditCourseOverviewDialogOpen(true);\r\n    }\r\n\r\n    function viewPublished() {\r\n        props.history.push(`/courseOverview/${course.id}`);\r\n    }\r\n\r\n    function openDeleteDialog(deleteType, objToDelete) {\r\n        setIsDeleteDialogOpen(true);\r\n        setDeleteType(deleteType);\r\n        setObjToDelete(objToDelete)\r\n    }\r\n\r\n    function handleCloseDeleteDialog() {\r\n        setIsDeleteDialogOpen(false);\r\n    }\r\n\r\n    async function handleDeleteSubmit() {\r\n\r\n        props.setDeletingCourse(true)\r\n\r\n        if (deleteType === 'Course') {\r\n            await FirebaseService.deleteCourse(objToDelete);\r\n            await props.updateCourses()\r\n            await props.updateUser(props.user.id);\r\n            history.push('/courseLibrary');\r\n\r\n        } else if (deleteType === 'Lesson') {\r\n\r\n            await FirebaseService.deleteLesson(course, chapterInContext, objToDelete);\r\n            setActiveLesson();\r\n            setChapterInContext();\r\n            await props.updateCourses();\r\n            await props.updateUser(props.user.id);\r\n        }\r\n\r\n        props.setDeletingCourse(false);\r\n\r\n    }\r\n\r\n    async function updateLesson(lessonInfo, add) {\r\n\r\n        await FirebaseService.updateLesson(course, chapterInContext, lessonInfo, add).then(() => {\r\n            getCourseById(id);\r\n            setAddLesson(add);\r\n            setIsCreateLessonDialogOpen(false);\r\n        }).catch((err) => { console.log(err) });\r\n    }\r\n\r\n    async function updateCourse(courseInfo) {\r\n        setIsEditCourseOverviewDialogOpen(false);\r\n        if (courseInfo.thumbnailFile === undefined) {\r\n            courseInfo.thumbnailFile = \"\";\r\n        }\r\n        await FirebaseService.updateCourse(course.id, courseInfo);\r\n        props.updateCourses();\r\n        getCourseById(id);\r\n    }\r\n\r\n    async function addNewChapter(chapterInfo) {\r\n        await FirebaseService.addNewChapter(course, chapterInfo);\r\n        getCourseById(id);\r\n        setIsCreateChapterDialogOpen(false);\r\n    }\r\n\r\n\r\n    async function resolveLessons(chapter) {\r\n        const lessonsRefLength = chapter.lessonsRef?.length;\r\n        if (lessonsRefLength > 0) {\r\n            return Promise.all(\r\n                chapter.lessonsRef.map(async lessonRef => {\r\n                    const lesson = await FirebaseService.getDocFromDocRef(lessonRef)\r\n                    return lesson;\r\n                })\r\n            ).then(results => {\r\n                chapter.lessons = results;\r\n                return chapter;\r\n            });\r\n\r\n        } else {\r\n            return Promise.resolve(chapter);\r\n        }\r\n    }\r\n\r\n    async function resolveChapters(chapters) {\r\n        return Promise.all(chapters.map(chapter => resolveLessons(chapter)))\r\n    }\r\n\r\n    async function getCourseById(id) {\r\n        const course = await FirebaseService.getCourseById(id);\r\n        course.chapters = await resolveChapters(course.chapters);\r\n        if (chapterInContext) {\r\n            const chapter = course.chapters.find(chapter => chapter.id === chapterInContext.id);\r\n            setChapterInContext(chapter);\r\n        }\r\n        setCourse(course);\r\n    }\r\n\r\n    async function enrollInCourse() {\r\n        let enrolled = false;\r\n        if (props.user.enrolledCourses) {\r\n            enrolled = props.user.enrolledCourses.find(c => {\r\n                return c.id === course.id;\r\n            })\r\n        }\r\n\r\n        if (enrolled) {\r\n            await FirebaseService.unenrollInCourse(props.user, course);\r\n        } else {\r\n            await FirebaseService.enrollInCourse(props.user, course);\r\n        }\r\n\r\n        props.updateUser(props.user.id);\r\n    }\r\n\r\n    function addCompletedLesson(lesson) {\r\n        // TODO(jessi): Add lesson to list of completed lessons in Firebase.\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (id && !props.isDeletingCourse) {\r\n            getCourseById(id);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // after adding/editing a lesson, ensure we navigate to the freshest version\r\n        if (course && chapterInContext) {\r\n            if (!addLesson) {\r\n                const updatedLesson = course.chapters[chapterInContext.id].lessons.find(lesson => {\r\n                    if (lesson.id === activeLesson.id) {\r\n                        return lesson;\r\n                    }\r\n                });\r\n                if (updatedLesson) {\r\n                    setActiveLesson(updatedLesson);\r\n                }\r\n            } else {\r\n                const lessons = course.chapters[chapterInContext.id].lessons;\r\n                setActiveLesson(lessons[lessons.length - 1]);\r\n            }\r\n        }\r\n    }, [course]);\r\n\r\n    let dialogs;\r\n    let viewPublishedCourseButton;\r\n    if (props.editable) {\r\n        dialogs = <div>\r\n            <CreateChapterDialog isOpen={isCreateChapterDialogOpen} handleSubmit={addNewChapter} handleClose={handleCreateChapterClose} />\r\n            <CreateLessonDialog\r\n                isOpen={isCreateLessonDialogOpen}\r\n                add={addLesson}\r\n                lesson={activeLesson}\r\n                updateLesson={updateLesson}\r\n                handleClose={handleCreateLessonDialogClose} />\r\n\r\n            <CreateCourseDialog\r\n                isOpen={isEditCourseOverviewDialogOpen}\r\n                handleClose={handleEditCourseOverviewDialogClose}\r\n                course={course}\r\n                handleSubmit={updateCourse}\r\n            />\r\n            <DeleteDialog\r\n                isOpen={isDeleteDialogOpen}\r\n                handleClose={handleCloseDeleteDialog}\r\n                handleSubmit={handleDeleteSubmit}\r\n                deleteType={deleteType}\r\n                objToDelete={objToDelete}\r\n            />\r\n        </div>\r\n\r\n        viewPublishedCourseButton = <Button variant=\"contained\" color=\"secondary\" id=\"view-published\" onClick={viewPublished}> View Published Course </Button>\r\n    }\r\n\r\n\r\n\r\n    if (course) {\r\n        return (\r\n            <div className=\"edit-course\">\r\n                <Grid container spacing={6}>\r\n                    <Grid item xs={3}>\r\n                        <CourseNavigationPane\r\n                            editable={props.editable}\r\n                            activeLesson={activeLesson}\r\n                            setActiveLesson={setActiveLesson}\r\n                            addCompletedLesson={addCompletedLesson}\r\n                            openLessonModal={openCreateLessonDialog}\r\n                            chapterInContext={chapterInContext}\r\n                            setChapterInContext={setChapterInContext}\r\n                            course={course}\r\n                            openCreateChapterDialog={openCreateChapterDialog}\r\n                            openDeleteDialog={openDeleteDialog}\r\n                        />\r\n                        {viewPublishedCourseButton}\r\n                    </Grid>\r\n                    <Grid item xs={9}>\r\n                        <CourseOverviewPane\r\n                            setActiveLesson={setActiveLesson}\r\n                            addCompletedLesson={addCompletedLesson}\r\n                            setChapterInContext={setChapterInContext}\r\n                            editable={props.editable}\r\n                            user={props.user}\r\n                            activeChapter={chapterInContext}\r\n                            activeLesson={activeLesson}\r\n                            course={course}\r\n                            openEditCourseOverviewDialog={openEditCourseOverviewDialog}\r\n                            openLessonModal={openCreateLessonDialog}\r\n                            openDeleteDialog={openDeleteDialog}\r\n                            enrollInCourse={enrollInCourse}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                {dialogs}\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div>\r\n                Loading...\r\n                <CircularProgress></CircularProgress>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default withRouter(CourseOverview);","import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport { AppBar, Toolbar, IconButton, Typography, Button, } from '@material-ui/core';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link as RouterLink,\r\n  Redirect,\r\n  withRouter,\r\n  browserHistory\r\n} from \"react-router-dom\";\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport CourseLibrary from './components/CourseLibrary/CourseLibrary';\r\nimport Login from './components/Login/Login';\r\nimport MyCourses from './components/MyCourses/MyCourses';\r\nimport UserProfile from './components/UserProfile/UserProfile';\r\nimport CreateCourse from './components/CreateCourse/CreateCourse.component';\r\nimport CourseOverview from './components/CourseOverview/CourseOverview.component';\r\nimport { MuiThemeProvider, ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\n\r\nimport * as FirebaseService from '../src/service/firebase.service'\r\n\r\nconst buttonTheme = createMuiTheme({\r\n  palette: {\r\n    primary: { // peaches\r\n      main: '#87618c',\r\n    },\r\n    secondary: {  // purples\r\n      main: '#442b4a',\r\n    },\r\n  },\r\n  typography: {\r\n    useNextVariants: true\r\n  },\r\n  overrides: {\r\n    MuiButton: {\r\n      root: {\r\n        textTransform: 'none',\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: { // peaches\r\n      light: '#f44336',\r\n      main: '#f6eee7',\r\n      dark: '#dbbca1',\r\n    },\r\n    secondary: {  // purples\r\n      light: '#a17da5',\r\n      main: '#87618c',\r\n      dark: '#442b4a',\r\n    },\r\n  },\r\n  typography: {\r\n    useNextVariants: true\r\n  },\r\n  overrides: {\r\n    MuiButton: {\r\n      root: {\r\n        textTransform: 'none',\r\n      },\r\n    },\r\n  },\r\n})\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      courses: [],\r\n      users: [],\r\n      currentUser: undefined,\r\n      loadingUser: true,\r\n      myCourseSelected: false,\r\n      allCoursesSelected: false,\r\n      createCourseSelected: false,\r\n      isDeletingCourse: false\r\n    };\r\n    this.fetchCourses = this.fetchCourses.bind(this);\r\n    this.fetchUsers = this.fetchUsers.bind(this);\r\n    this.render = this.render.bind(this);\r\n    this.updateUser = this.updateUser.bind(this);\r\n    this.setUser = this.setUser.bind(this);\r\n    this.getUserOnLoad = this.getUserOnLoad.bind(this);\r\n    this.routeClicked = this.routeClicked.bind(this);\r\n    this.deletingCourse = this.deletingCourse.bind(this);\r\n    this.fetchCourses().then(() => {\r\n      this.getUserOnLoad();\r\n    });\r\n  }\r\n\r\n  async updateUser(userId) {\r\n    if (!userId) {\r\n      this.setState({ currentUser: undefined });\r\n      this.setState({ loadingUser: false });\r\n      return;\r\n    }\r\n    await FirebaseService.getUserById(userId)\r\n      .then(result => {\r\n        const user = result.data();\r\n\r\n        if (user.createdCoursesRefs && user.createdCoursesRefs.length > 0) {\r\n\r\n          const newCourses = user.createdCoursesRefs\r\n            .map(courseRef => this.state.courses.find(course => course.id === courseRef.id));\r\n\r\n          user.createdCourses = user.createdCoursesRefs\r\n            .map(courseRef => this.state.courses.find(course => course.id === courseRef.id));\r\n        }\r\n\r\n        if (user.enrolledCoursesRefs && user.enrolledCoursesRefs.length > 0) {\r\n          user.enrolledCourses = user.enrolledCoursesRefs\r\n            .map(courseRef => this.state.courses.find(course => course.id === courseRef.id));\r\n        }\r\n\r\n        if (user.favoritedCoursesRefs && user.favoritedCoursesRefs.length > 0) {\r\n          user.favoritedCourses = user.favoritedCoursesRefs\r\n            .map(courseRef => this.state.courses.find(course => course.id === courseRef.id));\r\n        }\r\n\r\n        this.setState({ currentUser: user });\r\n        this.setState({ loadingUser: false });\r\n\r\n      })\r\n  }\r\n\r\n  deletingCourse(value) {\r\n    this.setState({\r\n      isDeletingCourse: value\r\n    }\r\n    )\r\n  }\r\n\r\n  getUserOnLoad() {\r\n    let user = FirebaseService.getCurrentUser();\r\n    if (user) {\r\n      this.updateUser(user.uid);\r\n    } else if (document.cookie.split(';').some((item) => item.trim().startsWith('userid='))) {\r\n      var cookieValue = document.cookie.replace(/(?:(?:^|.*;\\s*)userid\\s*\\=\\s*([^;]*).*$)|^.*$/, \"$1\");\r\n      this.updateUser(cookieValue);\r\n    } else {\r\n      this.updateUser(undefined);\r\n    }\r\n  }\r\n\r\n  setUser(user) {\r\n    this.updateUser(user.id);\r\n    document.cookie = `userid=${user.id}`;\r\n  }\r\n\r\n  async fetchCourses() {\r\n    let courses = [];\r\n    await FirebaseService.getAllCourses().then((queryResults) => {\r\n      queryResults.forEach((doc) => {\r\n        const course = doc.data();\r\n        const courseId = doc.id;\r\n        course.owner.get().then(user => {\r\n          course.owner = user.data();\r\n        })\r\n        course.id = courseId\r\n        courses.push(course);\r\n        this.setState({ courses: courses });\r\n      });\r\n    });\r\n  }\r\n\r\n  async fetchUsers() {\r\n    let users = [];\r\n    await FirebaseService.getAllUsers()\r\n      .then((queryResults) => {\r\n        queryResults.forEach((doc) => {\r\n          const user = doc.data();\r\n          user.id = doc.id;\r\n          users.push(user);\r\n          this.setState({\r\n            users\r\n          })\r\n        })\r\n      })\r\n  }\r\n\r\n  routeClicked(location) {\r\n    if (location === \"Course Library\" && !this.state.allCoursesSelected) {\r\n      this.setState({\r\n        allCoursesSelected: true,\r\n        myCourseSelected: false,\r\n        createCourseSelected: false,\r\n      })\r\n    } else if (location === \"My Courses\" && !this.state.myCourseSelected) {\r\n      this.setState({\r\n        allCoursesSelected: false,\r\n        myCourseSelected: true,\r\n        createCourseSelected: false,\r\n      })\r\n    } else if (location === \"Create Course\" && !this.state.createCourseSelected) {\r\n      this.setState({\r\n        allCoursesSelected: false,\r\n        myCourseSelected: false,\r\n        createCourseSelected: true,\r\n      })\r\n    } else if ((location !== \"Course Library\" && location !== \"My Courses\" && location !== \"Create Course\")\r\n      && (this.state.allCoursesSelected || this.state.myCourseSelected || this.state.createCourseSelected)) {\r\n      this.setState({\r\n        allCoursesSelected: false,\r\n        myCourseSelected: false,\r\n        createCourseSelected: false,\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    // If not logged in redirect to the login page with redirect info. Url will\r\n    // briefly flash to login while we figure out if we have a user.\r\n    const PrivateRoute = ({ isLoggedIn, ...props }) =>\r\n      this.state.currentUser\r\n        ? <Route {...props} />\r\n        : <Redirect to={{\r\n          pathname: '/login',\r\n          state: { from: props.location }\r\n        }} />\r\n\r\n    return (\r\n      <MuiThemeProvider theme={theme}>\r\n        <Router onChange={this.browserRouteChanged}>\r\n          <div>\r\n            <nav hidden={!this.state.currentUser}>\r\n              <AppBar position=\"static\">\r\n                <Toolbar>\r\n                  <MuiThemeProvider theme={buttonTheme}>\r\n                    <Button variant=\"contained\" color={this.state.allCoursesSelected ? \"secondary\" : \"primary\"} className=\"menu-button main\" component={RouterLink} to=\"/courseLibrary\">All Courses</Button>\r\n                    <Button variant=\"contained\" color={this.state.myCourseSelected ? \"secondary\" : \"primary\"} className=\"menu-button main\" component={RouterLink} to=\"/myCourses\">My Courses</Button>\r\n                    <Button variant=\"outlined\" color={this.state.createCourseSelected ? \"secondary\" : \"primary\"} className=\"menu-button align-left\" component={RouterLink} to=\"/createCourse\">Create a Course</Button>\r\n                  </MuiThemeProvider>\r\n                  <IconButton className=\"menu-button profile-icon\" component={RouterLink} to=\"/profile\" color=\"inherit\" aria-label=\"menu\">\r\n                    <AccountCircleIcon />\r\n                  </IconButton>\r\n                </Toolbar>\r\n              </AppBar>\r\n            </nav>\r\n\r\n            {/* A <Switch> looks through its children <Route>s and\r\n                renders the first one that matches the current URL. */}\r\n            <Switch>\r\n              <Route exact path=\"/login\">\r\n                <Login routeClicked={this.routeClicked} completeLogin={this.setUser} user={this.state.currentUser} loadingUser={this.state.loadingUser} />\r\n              </Route>\r\n              <PrivateRoute path=\"/(courseLibrary|)\">\r\n                <CourseLibrary routeClicked={this.routeClicked} courses={this.state.courses} user={this.state.currentUser} updateUser={this.updateUser} />\r\n              </PrivateRoute>\r\n              <PrivateRoute path=\"/courseOverview/:id\">\r\n                <CourseOverview routeClicked={this.routeClicked} editable={false} user={this.state.currentUser}></CourseOverview>\r\n              </PrivateRoute>\r\n              <PrivateRoute path=\"/myCourses\">\r\n                <MyCourses routeClicked={this.routeClicked} user={this.state.currentUser}></MyCourses>\r\n              </PrivateRoute>\r\n              <PrivateRoute path=\"/profile\">\r\n                <UserProfile routeClicked={this.routeClicked} user={this.state.currentUser} updateUser={this.updateUser}></UserProfile>\r\n              </PrivateRoute>\r\n              <PrivateRoute path=\"/createCourse\">\r\n                <CreateCourse routeClicked={this.routeClicked} user={this.state.currentUser} updateUser={this.updateUser} updateCourses={this.fetchCourses}></CreateCourse>\r\n              </PrivateRoute>\r\n              <PrivateRoute path=\"/editCourse/:id\">\r\n                <CourseOverview setDeletingCourse={this.deletingCourse} isDeletingCourse={this.state.isDeletingCourse} routeClicked={this.routeClicked} editable={true} user={this.state.currentUser} updateUser={this.updateUser} updateCourses={this.fetchCourses}></CourseOverview>\r\n              </PrivateRoute>\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n      </MuiThemeProvider>\r\n    )\r\n  }\r\n};\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}