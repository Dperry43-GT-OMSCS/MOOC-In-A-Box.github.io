{"version":3,"sources":["components/CourseCard/placeholder.png","components/CourseCard/CourseCard.js","components/CourseLibrary/CourseLibraryToolbar/SearchBar/SearchBar.component.js","components/CourseLibrary/CourseLibraryToolbar/CourseLibraryToolbarMenu/CourseLibraryToolbarMenuItem/CourseLibraryToolbarMenuItem.component.js","components/CourseLibrary/CourseLibraryToolbar/CourseLibraryToolbarMenu/CourseLibraryToolbarMenu.component.js","components/CourseLibrary/CourseLibraryToolbar/CourseLibraryToolbar.component.js","service/firebase.service.js","components/CourseLibrary/CourseLibrary.js","components/Login/Login.js","components/CoursesDropdown/CoursesDropdown.component.js","components/MyCourses/MyCourses.js","components/UserProfile/EditDialog/EditDialog.component.js","components/UserProfile/UserProfileSection/UserProfileSection.component.js","components/UserProfile/UserProfile.js","components/CreateCourse/CreateCourseDialog/CreateCourseDialog.component.js","components/CreateCourse/CreateCourse.component.js","components/CourseOverview/CourseNavigationPane/CourseChapterPanel/CourseChapterPanel.component.js","components/CourseOverview/CourseNavigationPane/CourseNavigationPane.component.js","components/CourseOverview/CourseOverviewPane/CourseLesson/CourseLesson.component.js","components/CourseOverview/CourseOverviewPane/CourseOverviewPane.component.js","components/CourseOverview/Dialogs/CreateChapterDialog/CreateChapterDialog.component.js","components/CourseOverview/Dialogs/CreateLessonDialog/CreateLessonDialog.component.js","components/CourseOverview/Dialogs/DeleteDialog/DeleteDialog.component.js","components/CourseOverview/CourseOverview.component.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","maxWidth","minWidth","maxHeight","minHeight","position","media","paddingTop","marginLeft","marginRight","expand","transform","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","actionsRow","bottom","left","content","overflow","textOverflow","display","WebkitLineClamp","WebkitBoxOrient","CourseCard","props","classes","React","useState","isFavorited","setIsFavorited","isCourseAFavorite","Card","variant","className","CardHeader","title","course","subheader","owner","displayName","name","action","IconButton","aria-label","onClick","removeFavoriteClicked","favoriteClicked","CardMedia","image","thumbnailUrl","placeholder","CardContent","Typography","color","component","description","CardActions","Button","Link","to","id","SearchBar","TextField","value","searchValue","onChange","type","onSearchClicked","CourseLibraryToolbarMenuItem","FormControlLabel","control","Radio","label","CourseLibraryToolbarMenu","menuItems","options","map","option","handleClick","associatedClickFunction","Menu","menuId","anchorEl","element","keepMounted","open","Boolean","onClose","closeFunction","MenuItem","FormControl","FormLabel","menuLabel","RadioGroup","radioGroupName","menuValue","event","target","CourseLibraryToolbar","menuButtons","menuItem","clickedFunction","buttonText","menus","menuOptions","AppBar","Toolbar","searchInfo","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","storageRef","storage","ref","getUserById","userId","collection","doc","get","getAllUsers","updateUser","updates","a","set","merge","createUser","userAuth","uid","photoURL","email","getCurrentUser","user","auth","currentUser","deleteUser","delete","then","document","cookie","catch","error","getCourseById","courseId","courseResult","exists","data","addImage","imageFile","child","put","getImageUrl","getDownloadURL","createCourse","courseInfo","userDocRef","newCourseObj","chapters","overview","JSON","stringify","add","courseDoc","usersCreatedCourses","createdCoursesRefs","length","courseRef","push","thumbnailFile","imageRef","imageUrl","courseUpdate","updateCourse","courseDocWithImage","updateObject","favoriteCourse","favoritedCourses","favoritedCoursesRefs","removeFavoriteCourse","filter","item","deleteCourseInFirebase","courseDeletedResult","queryResults","updateUsersPromises","forEach","createdCoursesRefLength","favoritedCourseRefs","Promise","all","deleteAllChapters","arrayOfLessonPromises","deleteLessons","chapter","lessonsRef","deleteCourse","addNewChapter","newChapterInfo","updateLesson","chapterInfo","lessonInfo","lessonDoc","lessonRef","deleteLesson","lesson","courseChapters","chapterInside","lessonsRefs","lessons","lessonInside","result","logUserInUser","isGoog","provider","GoogleAuthProvider","FacebookAuthProvider","users","undefined","authUser","signInWithPopup","u","console","log","signOut","getDocFromDocRef","docRef","myResult","CourseLibrary","sortByClicked","setState","sortByElement","currentTarget","sortByHandleClose","sortFilterValue","topicClicked","topicElement","topicHandleClose","topicFilterValue","organizationClicked","organizationElement","organizationHandleClosed","organizationFilterValue","buildMenuItems","state","find","favoritedCourse","handleSearchChange","bind","handleSearchClicked","activeCourses","courses","routeClicked","e","searchValueLowerCase","toLowerCase","this","includes","FirebaseService","listItems","Grid","s","class","container","spacing","Component","LoginPage","redirectToReferrer","loginGoogle","loginFacebook","completeLogin","history","loadingUser","CircularProgress","from","location","pathname","withRouter","CoursesDropdownComponent","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","xs","md","List","dense","ListItem","RouterLink","includeEditIcon","CurrentCoursesComponent","currentCourses","PastCoursesComponent","pastCourses","SavedCoursesComponent","savedCourses","CreatedCoursesComponent","createdCourses","MyCourses","setUser","useEffect","courseComponentList","hasCourses","pastCourse","CssBaseline","Container","Paper","EditDialog","Dialog","isOpen","handleClose","aria-labelledby","DialogTitle","field","DialogContent","DialogContentText","autoFocus","margin","fullWidth","DialogActions","handleSubmit","userKeyToDisplayMap","UserProfileSection","align","displayValue","isEditable","openDialog","isDialogOpen","displayKey","setDisplayName","oldDisplayName","setOldDiplayName","isDisplayNameDialogOpen","setIsDisplayNameDialogOpen","userInterests","setUserInterests","oldUserInterests","setOldUserInterests","isUserInterestsDialogOpen","setIsUserInterestsDialogOpen","res","interests","err","Divider","CreateCourseDialog","setDescription","setTitle","editorState","setEditorState","setOverview","isTitleError","setIsTitleError","isDescriptionError","setIsDescriptionError","setThumbnailFile","EditorState","createWithContent","convertFromRaw","parse","createEmpty","required","Input","file","files","helperText","editorClassName","handleKeyCommand","command","newState","RichUtils","convertToRaw","getCurrentContent","onEditorStateChange","titleIsGood","descriptionIsGood","currentContentState","courseDetails","CreateCourse","isCreateCourseDialogOpen","setIsCreateCourseDialogOpen","useHistory","updateCourses","currnetCoursesSection","CourseChapterPanel","addNewLessonButton","lessonItems","isActiveLesson","activeLesson","selected","setChapterInContext","setActiveLesson","listItemClicked","button","ListItemText","primary","editable","openLessonModal","defaultExpanded","chapterInContext","CourseNavigationPane","addNewChapterButton","deleteCourseButton","courseNavigationPanels","openCreateChapterDialog","openDeleteDialog","size","YoutubeComponentConfig","opts","height","width","playerVars","autoplay","videoId","EditCourseLesson","hasYoutubeVideo","goToPreviousLesson","navigateToPreviousLesson","goToNextLesson","navigateToNextLesson","str","isJson","contentStateObj","toolbarHidden","readOnly","text","ContentState","createFromText","youtubeConfig","url","video","myParamters","split","searchParams","URLSearchParams","getVideoConfig","onReady","pauseVideo","isFirstLesson","isLastLesson","nextLesson","nextChapter","leftButton","endIcon","prevLesson","prevChapter","rightButton","startIcon","getButtonDiv","CourseOverviewPane","openEditCourseOverviewDialogButton","editLessonButton","lessonArray","i","j","openEditCourseOverviewDialog","currentLessonIndex","indexOf","currentLessonIndexInChapter","activeChapter","numLessonsInChapter","numChapters","activeChapterIndex","getLessonInformation","indexOfCurrentLesson","CreateChapterDialog","CreateLessonDialog","setVideo","isYoutubeError","setIsYoutubeError","wrapperClassName","descriptionJSON","tempVideo","DeleteDialog","aria-describedby","deleteType","dialogs","viewPublishedCourseButton","useParams","setCourse","isCreateChapterDialogOpen","setIsCreateChapterDialogOpen","isCreateLessonDialogOpen","setIsCreateLessonDialogOpen","isEditCourseOverviewDialogOpen","setIsEditCourseOverviewDialogOpen","isDeleteDialogOpen","setIsDeleteDialogOpen","addLesson","setAddLesson","setDeleteType","objToDelete","setObjToDelete","openCreateLessonDialog","setDeletingCourse","resolveLessons","results","resolve","resolveChapters","isDeletingCourse","updatedLesson","buttonTheme","createMuiTheme","palette","main","secondary","typography","useNextVariants","overrides","MuiButton","textTransform","light","dark","App","myCourseSelected","allCoursesSelected","createCourseSelected","fetchCourses","fetchUsers","render","getUserOnLoad","deletingCourse","pastCoursesRefs","some","trim","startsWith","cookieValue","replace","PrivateRoute","isLoggedIn","browserRouteChanged","hidden","exact","path","window","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.ccaa395f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/placeholder.fa9f1a41.png\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { Button } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom'\r\nimport FavoriteBorderOutlinedIcon from '@material-ui/icons/FavoriteBorderOutlined';\r\nimport './CourseCard.css';\r\nimport placeholder from './placeholder.png';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    maxWidth: 345,\r\n    minWidth: 345,\r\n    maxHeight: 400,\r\n    minHeight: 400,\r\n    position: 'relative',\r\n  },\r\n  media: {\r\n    paddingTop: '56.25%', // 16:9\r\n    maxWidth: '50%',\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\"\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n  actionsRow: {\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    left: 0\r\n  },\r\n  content: {\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis',\r\n    display: '-webkit-box',\r\n    WebkitLineClamp: '2',\r\n    WebkitBoxOrient: 'vertical',\r\n  }\r\n}));\r\n\r\nexport default function CourseCard(props) {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  const [isFavorited, setIsFavorited] = React.useState(false)\r\n\r\n  if (props.isCourseAFavorite != isFavorited) {\r\n    setIsFavorited(props.isCourseAFavorite);\r\n  }\r\n\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  const favoriteButtonClicked = () => {\r\n    if (isFavorited) {\r\n      setIsFavorited(false);\r\n      props.removeFavoriteClicked(props.course);\r\n    } else {\r\n      setIsFavorited(true);\r\n      props.favoriteClicked(props.course);\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <Card variant=\"outlined\" className={classes.root}>\r\n      <CardHeader\r\n        title={props.course.title}\r\n        subheader={props.course.owner.displayName ? props.course.owner.displayName : props.course.owner.name}\r\n        action={\r\n          <IconButton aria-label=\"add to favorites\" onClick={favoriteButtonClicked}>\r\n            {isFavorited ? <FavoriteIcon /> : <FavoriteBorderOutlinedIcon />}\r\n          </IconButton>\r\n        }\r\n      />\r\n      <CardMedia\r\n        className={classes.media}\r\n        image={props.course.thumbnailUrl ? props.course.thumbnailUrl : placeholder}\r\n      />\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" className={classes.content}>\r\n          {props.course.description}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions className={classes.actionsRow} >\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          component={Link}\r\n          to={`/courseOverview/${props.course.id}`}\r\n        >\r\n          Overview\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}","import React from 'react';\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { IconButton } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport './SearchBar.css';\r\n\r\nfunction SearchBar(props) {\r\n  return (\r\n    <div className=\"search-bar\">\r\n      <TextField value={props.searchValue} onChange={props.onChange} id=\"outlined-search\" type=\"search\" variant=\"outlined\" color=\"secondary\" />\r\n      <IconButton className=\"menu-button\" onClick={props.onSearchClicked}>\r\n        <SearchIcon className=\"search-bar-icon\" />\r\n      </IconButton>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchBar\r\n\r\n\r\n","import React from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\n\r\nfunction CourseLibraryToolbarMenuItem(props){\r\n    return (\r\n      <FormControlLabel value={props.value} control={<Radio />} label={props.value} />\r\n    )\r\n  }\r\n\r\n  export default CourseLibraryToolbarMenuItem","import React from 'react';\r\n\r\nimport Menu from '@material-ui/core/Menu';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport CourseLibraryToolbarMenuItem from './CourseLibraryToolbarMenuItem/CourseLibraryToolbarMenuItem.component';\r\n\r\n\r\n\r\nfunction CourseLibraryToolbarMenu(props){\r\n\r\n  let menuItems = props.options.map( option => {\r\n    return (\r\n      <CourseLibraryToolbarMenuItem\r\n        handleClick={option.associatedClickFunction}\r\n        value={option.display}>\r\n      </CourseLibraryToolbarMenuItem>\r\n    )\r\n  })\r\n\r\n  const onChangeFunction = (event) => {\r\n    props.closeFunction(event.target.value)\r\n  }\r\n\r\n    return (\r\n      <Menu\r\n          id={props.menuId}\r\n          anchorEl={props.element}\r\n          keepMounted\r\n          open={Boolean(props.element)}\r\n          onClose={props.closeFunction}\r\n        >\r\n          <MenuItem>\r\n            <FormControl component=\"fieldset\">\r\n            <FormLabel component=\"legend\">{props.menuLabel}</FormLabel>\r\n            <RadioGroup aria-label=\"gender\" name={props.radioGroupName} value={props.menuValue} onChange={onChangeFunction}>\r\n              {menuItems}\r\n            </RadioGroup>\r\n            </FormControl>\r\n          </MenuItem>\r\n      </Menu>\r\n    )\r\n  }\r\n\r\n  export default CourseLibraryToolbarMenu","import React from 'react';\r\n\r\nimport {AppBar, Toolbar, IconButton, Typography } from '@material-ui/core';\r\nimport {Button} from '@material-ui/core';\r\n\r\nimport SearchBar from './SearchBar/SearchBar.component';\r\nimport CourseLibraryToolbarMenu from './CourseLibraryToolbarMenu/CourseLibraryToolbarMenu.component'\r\n\r\n\r\n//<CourseLibraryMenu handleClose={this.handleClose} sortByElement={props.state.sortByElement}></CourseLibraryMenu>\r\n\r\n\r\nfunction CourseLibraryToolbar(props){\r\n\r\n    let menuButtons = props.menuItems.map(menuItem => {\r\n        return (\r\n            <Button\r\n                color=\"inherit\" \r\n                className=\"menu-button\"\r\n                onClick={menuItem.clickedFunction}\r\n            >\r\n                {menuItem.buttonText}\r\n            </Button>\r\n        )\r\n    })\r\n\r\n    let menus = props.menuItems.map(menuItem => {\r\n        return(\r\n            <CourseLibraryToolbarMenu\r\n                element={menuItem.element}\r\n                closeFunction = {menuItem.closeFunction}\r\n                options={menuItem.menuOptions}\r\n                menuId={menuItem.menuId}\r\n                menuLabel={menuItem.buttonText}\r\n            >\r\n            </CourseLibraryToolbarMenu>\r\n        )\r\n    })\r\n\r\n    return(\r\n        <AppBar position=\"static\" className=\"course-library-app-bar\">\r\n            <Toolbar>\r\n                {menuButtons}\r\n                <SearchBar searchValue={props.searchInfo.value} onChange={props.searchInfo.onChange} onSearchClicked={props.searchInfo.onClick}></SearchBar>\r\n            </Toolbar>\r\n            {menus}\r\n      </AppBar>\r\n    )\r\n}\r\n\r\nexport default CourseLibraryToolbar","import firebase from 'firebase'\r\n\r\n\r\n/**\r\n * Firebase Set Up\r\n */\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyA8tAHYGUiNkFHq6452W4Qr79eibVmtRZA\",\r\n    authDomain: \"mooc-in-a-box.firebaseapp.com\",\r\n    databaseURL: \"https://mooc-in-a-box.firebaseio.com\",\r\n    projectId: \"mooc-in-a-box\",\r\n    storageBucket: \"mooc-in-a-box.appspot.com\",\r\n    messagingSenderId: \"594314585164\",\r\n    appId: \"1:594314585164:web:3ae152452d1c238af100e9\",\r\n    measurementId: \"G-LXH34JCXZS\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nconst db = firebase.firestore();\r\nvar storageRef = firebase.storage().ref();\r\n\r\n\r\n\r\n/*\r\n* -----------------------------------------------------------\r\n*  USER Functions\r\n* -----------------------------------------------------------\r\n*/\r\n\r\nexport const getUserById = userId => {\r\n    return db.collection('Users').doc(userId).get();\r\n}\r\n\r\nexport const getAllUsers = () => {\r\n    return db.collection('Users').get();\r\n}\r\n\r\nexport const updateUser = async (userId, updates) => {\r\n    return db.collection('Users')\r\n        .doc(userId)\r\n        .set(updates, { merge: true })\r\n}\r\n\r\nexport const createUser = async (userAuth) => {\r\n    return db.collection('Users')\r\n        .doc(userAuth.uid)\r\n        .set({\r\n            id: userAuth.uid,\r\n            name: userAuth.displayName,\r\n            photoURL: userAuth.photoURL,\r\n            email: userAuth.email,\r\n        },\r\n            { merge: true }\r\n        )\r\n}\r\n\r\nexport const getCurrentUser = () => {\r\n    var user = firebase.auth().currentUser;\r\n    if (user) {\r\n        return user;\r\n    } else {\r\n        return undefined;\r\n    }\r\n}\r\n\r\nexport const deleteUser = async () => {\r\n    var user = firebase.auth().currentUser;\r\n\r\n    return await user.delete().then(function () {\r\n        document.cookie = 'userid=; expires=Thu, 01 Jan 1970 00:00:01 GMT;';\r\n        return true;\r\n    }).catch(function (error) {\r\n        return false;\r\n    });\r\n}\r\n\r\n\r\n\r\n/*\r\n* -----------------------------------------------------------\r\n*  Course Functions\r\n* -----------------------------------------------------------\r\n*/\r\n\r\nexport const getCourseById = courseId => {\r\n    return db.collection('Course')\r\n        .doc(courseId)\r\n        .get()\r\n        .then(async courseResult => {\r\n            if (courseResult.exists) {\r\n                const course = courseResult.data();\r\n                course.id = courseId;\r\n                return course;\r\n            } else {\r\n                return null\r\n            }\r\n        });\r\n};\r\n\r\nexport const getAllCourses = () => {\r\n    return db.collection('Course').get();\r\n}\r\n\r\n\r\nexport const addImage = (courseId, imageFile) => {\r\n    const courseImageRef = storageRef.child(`images/courses/${courseId}/${imageFile.name}`);\r\n    return courseImageRef.put(imageFile);\r\n}\r\n\r\nexport const getImageUrl = (courseId, imageFile) => {\r\n    const courseImageRef = storageRef.child(`images$s/${courseId}/${imageFile.name}`);\r\n    return courseImageRef.getDownloadURL();\r\n\r\n}\r\n\r\nexport const createCourse = async (user, courseInfo) => {\r\n    const userDocRef = db.doc(`Users/${user.id}`)\r\n\r\n    const newCourseObj = {\r\n        owner: userDocRef,\r\n        title: courseInfo.title,\r\n        description: courseInfo.description,\r\n        chapters: courseInfo.chapters\r\n    }\r\n\r\n    if (courseInfo.overview) {\r\n        newCourseObj.overview = JSON.stringify(courseInfo.overview)\r\n    }\r\n\r\n    // Create Course\r\n    return await db.collection('Course').add(newCourseObj)\r\n        .then(async courseDoc => {\r\n\r\n            let usersCreatedCourses;\r\n            if (user.createdCoursesRefs && user.createdCoursesRefs.length > 0) {\r\n                usersCreatedCourses = user.createdCoursesRefs;\r\n            } else {\r\n                usersCreatedCourses = []\r\n            }\r\n            const courseRef = db.doc(`Course/${courseDoc.id}`)\r\n            usersCreatedCourses.push(courseRef);\r\n\r\n\r\n            // Check If Image Was Included\r\n            if(courseInfo.thumbnailFile){\r\n                // Upload Image\r\n                return await addImage(courseDoc.id, courseInfo.thumbnailFile)\r\n                    .then( async imageRef => {\r\n\r\n                       return await getImageUrl(courseDoc.id, courseInfo.thumbnailFile)\r\n                        .then( async imageUrl => {\r\n                            const courseUpdate = {\r\n                                thumbnailUrl: imageUrl\r\n                            };\r\n\r\n                            return await updateCourse(courseDoc.id, courseUpdate )\r\n                                .then( async courseDocWithImage => {                                                                \r\n                                    const updateObject = {\r\n                                        createdCoursesRefs: usersCreatedCourses\r\n                                    }\r\n\r\n                                return await updateUser(user.id, updateObject);\r\n                            })\r\n                        })\r\n                    });\r\n            } else {\r\n                // No Image\r\n                const updateObject = {\r\n                    createdCoursesRefs: usersCreatedCourses\r\n                }\r\n                return await updateUser(user.id, updateObject);\r\n            }\r\n        })\r\n}\r\n\r\nexport const favoriteCourse = async (user, courseInfo) => {\r\n    const courseRef = db.doc(`Course/${courseInfo.id}`)\r\n    let favoritedCourses;\r\n\r\n    if (user.favoritedCoursesRefs && user.favoritedCoursesRefs.length > 0) {\r\n        favoritedCourses = user.favoritedCoursesRefs;\r\n    } else {\r\n        favoritedCourses = []\r\n    }\r\n\r\n    favoritedCourses.push(courseRef);\r\n\r\n    const updateObject = {\r\n        favoritedCoursesRefs: favoritedCourses\r\n    }\r\n\r\n    return await updateUser(user.id, updateObject);\r\n}\r\n\r\nexport const removeFavoriteCourse = async (user, courseInfo) => {\r\n    const favoritedCourses = user.favoritedCoursesRefs.filter(item => item.id !== courseInfo.id);\r\n    const updateObject = {\r\n        favoritedCoursesRefs: favoritedCourses\r\n    }\r\n\r\n    return await updateUser(user.id, updateObject);\r\n}\r\n\r\n\r\nexport const updateCourse = async (courseId, updates) => {\r\n\r\n    if (updates.overview) {\r\n        updates.overview = JSON.stringify(updates.overview);\r\n    }\r\n\r\n    if( updates.thumbnailFile) {\r\n        return await addImage(courseId, updates.thumbnailFile)\r\n            .then( async imageRef => {\r\n\r\n           return await getImageUrl(courseId, updates.thumbnailFile)\r\n            .then( async imageUrl => {\r\n\r\n                delete updates.thumbnailFile;\r\n                updates.thumbnailUrl = imageUrl\r\n\r\n                return db.collection('Course')\r\n                .doc(courseId)\r\n                .set(updates, { merge: true });\r\n            })\r\n        })\r\n    } else{ \r\n        return db.collection('Course')\r\n            .doc(courseId)\r\n            .set(updates, { merge: true });\r\n    }\r\n}\r\n\r\n\r\nconst deleteCourseInFirebase = async (courseId) => {\r\n\r\n    return db.collection('Course').doc(courseId).delete().then( async courseDeletedResult => {\r\n        return await getAllUsers().then(async (queryResults) => {\r\n            const updateUsersPromises = []\r\n\r\n            queryResults.forEach((doc) => {\r\n                let updateUser = false;\r\n                const user = doc.data();\r\n                user.id = doc.id;\r\n                // const createdCoursesRefLength =  user.createdCoursesRefs?.length();\r\n                // const favoritedCourseRefs = user.favoritedCoursesRefs?.length();\r\n                \r\n                if(user.createdCoursesRefs && user.createdCoursesRefs.length > 0) {\r\n                    const createdCoursesRefLength =  user.createdCoursesRefs.length;\r\n                    user.createdCoursesRefs = user.createdCoursesRefs.filter( courseRef => courseRef.id !== courseId );\r\n                    if (user.createdCoursesRefs.length !== createdCoursesRefLength){\r\n                        updateUser = true;\r\n                    }\r\n                }\r\n\r\n                if(user.favoritedCourseRefs && user.favoritedCourseRefs.length > 0){\r\n                    const favoritedCourseRefs = user.favoritedCoursesRefs.length;\r\n                    user.favoritedCourseRefs = user.favoritedCoursesRefs.filter( courseRef => courseRef.id !== courseId);\r\n                    if (user.favoritedCourseRefs.length !== favoritedCourseRefs) {\r\n                        updateUser = true;\r\n                    }\r\n                }\r\n        \r\n                if (updateUser){\r\n                    updateUsersPromises.push( db.collection('Users').doc(user.id).set(user, { merge: true }) );\r\n                }\r\n            })\r\n\r\n            return await Promise.all(updateUsersPromises);\r\n        })\r\n    });\r\n}\r\n\r\n\r\nconst deleteAllChapters= async (course) => {\r\n    const arrayOfLessonPromises = [];\r\n    let deleteLessons = false;\r\n    for (const chapter of course.chapters) {\r\n        if (chapter.lessonsRef?.length > 0){\r\n            deleteLessons = true;\r\n            break;\r\n        }\r\n    }\r\n    if (deleteLessons){\r\n        // var batch = firebase.firestore().batch()\r\n\r\n        db.collection(`/Course/${course.id}/Lessons`).get()\r\n            .then(queryResults => {\r\n                // values.map(val => {\r\n                //     batch.delete(val)\r\n                // })\r\n                queryResults.forEach( doc => {\r\n                    arrayOfLessonPromises.push(\r\n                        db.collection(`/Course/${course.id}/Lessons/`).doc(doc.id).delete()\r\n                    )\r\n                })\r\n            })\r\n        \r\n            return await Promise.all(arrayOfLessonPromises);\r\n        }\r\n}\r\n\r\n// const deleteChapter = async (course, chapter) => {\r\n//     db.collection(`/Course/${course.id}/`)\r\n// }\r\n\r\n\r\n\r\nexport const deleteCourse = async (course) => {\r\n\r\n    if (course.chapters?.length > 0 ){\r\n        await deleteAllChapters(course)\r\n    }\r\n    return await deleteCourseInFirebase(course.id);\r\n}\r\n\r\n\r\n/*\r\n* !!!!!!!!\r\n* Course Attributes Section\r\n* !!!!!!!!\r\n*/\r\nexport const updateCourseOverview = async (course, content) => {\r\n    const contentJSON = JSON.stringify(content);\r\n\r\n    const updateObject = {\r\n        overview: contentJSON\r\n    }\r\n\r\n    return await updateCourse(course.id, updateObject);\r\n}\r\n\r\nexport const addNewChapter = async (course, newChapterInfo) => {\r\n    const chapter = {}\r\n    chapter.title = newChapterInfo.title;\r\n    chapter.description = newChapterInfo.description;\r\n    chapter.id = 0\r\n    chapter.lessonsRef = [];\r\n\r\n    if (course.chapters && course.chapters.length > 0) {\r\n        chapter.id = course.chapters.length;\r\n        course.chapters.push(chapter);\r\n    } else {\r\n        course.chapters = [];\r\n        course.chapters.push(chapter);\r\n    }\r\n\r\n    const updateObject = {\r\n        chapters: course.chapters\r\n    }\r\n\r\n    return await updateCourse(course.id, updateObject);\r\n\r\n}\r\n\r\nexport const updateLesson = async (course, chapterInfo, lessonInfo, add) => {\r\n    if (add) { // For initial lesson creation.\r\n        delete lessonInfo.id; // cuz undefined is not allowed\r\n        return await db.collection('Course').doc(course.id).collection('Lessons').add(lessonInfo)\r\n            .then(async lessonDoc => {\r\n                const lessonRef = db.doc(`Course/${course.id}/Lessons/${lessonDoc.id}`);\r\n                const chapters = course.chapters.map(chapter => {\r\n                    if (chapter === chapterInfo) {\r\n                        chapter.lessonsRef.push(lessonRef);\r\n                    }\r\n                    return chapter\r\n                });\r\n\r\n                const updateObject = {\r\n                    chapters\r\n                }\r\n                return await updateCourse(course.id, updateObject)\r\n            });\r\n    } else {\r\n        const lessonRef = db.doc(`Course/${course.id}/Lessons/${lessonInfo.id}`);\r\n        return await lessonRef.set(lessonInfo, { merge: true });\r\n    }\r\n}\r\n\r\nexport const deleteLesson = async (course, chapter, lesson) => {\r\n\r\n    const courseChapters = course.chapters.map( chapterInside => {\r\n        if (chapterInside.title === chapter.title ) {\r\n            const lessonsRefs = [];\r\n            chapterInside.lessonsRef.forEach( lessonRef => {\r\n                if (lessonRef.id !== lesson.id){\r\n                    lessonsRefs.push(lesson);\r\n                }\r\n            })\r\n            chapterInside.lessonsRef = lessonsRefs;\r\n\r\n            const lessons = []\r\n            chapterInside.lessons.forEach( lessonInside => {\r\n                if (lessonInside.id !== lesson.id){\r\n                    lessons.push(lesson);\r\n                }\r\n            })\r\n            chapterInside.lessons = lessons;\r\n        }\r\n        return chapterInside;\r\n    });\r\n\r\n\r\n    return await db.collection(`/Course/${course.id}/Lessons`).doc(lesson.id).delete().then(async result => {\r\n        return await updateCourse(course.id, {\r\n            chapters: courseChapters\r\n        });\r\n    });\r\n  \r\n}\r\n\r\n\r\n/*\r\n* -----------------------------------------------------------\r\n*  Login Functions\r\n* -----------------------------------------------------------\r\n*/\r\n\r\nexport const logUserInUser = async (isGoog) => {\r\n    let provider;\r\n    isGoog ? provider = new firebase.auth.GoogleAuthProvider() :\r\n        provider = new firebase.auth.FacebookAuthProvider();\r\n    let users = [];\r\n    let currentUser = undefined;\r\n    let authUser = undefined;\r\n    // Get all users so we can see if the logged in one is one of ours.\r\n    // TODO(jessi): store this data so we don't need to fetch it, or directly ask for the user\r\n    // once they log in and if no user exists create one. Sounds like work.\r\n    await getAllUsers()\r\n        .then((queryResults) => {\r\n            queryResults.forEach((doc) => {\r\n                const user = doc.data();\r\n                user.id = doc.id;\r\n                users.push(user);\r\n            })\r\n        });\r\n\r\n    return await firebase.auth().signInWithPopup(provider).then(async function (result) {\r\n        authUser = result.user;\r\n        users.forEach(u => {\r\n            if (u.id === authUser.uid) {\r\n                currentUser = u;\r\n            }\r\n        });\r\n        // Didn't find an existing user.\r\n        if (currentUser === undefined) {\r\n            // Create new user\r\n            await createUser(authUser).then(async () => {\r\n                // Get the new user to return\r\n                return getCurrentUser();\r\n            }).catch(error => {\r\n                console.log(error);\r\n            });\r\n        }\r\n        return currentUser;\r\n    }).catch(function (error) {\r\n        console.log(error);\r\n    });\r\n}\r\n\r\nexport const signOut = async () => {\r\n    return await firebase.auth().signOut().then(function () {\r\n        document.cookie = 'userid=; expires=Thu, 01 Jan 1970 00:00:01 GMT;';\r\n        return true;\r\n    }).catch(function (error) {\r\n        console.log(error);\r\n        return false;\r\n    });\r\n}\r\n\r\n\r\n\r\n/*\r\n* -----------------------------------------------------------\r\n*  Utility Functions\r\n* -----------------------------------------------------------\r\n*/\r\n\r\nexport const getDocFromDocRef = docRef => {\r\n    return docRef.get()\r\n        .then(result => {\r\n            if (result.exists) {\r\n                const myResult = result.data();\r\n                myResult.id = result.id;\r\n                return myResult;\r\n            } else {\r\n                return null;\r\n            }\r\n        })\r\n}","import React from 'react';\r\nimport './CourseLibrary.css';\r\nimport {Button} from '@material-ui/core';\r\nimport CourseCard from '../CourseCard/CourseCard';\r\nimport { render } from '@testing-library/react';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {AppBar, Toolbar, IconButton, Typography } from '@material-ui/core';\r\nimport SearchBar from './CourseLibraryToolbar/SearchBar/SearchBar.component';\r\nimport CourseLibraryMenu from './CourseLibraryToolbar/CourseLibraryToolbarMenu/CourseLibraryToolbarMenu.component'\r\nimport CourseLibraryToolbar from './CourseLibraryToolbar/CourseLibraryToolbar.component'\r\n\r\nimport * as FirebaseService from '../../service/firebase.service';\r\n\r\n\r\nclass CourseLibrary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // Bind Search\r\n    this.handleSearchChange = this.handleSearchChange.bind(this);\r\n    this.handleSearchClicked = this.handleSearchClicked.bind(this);\r\n    // Bind Sort By\r\n    this.sortByClicked = this.sortByClicked.bind(this);\r\n    this.sortByHandleClose = this.sortByHandleClose.bind(this);\r\n    // Bind Topic\r\n    this.topicClicked = this.topicClicked.bind(this);\r\n    this.topicHandleClose = this.topicHandleClose.bind(this);\r\n    // Bind Organization\r\n    this.organizationClicked = this.organizationClicked.bind(this);\r\n    this.organizationHandleClosed = this.organizationHandleClosed.bind(this);\r\n\r\n    this.buildMenuItems = this.buildMenuItems.bind(this);\r\n    this.favoriteClicked = this.favoriteClicked.bind(this);\r\n    this.removeFavoriteClicked = this.removeFavoriteClicked.bind(this);\r\n    this.state = {\r\n      searchValue: \"\",\r\n      sortByElement: null,\r\n      topicElement: null,\r\n      organizationElement: null,\r\n      sortFilterValue: null,\r\n      topicFilterValue: null,\r\n      organizationFilterValue:null,\r\n      activeCourses: props.courses\r\n    }\r\n    props.routeClicked(\"Course Library\");\r\n  }\r\n\r\n  /** Search Function */\r\n  handleSearchChange(e){\r\n    const searchValue = e.target.value;\r\n    const searchValueLowerCase = searchValue.toLowerCase();\r\n    const activeCourses = this.props.courses.filter(course => \r\n      ( course.title?.toLowerCase().includes(searchValueLowerCase) \r\n      || course.description?.toLowerCase().includes(searchValueLowerCase) \r\n      || course.owner.displayName?.toLowerCase().includes(searchValueLowerCase) \r\n      ))\r\n    this.setState({\r\n      searchValue,\r\n      activeCourses\r\n    })\r\n  }\r\n\r\n  handleSearchClicked(e){\r\n  }\r\n\r\n  /** Sort By Functions */\r\n  sortByClicked = event => {\r\n    this.setState({\r\n      sortByElement: event.currentTarget\r\n    });\r\n  };\r\n\r\n  sortByHandleClose = (value) => {\r\n    this.setState({\r\n      sortByElement: null,\r\n      sortFilterValue: value\r\n    });\r\n  };\r\n\r\n\r\n  /** Topic Functions */\r\n  topicClicked = event => {\r\n    this.setState({\r\n      topicElement: event.currentTarget\r\n    });\r\n  };\r\n\r\n  topicHandleClose = (value) => {\r\n    this.setState({\r\n      topicElement: null,\r\n      topicFilterValue: value\r\n    });\r\n  };\r\n\r\n  /** Organization functions */\r\n  organizationClicked = event => {\r\n    this.setState({\r\n      organizationElement: event.currentTarget\r\n    });\r\n  };\r\n\r\n  organizationHandleClosed = (value) => {\r\n    this.setState({\r\n      organizationElement: null,\r\n      organizationFilterValue: value\r\n    });\r\n  };\r\n\r\n  async favoriteClicked(course) {\r\n    await FirebaseService.favoriteCourse(this.props.user, course);\r\n    this.props.updateUser(this.props.user.id)\r\n  }\r\n\r\n  async removeFavoriteClicked(course){\r\n    await FirebaseService.removeFavoriteCourse(this.props.user, course);\r\n    this.props.updateUser(this.props.user.id)\r\n\r\n  }\r\n\r\n  buildMenuItems = () => {\r\n    const sortByInfo = {\r\n      buttonText: \"Sort By\",\r\n      menuId: \"menu-sort-by\",\r\n      clickedFunction: this.sortByClicked,\r\n      closeFunction: this.sortByHandleClose,\r\n      element: this.state.sortByElement,\r\n      radioGroupName: \"menuRadio\",\r\n      menuValue: this.state.sortFilterValue,\r\n      menuOptions: [\r\n        {\r\n          display: \"Newest\",\r\n          associatedClickFunction:  this.sortByHandleClose\r\n        },\r\n        {\r\n          display: \"Recommended\",\r\n          associatedClickFunction:  this.sortByHandleClose\r\n        },\r\n        {\r\n          display: \"Trending\",\r\n          associatedClickFunction:  this.sortByHandleClose\r\n        }\r\n      ]\r\n    }\r\n\r\n    const topicInfo = {\r\n      buttonText: \"Topic\",\r\n      menuId: \"menu-topic\",\r\n      clickedFunction: this.topicClicked,\r\n      element: this.state.topicElement,\r\n      closeFunction: this.topicHandleClose,\r\n      radioGroupName: \"topicRadio\",\r\n      menuValue: this.state.topicFilterValue,\r\n      menuOptions: [\r\n        {\r\n          display: \"Science\",\r\n          associatedClickFunction:  this.topicHandleClose\r\n        },\r\n        {\r\n          display: \"Technology\",\r\n          associatedClickFunction:  this.topicHandleClose\r\n        },\r\n        {\r\n          display: \"History\",\r\n          associatedClickFunction:  this.topicHandleClose\r\n        },\r\n        {\r\n          display: \"Arts\",\r\n          associatedClickFunction:  this.topicHandleClose\r\n        }\r\n      ]\r\n    }\r\n\r\n    const organizationInfo = {\r\n      buttonText: \"Organization\",\r\n      menuId: \"menu-organization\",\r\n      clickedFunction: this.organizationClicked,\r\n      element: this.state.organizationElement,\r\n      closeFunction: this.organizationHandleClosed,\r\n      radioGroupName: \"organizationRadio\",\r\n      menuValue: this.state.organizationFilterValue,\r\n      menuOptions: [\r\n        {\r\n          display: \"Required\",\r\n          associatedClickFunction:  this.organizationHandleClosed\r\n        },\r\n        {\r\n          display: \"Recommended\",\r\n          associatedClickFunction:  this.organizationHandleClosed\r\n        },\r\n        {\r\n          display: \"All Courses\",\r\n          associatedClickFunction:  this.organizationHandleClosed\r\n        }\r\n      ]\r\n    }\r\n\r\n    return [sortByInfo, topicInfo, organizationInfo];\r\n  }\r\n\r\n  isCourseAFavorite = (user, course) => {\r\n    \r\n    if( user.favoritedCourses && user.favoritedCourses.length > 0 ){\r\n      return user.favoritedCourses\r\n        .find(favoritedCourse => favoritedCourse.id === course.id);\r\n    }\r\n    return false;\r\n  }\r\n\r\n\r\n  render() {\r\n    // Mappings\r\n    const menuItems = this.buildMenuItems();\r\n    const favoriteClicked = this.favoriteClicked;\r\n    const isCourseAFavorite = this.isCourseAFavorite;\r\n    const removeFavoriteClicked = this.removeFavoriteClicked\r\n\r\n    const user = this.props.user;\r\n    const searchInfo = {\r\n      value: this.state.searchValue,\r\n      onChange: this.handleSearchChange,\r\n      onClick: this.handleSearchClicked\r\n    }\r\n    let listItems = []\r\n    if (user) {\r\n\r\n      listItems = this.state.activeCourses.map(function(item) {\r\n        return (\r\n            <Grid item s={4}>\r\n              <CourseCard course={item} favoriteClicked={favoriteClicked} removeFavoriteClicked={removeFavoriteClicked} isCourseAFavorite={isCourseAFavorite(user, item)}></CourseCard>\r\n            </Grid>\r\n        );\r\n      });\r\n    }\r\n    \r\n    return (\r\n      <div class=\"course-library\">\r\n        <CourseLibraryToolbar menuItems={menuItems} searchInfo={searchInfo}></CourseLibraryToolbar>\r\n          <div className=\"course-list\">\r\n          <Grid container spacing={3}>\r\n            {listItems}\r\n          </Grid>\r\n          </div>\r\n      </div>\r\n\r\n      );\r\n  }\r\n}\r\n\r\nexport default CourseLibrary;\r\n","import React from 'react';\r\nimport './Login.css';\r\nimport { Button } from '@material-ui/core';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { withRouter, Redirect } from \"react-router-dom\";\r\nimport * as FirebaseService from '../../service/firebase.service';\r\n\r\nclass LoginPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { redirectToReferrer: false };\r\n    this.loginGoogle = this.loginGoogle.bind(this);\r\n    this.loginFacebook = this.loginFacebook.bind(this);\r\n\r\n  }\r\n\r\n  async loginGoogle(event) {\r\n    // TODO(jessi): set a loading state\r\n    await FirebaseService.logUserInUser(/* isGoog= */ true).then(u => {\r\n      this.props.completeLogin(u);\r\n      this.props.history.push(\"/courseLibrary\");\r\n      this.setState({ redirectToReferrer: true });\r\n    });\r\n    // TODO(jessi): unset loading state\r\n  }\r\n\r\n  async loginFacebook(event) {\r\n    // TODO(jessi): set a loading state\r\n    await FirebaseService.logUserInUser(/* isGoog= */ false).then(u => {\r\n      this.props.completeLogin(u);\r\n      this.props.history.push(\"/courseLibrary\");\r\n      this.setState({ redirectToReferrer: true });\r\n    });\r\n    // TODO(jessi): unset loading state\r\n  }\r\n\r\n  render() {\r\n    // Show loading screen while we load the user.\r\n    if (this.props.loadingUser) {\r\n      return (\r\n        <div>\r\n          Loading..\r\n          <CircularProgress></CircularProgress>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    // Redirect if logged in or complete login.\r\n    const { from } = this.props.location.state || { from: { pathname: '/' } }\r\n    const { redirectToReferrer } = this.state\r\n    if (redirectToReferrer === true || this.props.user) {\r\n      return <Redirect to={from} />\r\n    }\r\n\r\n\r\n    // TODO(jessi): style these buttons\r\n    return (\r\n      <div className=\"login\">\r\n        <h1>Sign into Mooc in a Box</h1>\r\n        <Button color=\"inherit\" className=\"menu-button\" onClick={this.loginFacebook}>\r\n          Sign in with Facebook\r\n      </Button>\r\n        <Button color=\"inherit\" className=\"menu-button\" onClick={this.loginGoogle}>\r\n          Sign in with Google\r\n      </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(LoginPage);\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Link as RouterLink,\r\n} from \"react-router-dom\";\r\nimport { Button } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { IconButton } from '@material-ui/core';\r\nimport './CoursesDropdown.css';\r\n\r\nfunction CoursesDropdownComponent(props) {\r\n  return (\r\n    <ExpansionPanel>\r\n      <ExpansionPanelSummary\r\n        expandIcon={<ExpandMoreIcon />}\r\n        aria-controls=\"panel1a-content\"\r\n        id=\"panel1a-header\"\r\n      >\r\n        <Typography variant=\"subtitle2\">{props.courses.length} Course(s)</Typography>\r\n      </ExpansionPanelSummary>\r\n      <ExpansionPanelDetails>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} md={6}>\r\n            <div>\r\n              <List dense=\"true\">\r\n                {\r\n                  props.courses.map(course => {\r\n                    return (\r\n                      <span>\r\n                        <ListItem\r\n                        >\r\n                          <Button id=\"course-link\"\r\n                            component={RouterLink}\r\n                            to={`/courseOverview/${course.id}`}\r\n                          >\r\n                            {course.title}\r\n                          </Button>\r\n                          {props.includeEditIcon &&\r\n                            <IconButton id=\"edit-button\"\r\n                              className=\"menu-button\"\r\n                              color=\"inherit\"\r\n                              aria-label=\"menu\"\r\n                              component={RouterLink}\r\n                              to={`/editCourse/${course.id}`}\r\n                            >\r\n                              <EditIcon />\r\n                            </IconButton>\r\n                          }\r\n                        </ListItem>\r\n                      </span>\r\n\r\n                    )\r\n                  })\r\n                }\r\n              </List>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </ExpansionPanelDetails>\r\n    </ExpansionPanel>\r\n  )\r\n}\r\n\r\nexport default CoursesDropdownComponent;\r\n","import React, { useState } from 'react';\r\nimport './MyCourses.css';\r\nimport {\r\n  Link as RouterLink,\r\n} from \"react-router-dom\";\r\nimport { Button } from '@material-ui/core';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { IconButton } from '@material-ui/core';\r\n\r\nimport CoursesDropdownComponent from '../CoursesDropdown/CoursesDropdown.component';\r\n\r\n\r\n\r\n/**\r\n * \r\n * http://localhost:3000/courseOverview/rlfxOavBn4nPZLNTRMkL\r\n * http://localhost:3000/courseOverview/rlfxOavBn4nPZLNTRMkL\r\n */\r\n\r\n\r\nfunction generate(element) {\r\n  return React.cloneElement(element, {\r\n    key: element,\r\n  })\r\n}\r\n\r\nfunction CurrentCoursesComponent(props) {\r\n  let numberOfCourses = props.currentCourses.length;\r\n\r\n  return (\r\n    <div>\r\n      <h2> Current Courses </h2>\r\n      <CoursesDropdownComponent courses={props.currentCourses}></CoursesDropdownComponent>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nfunction PastCoursesComponent(props) {\r\n  return (\r\n    <div>\r\n      <h2> Past Courses </h2>\r\n      <CoursesDropdownComponent courses={props.pastCourses}></CoursesDropdownComponent>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction SavedCoursesComponent(props) {\r\n  return (\r\n    <div>\r\n      <h2> Favorited Courses </h2>\r\n      <CoursesDropdownComponent courses={props.savedCourses}></CoursesDropdownComponent>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction CreatedCoursesComponent(props) {\r\n  return (\r\n    <div>\r\n      <h2> Created Courses </h2>\r\n      <CoursesDropdownComponent courses={props.createdCourses} includeEditIcon={true}></CoursesDropdownComponent>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nfunction MyCourses(props) {\r\n\r\n  const [user, setUser] = useState();\r\n  props.routeClicked(\"My Courses\");\r\n\r\n\r\n  React.useEffect(() => {\r\n    setUser(props.user);\r\n  }, [props]);\r\n\r\n\r\n  if (user) {\r\n    const courseComponentList = []\r\n    let hasCourses = false;\r\n\r\n\r\n    if (user.currentCourses && user.currentCourses.length > 0) {\r\n      const element = <CurrentCoursesComponent currentCourses={user.currentCourses}></CurrentCoursesComponent>\r\n      courseComponentList.push(element);\r\n      hasCourses = true;\r\n    }\r\n\r\n    if (user.pastCourses && user.pastCourse.length > 0) {\r\n      const element = <PastCoursesComponent pastCourses={user.pastCourses}></PastCoursesComponent>\r\n      courseComponentList.push(element);\r\n      hasCourses = true;\r\n\r\n    }\r\n\r\n    if (user.favoritedCourses && user.favoritedCourses.length > 0) {\r\n      const element = <SavedCoursesComponent savedCourses={user.favoritedCourses}></SavedCoursesComponent>\r\n      courseComponentList.push(element);\r\n      hasCourses = true;\r\n\r\n    }\r\n\r\n    if (user.createdCourses && user.createdCourses.length > 0) {\r\n      const element = <CreatedCoursesComponent createdCourses={user.createdCourses}></CreatedCoursesComponent>\r\n      courseComponentList.push(element);\r\n      hasCourses = true;\r\n\r\n    }\r\n    if (hasCourses) {\r\n      return (\r\n        <div className=\"MyCourses\">\r\n          <CssBaseline />\r\n          <Container maxWidth=\"lg\">\r\n            <Paper className=\"paper\">\r\n              {\r\n                courseComponentList.map(element => element)\r\n              }\r\n            </Paper>\r\n          </Container>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"MyCourses\">\r\n          <CssBaseline />\r\n          <Container maxWidth=\"lg\">\r\n            <Paper className=\"paper\">\r\n              <h4>You don't have any courses saved yet!</h4>\r\n            </Paper>\r\n          </Container>\r\n        </div>\r\n      )\r\n    }\r\n\r\n\r\n  } else {\r\n    return (\r\n      <div>\r\n        Loading..\r\n        <CircularProgress></CircularProgress>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default MyCourses;\r\n","import React from 'react';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { Button } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nfunction EditDialog(props) {\r\n  return (\r\n    <div>\r\n      <Dialog open={props.isOpen} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">{props.field}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Edit the Field below to update your {props.field}\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label={props.field}\r\n            value={props.value}\r\n            onChange={props.onChange}\r\n            type=\"email\"\r\n            color=\"secondary\"\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={props.handleClose} color=\"secondary\">\r\n            Cancel\r\n            </Button>\r\n          <Button onClick={props.handleSubmit} color=\"secondary\">\r\n            Submit\r\n            </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditDialog","import React from 'react';\r\n\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { IconButton } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport EditDialog from '../EditDialog/EditDialog.component';\r\n\r\nconst userKeyToDisplayMap = {\r\n    \"displayName\": \"Display Name\",\r\n    \"email\": \"Email Address\",\r\n    \"password\": \"Password\"\r\n  }\r\n\r\nfunction UserProfileSection(props){\r\n    function getEditIconIfNecessary(){\r\n      return props.isEditable ? \r\n        <IconButton className=\"menu-button\" color=\"inherit\" aria-label=\"menu\">\r\n          <EditIcon onClick={props.openDialog}/>\r\n        </IconButton>\r\n        :\r\n        <div></div>\r\n    }\r\n\r\n\r\n    return (\r\n      <div>\r\n        <Typography align=\"center\" variant=\"h6\" component=\"h6\">\r\n          <strong>{props.displayValue}</strong>\r\n        </Typography>\r\n        <Typography align=\"center\" variant=\"body1\" component=\"body1\">\r\n          <span>\r\n            {props.value}\r\n            {getEditIconIfNecessary()}\r\n          </span>\r\n        </Typography>\r\n        <EditDialog \r\n          isOpen={props.isDialogOpen}\r\n          handleClose={props.handleClose}\r\n          handleSubmit={props.handleSubmit}\r\n          field={userKeyToDisplayMap[props.displayKey]}\r\n          value={props.value}\r\n          onChange={props.onChange}\r\n        />\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default UserProfileSection\r\n  ","import React, { useState } from 'react';\r\nimport './UserProfile.css';\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport UserProfileSection from './UserProfileSection/UserProfileSection.component';\r\nimport { Button } from '@material-ui/core';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport * as FirebaseService from '../../service/firebase.service';\r\n\r\nconst passwordValue = \"*******\";\r\n\r\nfunction UserProfile(props) {\r\n\r\n\r\n  const [displayName, setDisplayName] = useState(null);\r\n  const [oldDisplayName, setOldDiplayName] = useState(null);\r\n  const [error, setError] = useState();\r\n  const [isDisplayNameDialogOpen, setIsDisplayNameDialogOpen] = useState(false)\r\n  const [userInterests, setUserInterests] = useState(null);\r\n  const [oldUserInterests, setOldUserInterests] = useState(null);\r\n  const [isUserInterestsDialogOpen, setIsUserInterestsDialogOpen] = useState(false);\r\n\r\n  props.routeClicked(\"User Profile\");\r\n\r\n\r\n\r\n  function handleDisplayNameClose() {\r\n    setDisplayName(oldDisplayName)\r\n    setIsDisplayNameDialogOpen(false)\r\n  }\r\n\r\n  function handleDisplayNameSubmit() {\r\n    FirebaseService.updateUser(props.user.id, {\r\n      displayName\r\n    }).then(result => {\r\n      setIsDisplayNameDialogOpen(false)\r\n      setOldDiplayName(displayName)\r\n      props.updateUser(props.user.id);\r\n\r\n    })\r\n      .catch(err => {\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  function openDisplayNameDialog() {\r\n    setOldDiplayName(displayName)\r\n    setIsDisplayNameDialogOpen(true)\r\n  }\r\n\r\n  function onDisplayNameChange(e) {\r\n    setDisplayName(e.target.value);\r\n  }\r\n\r\n  /**\r\n   * Begin User Interests\r\n   */\r\n  function handleUserInterestsDialogClose() {\r\n    setUserInterests(oldUserInterests)\r\n    setIsUserInterestsDialogOpen(false)\r\n  }\r\n\r\n  function openUserInterestDialog() {\r\n    setOldUserInterests(userInterests)\r\n    setIsUserInterestsDialogOpen(true)\r\n  }\r\n\r\n  function onUserInterestsChange(e) {\r\n    setUserInterests(e.target.value);\r\n  }\r\n\r\n  function handleUserInterestSubmit() {\r\n    FirebaseService.updateUser(props.user.id, {\r\n      interests: userInterests\r\n    }).then(result => {\r\n      setIsUserInterestsDialogOpen(false)\r\n      setUserInterests(userInterests)\r\n      props.updateUser(props.user.id);\r\n    })\r\n      .catch(err => {\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  async function signOut() {\r\n    await FirebaseService.signOut().then((res) => {\r\n      if (res) {\r\n        props.history.push(\"/\");\r\n        props.updateUser(undefined);\r\n      }\r\n      // TODO(jessi) handle error\r\n    });\r\n  }\r\n\r\n  async function deleteAccount() {\r\n    await FirebaseService.deleteUser().then((res) => {\r\n      if (res) {\r\n        props.history.push(\"/\");\r\n        props.updateUser(undefined);\r\n      }\r\n      // TODO(jessi) handle error\r\n    });\r\n  }\r\n\r\n  if (props.user && displayName === null && userInterests === null) {\r\n    setDisplayName(props.user.displayName)\r\n    setUserInterests(props.user.interests)\r\n  }\r\n\r\n  if (props.user) {\r\n    return (\r\n      <div className=\"userProfile\">\r\n        <CssBaseline />\r\n        <Container className=\"userProfile-bottom-padding\" maxWidth=\"lg\">\r\n          <Paper className=\"paper\">\r\n\r\n            <UserProfileSection\r\n              isEditable={true}\r\n              displayValue=\"User Interests\"\r\n              value={userInterests}\r\n              handleClose={handleUserInterestsDialogClose}\r\n              handleSubmit={handleUserInterestSubmit}\r\n              isDialogOpen={isUserInterestsDialogOpen}\r\n              openDialog={openUserInterestDialog}\r\n              onChange={onUserInterestsChange}\r\n              isEditable={true}\r\n            ></UserProfileSection>\r\n\r\n          </Paper>\r\n        </Container>\r\n        <Divider />\r\n\r\n\r\n        <Container maxWidth=\"lg\">\r\n          <Paper className=\"paper\">\r\n\r\n            <UserProfileSection\r\n              isEditable={true}\r\n              displayValue=\"Display Name\"\r\n              value={displayName}\r\n              handleClose={handleDisplayNameClose}\r\n              handleSubmit={handleDisplayNameSubmit}\r\n              isDialogOpen={isDisplayNameDialogOpen}\r\n              openDialog={openDisplayNameDialog}\r\n              onChange={onDisplayNameChange}\r\n            />\r\n            <Divider />\r\n            <UserProfileSection\r\n              isEditable={false}\r\n              displayValue=\"Email\"\r\n              value={props.user.email}\r\n            />\r\n            <Divider />\r\n            <div className=\"logout-btns\">\r\n              <Button color=\"inherit\" className=\"menu-button\" onClick={signOut}>\r\n                Sign out\r\n              </Button>\r\n              <Button color=\"inherit\" className=\"menu-button\" onClick={deleteAccount}>\r\n                Delete account\r\n              </Button>\r\n            </div>\r\n          </Paper>\r\n        </Container>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        Loading..\r\n        <CircularProgress></CircularProgress>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(UserProfile);\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Input from '@material-ui/core/Input';\r\nimport { Button, Divider } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport { EditorState, convertFromRaw, convertToRaw, RichUtils } from 'draft-js';\r\nimport '../../../../node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport './CreateCourseDialog.css'\r\n\r\n\r\nfunction CreateCourseDialog(props) {\r\n  const [description, setDescription] = useState(props.course?.description);\r\n  const [title, setTitle] = useState(props.course?.title);\r\n  const [editorState, setEditorState] = useState();\r\n  const [overview, setOverview] = useState(props.course?.overview);\r\n  const [isTitleError, setIsTitleError] = useState(false);\r\n  const [isDescriptionError, setIsDescriptionError] = useState(false);\r\n  const [thumbnailFile, setThumbnailFile] = useState();\r\n\r\n\r\n\r\n  function onCourseTitleChange(e) {\r\n    setTitle(e.target.value);\r\n  }\r\n\r\n  function onCourseDescriptionChange(e) {\r\n    setDescription(e.target.value);\r\n\r\n  }\r\n\r\n  function onEditorStateChange(editorState) {\r\n    setEditorState(editorState);\r\n  };\r\n\r\n  function onFileUploadChange({ target }) {\r\n    console.log(\"Upload happened\");\r\n    // const fileReader = new FileReader();\r\n    // const name = target.accept.includes('image') ? 'images' : 'videos';\r\n    const file = target.files[0];\r\n    setThumbnailFile(file);\r\n  }\r\n\r\n\r\n  function handleKeyCommand(command) {\r\n    const newState = RichUtils.handleKeyCommand(editorState, command);\r\n    if (newState) {\r\n      setEditorState(newState);\r\n      setOverview(convertToRaw(newState.getCurrentContent()));\r\n\r\n      return 'handled';\r\n    }\r\n    return 'not-handled';\r\n  };\r\n\r\n  function isValidTitle() {\r\n    if (title && title.length > 0) {\r\n      setIsTitleError(false)\r\n      return true;\r\n    } else {\r\n      setIsTitleError(true);\r\n      return false;\r\n    }\r\n\r\n  }\r\n\r\n  function isValidDescription() {\r\n    if (description && description.length > 0) {\r\n      setIsDescriptionError(false)\r\n      return true;\r\n    } else {\r\n      setIsDescriptionError(true);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  function handleSubmit() {\r\n\r\n    const titleIsGood = isValidTitle();\r\n    const descriptionIsGood = isValidDescription();\r\n\r\n    if (titleIsGood && descriptionIsGood) {\r\n      const currentContentState = editorState.getCurrentContent();\r\n      setOverview(convertToRaw(currentContentState));\r\n\r\n      const courseDetails = {\r\n        title,\r\n        description,\r\n        overview: convertToRaw(currentContentState),\r\n        thumbnailFile\r\n      }\r\n      props.handleSubmit(courseDetails);\r\n    }\r\n  }\r\n\r\n  function handleClose() {\r\n    setIsTitleError(false)\r\n    setIsDescriptionError(false)\r\n    setDescription(props.course?.description)\r\n    setTitle(props.course?.title)\r\n    setOverview(props.course?.overview)\r\n    props.handleClose();\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (overview) {\r\n      setEditorState(EditorState.createWithContent(convertFromRaw(JSON.parse(overview))));\r\n    }\r\n    else {\r\n      setEditorState(EditorState.createEmpty());\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={props.isOpen} onClose={handleClose} aria-labelledby=\"form-dialog-title\" maxWidth=\"md\">\r\n        <DialogTitle id=\"form-dialog-title\">\r\n          {\r\n            props.course ? \"Edit Course\" : \"Create A New Course\"\r\n          }\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            {\r\n              props.course ?\r\n                \"Edit the existing course's title, display card, or overview.\"\r\n                :\r\n                \"Create a new course. Start by entering at least the title and description below.\"\r\n            }\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            required\r\n            error={isTitleError}\r\n            margin=\"normal\"\r\n            id=\"title\"\r\n            label=\"Course Title\"\r\n            onChange={onCourseTitleChange}\r\n            type=\"text\"\r\n            color=\"secondary\"\r\n            value={title}\r\n            fullWidth\r\n          />\r\n\r\n          <Divider />\r\n\r\n          <h3 class=\"section-heading\">Course Card</h3>\r\n          <span id=\"thumbnail-span\">\r\n            <p id=\"thumbnail-text\">Course Thumbnail</p>\r\n            <Input\r\n              label=\"Upload Course Thumbnail\"\r\n              type=\"file\"\r\n              onChange={onFileUploadChange}\r\n            >\r\n            </Input>\r\n          </span>\r\n          <TextField\r\n            margin=\"normal\"\r\n            id=\"description\"\r\n            error={isDescriptionError}\r\n            label=\"Course Description\"\r\n            required\r\n            onChange={onCourseDescriptionChange}\r\n            helperText=\"This field is shown under the thumbnail\"\r\n            type=\"text\"\r\n            color=\"secondary\"\r\n            value={description}\r\n            fullWidth\r\n          />\r\n\r\n          <Divider />\r\n\r\n          <h3 class=\"section-heading\">Course Overview</h3>\r\n          <div className=\"course-overview-section\">\r\n            <Editor\r\n              editorState={editorState}\r\n              editorClassName=\"editor-textbox\"\r\n              handleKeyCommand={handleKeyCommand}\r\n              onEditorStateChange={onEditorStateChange}\r\n              label=\"Course Overview\"\r\n            />\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"secondary\">\r\n            Cancel\r\n            </Button>\r\n          <Button onClick={handleSubmit} color=\"secondary\">\r\n            Submit\r\n            </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CreateCourseDialog","import React, { useState } from 'react';\r\nimport './CreateCourse.css';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport * as FirebaseService from '../../service/firebase.service';\r\nimport CreateCourseDialog from './CreateCourseDialog/CreateCourseDialog.component';\r\nimport CoursesDropdownComponent from '../CoursesDropdown/CoursesDropdown.component';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nfunction CreatedCoursesComponent(props) {\r\n\r\n  return (\r\n    <div className=\"courses-section\">\r\n      <h2> Courses You've Created </h2>\r\n      <CoursesDropdownComponent courses={props.createdCourses} includeEditIcon={true}></CoursesDropdownComponent>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction CreateCourse(props) {\r\n  const [isCreateCourseDialogOpen, setIsCreateCourseDialogOpen] = useState(false);\r\n  const history = useHistory();\r\n\r\n  props.routeClicked(\"Create Course\");\r\n\r\n\r\n  function handleCreateCourseDialogClose() {\r\n    setIsCreateCourseDialogOpen(false);\r\n  }\r\n\r\n  function openCreateCourseDialog() {\r\n    setIsCreateCourseDialogOpen(true);\r\n\r\n  }\r\n\r\n  async function handleSubmit(courseInfo) {\r\n    courseInfo.owner = props.user.id;\r\n\r\n    courseInfo.chapters = []\r\n\r\n    const response = await FirebaseService.createCourse(props.user, courseInfo)\r\n    setIsCreateCourseDialogOpen(false);\r\n    await props.updateCourses();\r\n    await props.updateUser(props.user.id);\r\n    // Navigate to Edit Course page\r\n    history.push(`/editCourse/${props.user.createdCoursesRefs[props.user.createdCoursesRefs.length - 1].id}`)\r\n  }\r\n\r\n  const hasCurrentCourses = false\r\n  let currnetCoursesSection = null;\r\n  if (props.user && props.user.createdCourses && props.user.createdCourses.length > 0) {\r\n    currnetCoursesSection = <CreatedCoursesComponent createdCourses={props.user.createdCourses}></CreatedCoursesComponent>\r\n  } else {\r\n    currnetCoursesSection = <h3>You have not created any courses</h3>\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"CreateCourse\">\r\n      <CssBaseline />\r\n      <Container className=\"userProfile-bottom-padding\" maxWidth=\"lg\">\r\n        <Paper className=\"paper\">\r\n          {\r\n            currnetCoursesSection\r\n          }\r\n          <span>\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={openCreateCourseDialog}>\r\n              Create New Course\r\n              </Button>\r\n          </span>\r\n        </Paper>\r\n      </Container>\r\n\r\n      <CreateCourseDialog\r\n        isOpen={isCreateCourseDialogOpen}\r\n        handleClose={handleCreateCourseDialogClose}\r\n        handleSubmit={handleSubmit}\r\n        user={props.user}\r\n      />\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateCourse;\r\n","import React, { useState, useEffect } from 'react';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Button } from '@material-ui/core';\r\n\r\n\r\nimport './CourseChapterPanel.css';\r\n\r\nfunction CourseChapterPanel(props) {\r\n\r\n    function listItemClicked(lesson) {\r\n        props.setChapterInContext(props.chapter);\r\n        props.setActiveLesson(lesson);\r\n    }\r\n\r\n    let lessonItems = []\r\n\r\n    const lessonsLength = props.chapter?.lessons?.length;\r\n    if (lessonsLength > 0) {\r\n        lessonItems = props.chapter.lessons.map(lesson => {\r\n            const isActiveLesson = (lesson === props.activeLesson);\r\n\r\n            return (\r\n                <span>\r\n                    <ListItem selected={isActiveLesson} onClick={() => listItemClicked(lesson)} id={lesson.id} button>\r\n                        <ListItemText primary={lesson.title} />\r\n                    </ListItem>\r\n                </span>\r\n            )\r\n        });\r\n    } else {\r\n        lessonItems[0] = <ListItem> <ListItemText primary=\"No Lessons Added\" /> </ListItem>\r\n    }\r\n\r\n\r\n    function openLessonModal() {\r\n        props.setChapterInContext(props.chapter);\r\n        props.openLessonModal(/**addLesson=*/true);\r\n    }\r\n\r\n    let addNewLessonButton;\r\n\r\n    if (props.editable) {\r\n        addNewLessonButton = <Button variant=\"contained\" onClick={openLessonModal} color=\"secondary\" id=\"add-lesson\">Add New Lesson</Button>\r\n    }\r\n\r\n\r\n    return (\r\n        <ExpansionPanel\r\n            defaultExpanded={props.chapter === props.chapterInContext}\r\n        >\r\n            <ExpansionPanelSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n            >\r\n                <Typography variant=\"subtitle2\">{props.chapter.title}</Typography>\r\n            </ExpansionPanelSummary>\r\n            <ExpansionPanelDetails>\r\n\r\n                <List dense=\"true\" className=\"lessons-list\">\r\n                    {lessonItems}\r\n                    {addNewLessonButton}\r\n                </List>\r\n\r\n            </ExpansionPanelDetails>\r\n        </ExpansionPanel>\r\n    )\r\n}\r\n\r\nexport default CourseChapterPanel;","import React from 'react';\r\nimport './CourseNavigationPane.css';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { IconButton, Button } from '@material-ui/core';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\n\r\n\r\nimport CourseChapterPanel from './CourseChapterPanel/CourseChapterPanel.component';\r\n\r\n\r\n/**\r\n * Generate multiple function\r\n */\r\n\r\n\r\nfunction generate(element) {\r\n  return [0, 1, 2].map(value =>\r\n    React.cloneElement(element, {\r\n      key: value,\r\n    }),\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\nfunction CourseNavigationPane(props) {\r\n\r\n  function setChapterInContext(chapter) {\r\n    props.setChapterInContext(chapter);\r\n  }\r\n\r\n  const courseOverviewClicked = () => {\r\n    props.setActiveLesson(undefined);\r\n    props.setChapterInContext(undefined);\r\n  }\r\n\r\n  const openDeleteDialog = (e) => {\r\n    props.openDeleteDialog(\"Course\", props.course);\r\n  }\r\n\r\n  let courseNavigationPanels = []\r\n  const chaptersLength = props.course?.chapters?.length;\r\n\r\n  if (chaptersLength > 0) {\r\n    courseNavigationPanels = props.course.chapters.map(chapter =>\r\n      <CourseChapterPanel editable={props.editable} setActiveLesson={props.setActiveLesson} activeLesson={props.activeLesson} openLessonModal={props.openLessonModal} chapterInContext={props.chapterInContext} setChapterInContext={setChapterInContext} chapter={chapter} />\r\n    )\r\n  }\r\n\r\n  let addNewChapterButton;\r\n  let deleteCourseButton;\r\n  if (props.editable) {\r\n    addNewChapterButton = <Button id=\"new-chapter\" variant=\"contained\" onClick={props.openCreateChapterDialog} color=\"secondary\"> Add New Chapter </Button>\r\n    deleteCourseButton = <IconButton id=\"delete-button\" onClick={openDeleteDialog}> <DeleteForeverIcon /> </IconButton>\r\n  }\r\n\r\n\r\n  return (\r\n    <Paper className=\"paper\">\r\n      <span>\r\n        <Button id=\"course-overview\" size=\"medium\"\r\n          onClick={courseOverviewClicked}>\r\n          {props.course.title}\r\n        </Button>\r\n        {deleteCourseButton}\r\n        <br />\r\n      </span>\r\n      {courseNavigationPanels}\r\n      {addNewChapterButton}\r\n    </Paper>\r\n  )\r\n}\r\n\r\nexport default CourseNavigationPane;","import React, { useState } from 'react';\r\nimport YouTube from 'react-youtube';\r\nimport { IconButton, Button, Typography } from '@material-ui/core';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport { EditorState, convertFromRaw, ContentState } from \"draft-js\";\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport './CourseLesson.css';\r\n\r\n// Youtube Constants\r\n\r\nconst YoutubeComponentConfig = {\r\n    opts: {\r\n        height: '390',\r\n        width: '640',\r\n        playerVars: {\r\n            autoplay: 0,\r\n        },\r\n    },\r\n    videoId: \"BKorP55Aqvg\"\r\n\r\n}\r\n\r\n\r\nfunction EditCourseLesson(props) {\r\n\r\n    let hasYoutubeVideo = false;\r\n\r\n    function _onReady(event) {\r\n        // access to player in all event handlers via event.target\r\n        event.target.pauseVideo();\r\n    }\r\n\r\n\r\n    function openDeleteDialog(e) {\r\n        props.openDeleteDialog(\"Lesson\", props.lesson);\r\n    }\r\n\r\n\r\n    function goToPreviousLesson() {\r\n        props.navigateToPreviousLesson(props.lesson);\r\n    }\r\n\r\n    function goToNextLesson() {\r\n        props.navigateToNextLesson(props.lesson);\r\n    }\r\n\r\n    function getButtonDiv() {\r\n        if (props.isFirstLesson && props.isLastLesson) {\r\n            return '';\r\n        }\r\n\r\n        let leftButton, rightButton;\r\n\r\n        if (props.nextLesson || props.nextChapter) {\r\n            leftButton =\r\n                <Button variant=\"contained\" onClick={goToNextLesson} className=\"next-button\" color=\"secondary\" endIcon={<ArrowForwardIosIcon />}>\r\n                    {props.nextLesson ? \"Next Lesson\" : \"Next Chapter\"}\r\n                </Button>\r\n        }\r\n\r\n        if (props.prevLesson || props.prevChapter) {\r\n            rightButton =\r\n                <Button variant=\"contained\" onClick={goToPreviousLesson} className=\"previous-button\" color=\"secondary\" startIcon={<ArrowBackIosIcon />}>\r\n                    {props.prevLesson ? \"Previous Lesson\" : \"Previous Chapter\"}\r\n                </Button>\r\n        }\r\n\r\n        return (\r\n            <div className=\"button-div\">\r\n                {leftButton}\r\n                {rightButton}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function getVideoConfig() {\r\n        const youtubeConfig = { ...YoutubeComponentConfig };\r\n        const url = props.lesson?.video;\r\n        if (url && url.includes(\"youtube\") && (url.includes(\"v=\"))) {\r\n            const myParamters = url.split(\"?\");\r\n            var searchParams = new URLSearchParams(myParamters[1]);\r\n            youtubeConfig.videoId = searchParams.get('v');\r\n            hasYoutubeVideo = true;\r\n        }\r\n        return youtubeConfig;\r\n    }\r\n\r\n    function isJson(str) {\r\n        try {\r\n            JSON.parse(str);\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    let content = undefined;\r\n    if (props.lesson?.description && isJson(props.lesson.description)) {\r\n        const contentStateObj = JSON.parse(props.lesson.description);\r\n        const editorState = EditorState.createWithContent(convertFromRaw(contentStateObj));\r\n        content = <Editor\r\n            toolbarHidden\r\n            editorState={editorState}\r\n            readOnly={true}\r\n        />\r\n    }\r\n    else {\r\n        const text = props.lesson?.description ? props.lesson.description : \"No text entered.\";\r\n        content = <Editor\r\n            toolbarHidden\r\n            editorState={EditorState.createWithContent(ContentState.createFromText(text))}\r\n            readOnly={true}\r\n        />\r\n    }\r\n\r\n    if (props.lesson) {\r\n        const youtubeConfig = getVideoConfig();\r\n\r\n        return (\r\n            <div>\r\n                <div id=\"lesson-header\">\r\n                    <p id=\"class-title\"> {props.lesson.title} </p>\r\n                    {props.editable ?\r\n                        <IconButton id=\"delete-lesson\" onClick={openDeleteDialog}>\r\n                            <DeleteForeverIcon />\r\n                        </IconButton>\r\n                        :\r\n                        ''\r\n                    }\r\n                </div>\r\n                <div id=\"content\">\r\n                    {\r\n                        hasYoutubeVideo\r\n                            ?\r\n                            <YouTube videoId={youtubeConfig.videoId} opts={youtubeConfig.opts} onReady={_onReady} />\r\n                            :\r\n                            \"\"\r\n                    }\r\n                    {content}\r\n                    {getButtonDiv()}\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div>\r\n                <h5> No Lesson Details </h5>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditCourseLesson;","import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport CourseLesson from './CourseLesson/CourseLesson.component';\r\nimport { Button, IconButton } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport { EditorState, convertFromRaw, ContentState } from \"draft-js\";\r\n\r\nimport './CourseOverviewPane.css';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\n\r\nfunction CourseOverviewPane(props) {\r\n\r\n    let lessonArray = [];\r\n    for (let i = 0; i < props.course.chapters.length; i++) {\r\n        for (let j = 0; j < props.course.chapters[i].lessons?.length; j++) {\r\n            lessonArray.push(props.course.chapters[i].lessons[j]);\r\n        }\r\n    }\r\n\r\n    function navigateToNextLesson(lesson) {\r\n        const indexOfCurrentLesson = props.activeChapter.lessons.indexOf(lesson);\r\n        if (indexOfCurrentLesson !== props.activeChapter.lessons.length - 1) {\r\n            props.setActiveLesson(props.activeChapter.lessons[indexOfCurrentLesson + 1]);\r\n            return;\r\n        } else {\r\n            const activeChapterIndex = props.course.chapters.indexOf(props.activeChapter);\r\n            const nextChapter = props.course.chapters[activeChapterIndex + 1];\r\n            props.setChapterInContext(nextChapter);\r\n            props.setActiveLesson(nextChapter.lessons[0]);\r\n        }\r\n    }\r\n\r\n    function navigateToPreviousLesson(lesson) {\r\n        const indexOfCurrentLesson = props.activeChapter.lessons.indexOf(lesson);\r\n\r\n        if (indexOfCurrentLesson !== 0) {\r\n            props.setActiveLesson(props.activeChapter.lessons[indexOfCurrentLesson - 1]);\r\n            return;\r\n        } else {\r\n            const activeChapterIndex = props.course.chapters.indexOf(props.activeChapter);\r\n            const prevChapter = props.course.chapters[activeChapterIndex - 1];\r\n            props.setChapterInContext(prevChapter);\r\n            props.setActiveLesson(prevChapter.lessons[prevChapter.lessons.length - 1]);\r\n        }\r\n\r\n    }\r\n\r\n    function openLessonModal() {\r\n        props.openLessonModal(/**addLesson=*/false);\r\n    }\r\n\r\n\r\n    let openEditCourseOverviewDialogButton;\r\n    let editLessonButton;\r\n    if (props.editable) {\r\n        openEditCourseOverviewDialogButton = <Button onClick={props.openEditCourseOverviewDialog} color=\"secondary\" variant=\"contained\"> Edit Course Information </Button>\r\n        editLessonButton = <IconButton variant=\"contained\" onClick={openLessonModal} color=\"secondary\" id=\"edit-lesson\"> <EditIcon /> </IconButton>\r\n    }\r\n\r\n    let content = undefined;\r\n    if (props.course.overview) {\r\n        const contentStateObj = JSON.parse(props.course.overview);\r\n        const editorState = EditorState.createWithContent(convertFromRaw(contentStateObj));\r\n        content = <Editor\r\n            toolbarHidden\r\n            editorState={editorState}\r\n            readOnly={true}\r\n        />\r\n    }\r\n    else {\r\n        content = <Editor\r\n            toolbarHidden\r\n            editorState={EditorState.createWithContent(ContentState.createFromText(\"No text entered.\"))}\r\n            readOnly={true}\r\n        />\r\n    }\r\n\r\n    function getLessonInformation() {\r\n        let prevLesson, nextLesson, prevChapter, nextChapter = false;\r\n\r\n        if (props.activeLesson) {\r\n            const currentLessonIndex = lessonArray.indexOf(props.activeLesson);\r\n            const currentLessonIndexInChapter = props.activeChapter.lessons.indexOf(props.activeLesson);\r\n            const numLessonsInChapter = props.activeChapter.lessons.length;\r\n            const numChapters = props.course.chapters.length;\r\n            const activeChapterIndex = props.course.chapters.indexOf(props.activeChapter);\r\n\r\n            prevLesson = currentLessonIndexInChapter > 0;\r\n            nextLesson = currentLessonIndexInChapter < numLessonsInChapter - 1;\r\n            prevChapter = currentLessonIndexInChapter === 0 && currentLessonIndex > 0\r\n            nextChapter = currentLessonIndexInChapter === numLessonsInChapter - 1\r\n                && currentLessonIndex < lessonArray.length - 1\r\n                && activeChapterIndex !== numChapters - 1;\r\n        }\r\n\r\n        return [prevLesson, nextLesson, prevChapter, nextChapter]\r\n    }\r\n\r\n\r\n    let prevLesson, nextLesson, prevChapter, nextChapter = false;\r\n    if (props.activeLesson) {\r\n        [prevLesson, nextLesson, prevChapter, nextChapter] = getLessonInformation();\r\n    }\r\n\r\n    return (\r\n        <Paper className=\"paper\">\r\n            {props.activeChapter ?\r\n                <div>\r\n                    {editLessonButton}\r\n                    <CourseLesson\r\n                        navigateToNextLesson={navigateToNextLesson}\r\n                        navigateToPreviousLesson={navigateToPreviousLesson}\r\n                        prevLesson={prevLesson}\r\n                        nextLesson={nextLesson}\r\n                        prevChapter={prevChapter}\r\n                        nextChapter={nextChapter}\r\n                        lesson={props.activeLesson}\r\n                        editable={props.editable}\r\n                        openDeleteDialog={props.openDeleteDialog}\r\n                    />\r\n                </div> :\r\n                <div>\r\n                    {content}\r\n                    {openEditCourseOverviewDialogButton}\r\n                </div>\r\n            }\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default CourseOverviewPane;","import React, { useState } from 'react';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { Button } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nfunction CreateChapterDialog(props) {\r\n  const [description, setDescription] = useState();\r\n  const [title, setTitle] = useState();\r\n\r\n  function onCourseTitleChange(e) {\r\n    setTitle(e.target.value);\r\n  }\r\n\r\n  function onCourseDescriptionChange(e) {\r\n    setDescription(e.target.value);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    const chapterInfo = {\r\n      title,\r\n      description,\r\n    }\r\n\r\n    props.handleSubmit(chapterInfo);\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={props.isOpen} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Create New Chapter</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Create a new chapter within your course. Enter a title and description below.\r\n            </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"title\"\r\n            label=\"Chapter Title\"\r\n            onChange={onCourseTitleChange}\r\n            type=\"text\"\r\n            color=\"secondary\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"description\"\r\n            label=\"Chapter Description\"\r\n            onChange={onCourseDescriptionChange}\r\n            type=\"text\"\r\n            color=\"secondary\"\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={props.handleClose} color=\"secondary\">\r\n            Cancel\r\n            </Button>\r\n          <Button onClick={handleSubmit} color=\"secondary\">\r\n            Submit\r\n            </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CreateChapterDialog","import React, { useState, useEffect } from 'react';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { Button } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport { EditorState, convertFromRaw, ContentState, convertToRaw, RichUtils } from \"draft-js\";\r\n\r\n// import './CreateLessonDialog.css';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\n\r\nfunction CreateLessonDialog(props) {\r\n  const [description, setDescription] = useState();\r\n  const [title, setTitle] = useState();\r\n  const [video, setVideo] = useState();\r\n  const [isDescriptionError, setIsDescriptionError] = useState(false);\r\n  const [isTitleError, setIsTitleError] = useState(false);\r\n  const [isYoutubeError, setIsYoutubeError] = useState(false);\r\n  const [editorState, setEditorState] = useState();\r\n\r\n  function onEditorStateChange(editorState) {\r\n    setEditorState(editorState);\r\n    const currentContentState = editorState.getCurrentContent();\r\n    setDescription(JSON.stringify(convertToRaw(currentContentState)));\r\n  };\r\n\r\n  function handleKeyCommand(command) {\r\n    const newState = RichUtils.handleKeyCommand(editorState, command);\r\n    if (newState) {\r\n      setEditorState(newState);\r\n      return 'handled';\r\n    }\r\n    return 'not-handled';\r\n  };\r\n\r\n  function onCourseTitleChange(e) {\r\n    setTitle(e.target.value);\r\n  }\r\n\r\n  function onVideoUrlChange(e) {\r\n    setVideo(e.target.value);\r\n  }\r\n\r\n  function isValidTitle() {\r\n    if (title && title.length > 0) {\r\n      setIsTitleError(false)\r\n      return true;\r\n    } else {\r\n      setIsTitleError(true);\r\n      return false;\r\n    }\r\n\r\n  }\r\n\r\n  function isValidDescription() {\r\n    if (description && (isJson(description) || description.length > 0)) {\r\n      setIsDescriptionError(false)\r\n      return true;\r\n    } else {\r\n      setIsDescriptionError(true);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  function isValidYoutubeURL() {\r\n    if (video === undefined || video.length === 0) {\r\n      setIsYoutubeError(false);\r\n      return true;\r\n    } else if (video && video.includes(\"youtube\") && (video.includes(\"v=\"))) {\r\n      setIsYoutubeError(false);\r\n      return true;\r\n    } else {\r\n      setIsYoutubeError(true);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    const id = props.lesson?.id ? props.lesson.id : undefined;\r\n\r\n    const currentContentState = editorState.getCurrentContent();\r\n    const descriptionJSON = JSON.stringify(convertToRaw(currentContentState));\r\n    setDescription(descriptionJSON);\r\n\r\n    let tempVideo = \"\";\r\n    if (isValidTitle() && isValidDescription() && isValidYoutubeURL()) {\r\n      if (video === undefined || video.length === 0) {\r\n        setVideo(\"\"); // So firebase won't die with undefined.\r\n      } else {\r\n        tempVideo = video;\r\n      }\r\n      const lessonInfo = {\r\n        id,\r\n        title,\r\n        description: descriptionJSON,\r\n        video: tempVideo,\r\n      }\r\n      props.updateLesson(lessonInfo, props.add);\r\n    }\r\n  }\r\n\r\n  function handleClose() {\r\n    // Reset State\r\n    setTitle();\r\n    setVideo();\r\n    setDescription();\r\n    setIsTitleError(false);\r\n    setIsDescriptionError(false);\r\n    setIsYoutubeError(false);\r\n    setEditorState(EditorState.createEmpty());\r\n    props.handleClose();\r\n  }\r\n\r\n  function isJson(str) {\r\n    try {\r\n      JSON.parse(str);\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!props.add && props.lesson) {\r\n      setTitle(props.lesson.title);\r\n      setDescription(props.lesson.description);\r\n      setVideo(props.lesson.video);\r\n      if (props.lesson.description) {\r\n        if (isJson(props.lesson.description)) {\r\n          setEditorState(EditorState.createWithContent(convertFromRaw(JSON.parse(props.lesson.description))));\r\n        } else {\r\n          // For backwards compatibility\r\n          setEditorState(EditorState.createWithContent(ContentState.createFromText(props.lesson.description)));\r\n        }\r\n      }\r\n      else {\r\n        setEditorState(EditorState.createEmpty());\r\n      }\r\n    } else {\r\n      setTitle()\r\n      setDescription()\r\n      setVideo()\r\n      setEditorState(EditorState.createEmpty());\r\n    }\r\n\r\n  }, [props]);\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={props.isOpen} onClose={handleClose} aria-labelledby=\"form-dialog-title\" maxWidth=\"md\">\r\n        <DialogTitle id=\"form-dialog-title\">{props.add ? \"Create New\" : \"Edit\"} Lesson</DialogTitle>\r\n        <DialogContent>\r\n          {props.add ?\r\n            <DialogContentText>\r\n              Add a new lesson to your course\r\n            </DialogContentText>\r\n            :\r\n            <DialogContentText>\r\n              Edit existing lesson\r\n            </DialogContentText>\r\n          }\r\n\r\n          <TextField\r\n            autoFocus\r\n            required\r\n            margin=\"normal\"\r\n            error={isTitleError}\r\n            id=\"title\"\r\n            label=\"Lesson Title\"\r\n            onChange={onCourseTitleChange}\r\n            type=\"text\"\r\n            color=\"secondary\"\r\n            value={title}\r\n            helperText={isTitleError ? \"Title is a required field\" : \"\"}\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            margin=\"normal\"\r\n            error={isYoutubeError}\r\n            id=\"video\"\r\n            label=\"Video URL (optional)\"\r\n            onChange={onVideoUrlChange}\r\n            type=\"text\"\r\n            color=\"secondary\"\r\n            value={video}\r\n            helperText={isYoutubeError ? \"Youtube URL is malformed. It must have the form: https://www.youtube.com?v=<SomeCharacterString>\" : \"\"}\r\n            fullWidth\r\n          />\r\n          <Editor\r\n            editorState={editorState}\r\n            wrapperClassName=\"editor-wrapper\"\r\n            editorClassName=\"editor-textbox\"\r\n            handleKeyCommand={handleKeyCommand}\r\n            onEditorStateChange={onEditorStateChange}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={props.handleClose} color=\"secondary\">\r\n            Cancel\r\n            </Button>\r\n          <Button onClick={handleSubmit} color=\"secondary\">\r\n            Submit\r\n            </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CreateLessonDialog","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function DeleteDialog(props) {\r\n\r\n  const handleSubmit = () => {\r\n    props.handleSubmit();\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={props.isOpen}\r\n        onClose={props.handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{`Delete ${props.deleteType}?`}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Are you sure you want to delete this {props.deleteType?.toLowerCase()}?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={props.handleClose} color=\"secondary\" autoFocus>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleSubmit} color=\"secondary\" >\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport './CourseOverview.css';\r\nimport {\r\n    Link as RouterLink,\r\n    useParams,\r\n    useHistory\r\n} from \"react-router-dom\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Button } from '@material-ui/core';\r\nimport * as FirebaseService from '../../service/firebase.service';\r\nimport CourseNavigationPane from './CourseNavigationPane/CourseNavigationPane.component';\r\n\r\nimport CourseOverviewPane from './CourseOverviewPane/CourseOverviewPane.component';\r\nimport CreateChapterDialog from './Dialogs/CreateChapterDialog/CreateChapterDialog.component';\r\nimport CreateLessonDialog from './Dialogs/CreateLessonDialog/CreateLessonDialog.component';\r\nimport EditCourseOverviewDialog from './Dialogs/EditCourseOverviewDialog/EditCourseOverviewDialog.component';\r\nimport CreateCourseDialog from '../CreateCourse/CreateCourseDialog/CreateCourseDialog.component';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport DeleteDialog from './Dialogs/DeleteDialog/DeleteDialog.component';\r\n\r\n\r\n\r\n\r\nfunction CourseOverview(props) {\r\n    // Get ID from Route Params\r\n    let { id } = useParams();\r\n    // Create State Variables\r\n    const [course, setCourse] = useState();\r\n    const [error, setError] = useState();\r\n    const [isCreateChapterDialogOpen, setIsCreateChapterDialogOpen] = useState(false);\r\n    const [isCreateLessonDialogOpen, setIsCreateLessonDialogOpen] = useState(false);\r\n    const [isEditCourseOverviewDialogOpen, setIsEditCourseOverviewDialogOpen] = useState(false);\r\n    const [isDeleteDialogOpen, setIsDeleteDialogOpen] = useState(false);\r\n    const [chapterInContext, setChapterInContext] = useState();\r\n    const [activeLesson, setActiveLesson] = useState();\r\n    const [addLesson, setAddLesson] = useState();\r\n    const [deleteType, setDeleteType] = useState();\r\n    const [objToDelete, setObjToDelete] = useState();\r\n    const [isDeleting, setIsDeleting] = useState(false);\r\n    const history = useHistory();\r\n\r\n\r\n    props.routeClicked(\"Course Overview\");\r\n\r\n\r\n\r\n    function handleCreateChapterClose() {\r\n        setIsCreateChapterDialogOpen(false);\r\n    }\r\n\r\n    function openCreateChapterDialog() {\r\n        setIsCreateChapterDialogOpen(true);\r\n    }\r\n\r\n    function handleCreateLessonDialogClose() {\r\n        setIsCreateLessonDialogOpen(false);\r\n    }\r\n\r\n    function openCreateLessonDialog(addLesson) {\r\n        setAddLesson(addLesson);\r\n        setIsCreateLessonDialogOpen(true);\r\n    }\r\n\r\n    function handleEditCourseOverviewDialogClose() {\r\n        setIsEditCourseOverviewDialogOpen(false);\r\n    }\r\n\r\n    function openEditCourseOverviewDialog() {\r\n        setIsEditCourseOverviewDialogOpen(true);\r\n    }\r\n\r\n    function viewPublished() {\r\n        props.history.push(`/courseOverview/${course.id}`);\r\n    }\r\n\r\n    function openDeleteDialog(deleteType, objToDelete) {\r\n        setIsDeleteDialogOpen(true);\r\n        setDeleteType(deleteType);\r\n        setObjToDelete(objToDelete)\r\n    }\r\n\r\n    function handleCloseDeleteDialog() {\r\n        setIsDeleteDialogOpen(false);\r\n    }\r\n\r\n    async function handleDeleteSubmit() {\r\n\r\n        props.setDeletingCourse(true)\r\n\r\n        if (deleteType === 'Course') {\r\n            await FirebaseService.deleteCourse(objToDelete);\r\n            await props.updateCourses()\r\n            await props.updateUser(props.user.id);\r\n            history.push('/courseLibrary');\r\n\r\n        } else if (deleteType === 'Lesson') {\r\n\r\n            await FirebaseService.deleteLesson(course, chapterInContext, objToDelete);\r\n            setActiveLesson();\r\n            setChapterInContext();\r\n            await props.updateCourses();\r\n            await props.updateUser(props.user.id);\r\n        }\r\n\r\n        props.setDeletingCourse(false);\r\n\r\n    }\r\n\r\n    async function updateLesson(lessonInfo, add) {\r\n\r\n        await FirebaseService.updateLesson(course, chapterInContext, lessonInfo, add).then(() => {\r\n            getCourseById(id);\r\n            setAddLesson(add);\r\n            setIsCreateLessonDialogOpen(false);\r\n        }).catch((err) => { console.log(err) });\r\n    }\r\n\r\n    async function updateCourse(courseInfo) {\r\n        setIsEditCourseOverviewDialogOpen(false);\r\n        if (courseInfo.thumbnailFile === undefined) {\r\n            courseInfo.thumbnailFile = \"\";\r\n        }\r\n        await FirebaseService.updateCourse(course.id, courseInfo);\r\n        props.updateCourses();\r\n        getCourseById(id);\r\n    }\r\n\r\n    async function addNewChapter(chapterInfo) {\r\n        await FirebaseService.addNewChapter(course, chapterInfo);\r\n        getCourseById(id);\r\n        setIsCreateChapterDialogOpen(false);\r\n    }\r\n\r\n\r\n    async function resolveLessons(chapter) {\r\n        const lessonsRefLength = chapter.lessonsRef?.length;\r\n        if (lessonsRefLength > 0) {\r\n            return Promise.all(\r\n                chapter.lessonsRef.map(async lessonRef => {\r\n                    const lesson = await FirebaseService.getDocFromDocRef(lessonRef)\r\n                    return lesson;\r\n                })\r\n            ).then(results => {\r\n                chapter.lessons = results;\r\n                return chapter;\r\n            });\r\n\r\n        } else {\r\n            return Promise.resolve(chapter);\r\n        }\r\n    }\r\n\r\n    async function resolveChapters(chapters) {\r\n        return Promise.all(chapters.map(chapter => resolveLessons(chapter)))\r\n    }\r\n\r\n    async function getCourseById(id) {\r\n        const course = await FirebaseService.getCourseById(id);\r\n        course.chapters = await resolveChapters(course.chapters);\r\n        if (chapterInContext) {\r\n            const chapter = course.chapters.find(chapter => chapter.id === chapterInContext.id);\r\n            setChapterInContext(chapter);\r\n        }\r\n        setCourse(course);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (id && !props.isDeletingCourse) {\r\n            getCourseById(id);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // after adding/editing a lesson, ensure we navigate to the freshest version\r\n        if (course && chapterInContext) {\r\n            if (!addLesson) {\r\n                const updatedLesson = course.chapters[chapterInContext.id].lessons.find(lesson => {\r\n                    if (lesson.id === activeLesson.id) {\r\n                        return lesson;\r\n                    }\r\n                });\r\n                if (updatedLesson) {\r\n                    setActiveLesson(updatedLesson);\r\n                }\r\n            } else {\r\n                const lessons = course.chapters[chapterInContext.id].lessons;\r\n                setActiveLesson(lessons[lessons.length - 1]);\r\n            }\r\n        }\r\n    }, [course]);\r\n\r\n    let dialogs;\r\n    let viewPublishedCourseButton;\r\n    if (props.editable) {\r\n        dialogs = <div>\r\n            <CreateChapterDialog isOpen={isCreateChapterDialogOpen} handleSubmit={addNewChapter} handleClose={handleCreateChapterClose} />\r\n            <CreateLessonDialog\r\n                isOpen={isCreateLessonDialogOpen}\r\n                add={addLesson}\r\n                lesson={activeLesson}\r\n                updateLesson={updateLesson}\r\n                handleClose={handleCreateLessonDialogClose} />\r\n\r\n            <CreateCourseDialog\r\n                isOpen={isEditCourseOverviewDialogOpen}\r\n                handleClose={handleEditCourseOverviewDialogClose}\r\n                course={course}\r\n                handleSubmit={updateCourse}\r\n            />\r\n            <DeleteDialog\r\n                isOpen={isDeleteDialogOpen}\r\n                handleClose={handleCloseDeleteDialog}\r\n                handleSubmit={handleDeleteSubmit}\r\n                deleteType={deleteType}\r\n                objToDelete={objToDelete}\r\n            />\r\n        </div>\r\n\r\n        viewPublishedCourseButton = <Button variant=\"contained\" color=\"secondary\" id=\"view-published\" onClick={viewPublished}> View Published Course </Button>\r\n    }\r\n\r\n\r\n\r\n    if (course) {\r\n        return (\r\n            <div className=\"edit-course\">\r\n                <Grid container spacing={6}>\r\n                    <Grid item xs={3}>\r\n                        <CourseNavigationPane\r\n                            editable={props.editable}\r\n                            activeLesson={activeLesson}\r\n                            setActiveLesson={setActiveLesson}\r\n                            openLessonModal={openCreateLessonDialog}\r\n                            chapterInContext={chapterInContext}\r\n                            setChapterInContext={setChapterInContext}\r\n                            course={course}\r\n                            openCreateChapterDialog={openCreateChapterDialog}\r\n                            openDeleteDialog={openDeleteDialog}\r\n                        />\r\n                        {viewPublishedCourseButton}\r\n                    </Grid>\r\n                    <Grid item xs={9}>\r\n                        <CourseOverviewPane\r\n                            setActiveLesson={setActiveLesson}\r\n                            setChapterInContext={setChapterInContext}\r\n                            editable={props.editable}\r\n                            activeChapter={chapterInContext}\r\n                            activeLesson={activeLesson}\r\n                            course={course}\r\n                            openEditCourseOverviewDialog={openEditCourseOverviewDialog}\r\n                            openLessonModal={openCreateLessonDialog}\r\n                            openDeleteDialog={openDeleteDialog}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                {dialogs}\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div>\r\n                Loading...\r\n                <CircularProgress></CircularProgress>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default withRouter(CourseOverview);","import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport { AppBar, Toolbar, IconButton, Typography, Button, } from '@material-ui/core';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link as RouterLink,\r\n  Redirect,\r\n  withRouter,\r\n  browserHistory\r\n} from \"react-router-dom\";\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport CourseLibrary from './components/CourseLibrary/CourseLibrary';\r\nimport Login from './components/Login/Login';\r\nimport MyCourses from './components/MyCourses/MyCourses';\r\nimport UserProfile from './components/UserProfile/UserProfile';\r\nimport CreateCourse from './components/CreateCourse/CreateCourse.component';\r\nimport CourseOverview from './components/CourseOverview/CourseOverview.component';\r\nimport { MuiThemeProvider, ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\n\r\nimport * as FirebaseService from '../src/service/firebase.service'\r\n\r\nconst buttonTheme = createMuiTheme({\r\n  palette: {\r\n    primary: { // peaches\r\n      main: '#87618c',\r\n    },\r\n    secondary: {  // purples\r\n      main: '#442b4a',\r\n    },\r\n  },\r\n  typography: {\r\n    useNextVariants: true\r\n  },\r\n  overrides: {\r\n    MuiButton: {\r\n      root: {\r\n        textTransform: 'none',\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: { // peaches\r\n      light: '#f44336',\r\n      main: '#f6eee7',\r\n      dark: '#dbbca1',\r\n    },\r\n    secondary: {  // purples\r\n      light: '#a17da5',\r\n      main: '#87618c',\r\n      dark: '#442b4a',\r\n    },\r\n  },\r\n  typography: {\r\n    useNextVariants: true\r\n  },\r\n  overrides: {\r\n    MuiButton: {\r\n      root: {\r\n        textTransform: 'none',\r\n      },\r\n    },\r\n  },\r\n})\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      courses: [],\r\n      users: [],\r\n      currentUser: undefined,\r\n      loadingUser: true,\r\n      myCourseSelected: false,\r\n      allCoursesSelected: false,\r\n      createCourseSelected: false,\r\n      isDeletingCourse: false\r\n    };\r\n    this.fetchCourses = this.fetchCourses.bind(this);\r\n    this.fetchUsers = this.fetchUsers.bind(this);\r\n    this.render = this.render.bind(this);\r\n    this.updateUser = this.updateUser.bind(this);\r\n    this.setUser = this.setUser.bind(this);\r\n    this.getUserOnLoad = this.getUserOnLoad.bind(this);\r\n    this.routeClicked = this.routeClicked.bind(this);\r\n    this.deletingCourse = this.deletingCourse.bind(this);\r\n    this.fetchCourses().then(() => {\r\n      this.getUserOnLoad();\r\n    });\r\n  }\r\n\r\n  async updateUser(userId) {\r\n    if (!userId) {\r\n      this.setState({ currentUser: undefined });\r\n      this.setState({ loadingUser: false });\r\n      return;\r\n    }\r\n    await FirebaseService.getUserById(userId)\r\n      .then(result => {\r\n        const user = result.data();\r\n\r\n        if (user.createdCoursesRefs && user.createdCoursesRefs.length > 0) {\r\n\r\n          const newCourses = user.createdCoursesRefs\r\n            .map(courseRef => this.state.courses.find(course => course.id === courseRef.id));\r\n\r\n          user.createdCourses = user.createdCoursesRefs\r\n            .map(courseRef => this.state.courses.find(course => course.id === courseRef.id));\r\n        }\r\n\r\n        if (user.pastCoursesRefs && user.pastCoursesRefs.length > 0) {\r\n          user.pastCourses = user.pastCoursesRefs\r\n            .map(courseRef => this.state.courses.find(course => course.id === courseRef.id));\r\n        }\r\n\r\n        if (user.favoritedCoursesRefs && user.favoritedCoursesRefs.length > 0) {\r\n          user.favoritedCourses = user.favoritedCoursesRefs\r\n            .map(courseRef => this.state.courses.find(course => course.id === courseRef.id));\r\n        }\r\n\r\n        this.setState({ currentUser: user });\r\n        this.setState({ loadingUser: false });\r\n\r\n      })\r\n  }\r\n\r\n  deletingCourse(value) {\r\n    this.setState({\r\n      isDeletingCourse: value\r\n    }\r\n    )\r\n  }\r\n\r\n  getUserOnLoad() {\r\n    let user = FirebaseService.getCurrentUser();\r\n    if (user) {\r\n      this.updateUser(user.uid);\r\n    } else if (document.cookie.split(';').some((item) => item.trim().startsWith('userid='))) {\r\n      var cookieValue = document.cookie.replace(/(?:(?:^|.*;\\s*)userid\\s*\\=\\s*([^;]*).*$)|^.*$/, \"$1\");\r\n      this.updateUser(cookieValue);\r\n    } else {\r\n      this.updateUser(undefined);\r\n    }\r\n  }\r\n\r\n  setUser(user) {\r\n    this.updateUser(user.id);\r\n    document.cookie = `userid=${user.id}`;\r\n  }\r\n\r\n  async fetchCourses() {\r\n    let courses = [];\r\n    await FirebaseService.getAllCourses().then((queryResults) => {\r\n      queryResults.forEach((doc) => {\r\n        const course = doc.data();\r\n        const courseId = doc.id;\r\n        course.owner.get().then(user => {\r\n          course.owner = user.data();\r\n        })\r\n        course.id = courseId\r\n        courses.push(course);\r\n        this.setState({ courses: courses });\r\n      });\r\n    });\r\n  }\r\n\r\n  async fetchUsers() {\r\n    let users = [];\r\n    await FirebaseService.getAllUsers()\r\n      .then((queryResults) => {\r\n        queryResults.forEach((doc) => {\r\n          const user = doc.data();\r\n          user.id = doc.id;\r\n          users.push(user);\r\n          this.setState({\r\n            users\r\n          })\r\n        })\r\n      })\r\n  }\r\n\r\n  routeClicked(location) {\r\n    console.log(\"New Location: \", location);\r\n    if (location === \"Course Library\" && !this.state.allCoursesSelected) {\r\n      this.setState({\r\n        allCoursesSelected: true,\r\n        myCourseSelected: false,\r\n        createCourseSelected: false,\r\n      })\r\n    } else if (location === \"My Courses\" && !this.state.myCourseSelected) {\r\n      this.setState({\r\n        allCoursesSelected: false,\r\n        myCourseSelected: true,\r\n        createCourseSelected: false,\r\n      })\r\n    } else if (location === \"Create Course\" && !this.state.createCourseSelected) {\r\n      this.setState({\r\n        allCoursesSelected: false,\r\n        myCourseSelected: false,\r\n        createCourseSelected: true,\r\n      })\r\n    } else if ((location !== \"Course Library\" && location !== \"My Courses\" && location !== \"Create Course\")\r\n      && (this.state.allCoursesSelected || this.state.myCourseSelected || this.state.createCourseSelected)) {\r\n      this.setState({\r\n        allCoursesSelected: false,\r\n        myCourseSelected: false,\r\n        createCourseSelected: false,\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    // If not logged in redirect to the login page with redirect info. Url will\r\n    // briefly flash to login while we figure out if we have a user.\r\n    const PrivateRoute = ({ isLoggedIn, ...props }) =>\r\n      this.state.currentUser\r\n        ? <Route {...props} />\r\n        : <Redirect to={{\r\n          pathname: '/login',\r\n          state: { from: props.location }\r\n        }} />\r\n\r\n    return (\r\n      <MuiThemeProvider theme={theme}>\r\n        <Router onChange={this.browserRouteChanged}>\r\n          <div>\r\n            <nav hidden={!this.state.currentUser}>\r\n              <AppBar position=\"static\">\r\n                <Toolbar>\r\n                  <MuiThemeProvider theme={buttonTheme}>\r\n                    <Button variant=\"contained\" color={this.state.allCoursesSelected ? \"secondary\" : \"primary\"} className=\"menu-button main\" component={RouterLink} to=\"/courseLibrary\">All Courses</Button>\r\n                    <Button variant=\"contained\" color={this.state.myCourseSelected ? \"secondary\" : \"primary\"} className=\"menu-button main\" component={RouterLink} to=\"/myCourses\">My Courses</Button>\r\n                    <Button variant=\"outlined\" color={this.state.createCourseSelected ? \"secondary\" : \"primary\"} className=\"menu-button align-left\" component={RouterLink} to=\"/createCourse\">Create a Course</Button>\r\n                  </MuiThemeProvider>\r\n                  <IconButton className=\"menu-button profile-icon\" component={RouterLink} to=\"/profile\" color=\"inherit\" aria-label=\"menu\">\r\n                    <AccountCircleIcon />\r\n                  </IconButton>\r\n                </Toolbar>\r\n              </AppBar>\r\n            </nav>\r\n\r\n            {/* A <Switch> looks through its children <Route>s and\r\n                renders the first one that matches the current URL. */}\r\n            <Switch>\r\n              <Route exact path=\"/login\">\r\n                <Login routeClicked={this.routeClicked} completeLogin={this.setUser} user={this.state.currentUser} loadingUser={this.state.loadingUser} />\r\n              </Route>\r\n              <PrivateRoute path=\"/(courseLibrary|)\">\r\n                <CourseLibrary routeClicked={this.routeClicked} courses={this.state.courses} user={this.state.currentUser} updateUser={this.updateUser} />\r\n              </PrivateRoute>\r\n              <PrivateRoute path=\"/courseOverview/:id\">\r\n                <CourseOverview routeClicked={this.routeClicked} editable={false} user={this.state.currentUser}></CourseOverview>\r\n              </PrivateRoute>\r\n              <PrivateRoute path=\"/myCourses\">\r\n                <MyCourses routeClicked={this.routeClicked} user={this.state.currentUser}></MyCourses>\r\n              </PrivateRoute>\r\n              <PrivateRoute path=\"/profile\">\r\n                <UserProfile routeClicked={this.routeClicked} user={this.state.currentUser} updateUser={this.updateUser}></UserProfile>\r\n              </PrivateRoute>\r\n              <PrivateRoute path=\"/createCourse\">\r\n                <CreateCourse routeClicked={this.routeClicked} user={this.state.currentUser} updateUser={this.updateUser} updateCourses={this.fetchCourses}></CreateCourse>\r\n              </PrivateRoute>\r\n              <PrivateRoute path=\"/editCourse/:id\">\r\n                <CourseOverview setDeletingCourse={this.deletingCourse} isDeletingCourse={this.state.isDeletingCourse} routeClicked={this.routeClicked} editable={true} user={this.state.currentUser} updateUser={this.updateUser} updateCourses={this.fetchCourses}></CourseOverview>\r\n              </PrivateRoute>\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n      </MuiThemeProvider>\r\n    )\r\n  }\r\n};\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}