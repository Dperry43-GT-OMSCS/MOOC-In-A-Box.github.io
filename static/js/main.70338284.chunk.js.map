{"version":3,"sources":["components/CourseCard/CourseCard.js","components/CourseLibrary/CourseLibraryToolbar/SearchBar/SearchBar.component.js","components/CourseLibrary/CourseLibraryToolbar/CourseLibraryToolbarMenu/CourseLibraryToolbarMenuItem/CourseLibraryToolbarMenuItem.component.js","components/CourseLibrary/CourseLibraryToolbar/CourseLibraryToolbarMenu/CourseLibraryToolbarMenu.component.js","components/CourseLibrary/CourseLibraryToolbar/CourseLibraryToolbar.component.js","service/firebase.service.js","components/CourseLibrary/CourseLibrary.js","components/Login/Login.js","components/CoursesDropdown/CoursesDropdown.component.js","components/MyCourses/MyCourses.js","components/UserProfile/EditDialog/EditDialog.component.js","components/UserProfile/UserProfileSection/UserProfileSection.component.js","components/UserProfile/UserProfile.js","components/CreateCourse/CreateCourseDialog/CreateCourseDialog.component.js","components/CreateCourse/CreateCourse.component.js","components/CourseOverview/CourseNavigationPane/CourseChapterPanel/CourseChapterPanel.component.js","components/CourseOverview/CourseNavigationPane/CourseNavigationPane.component.js","components/CourseOverview/CourseOverviewPane/CourseLesson/CourseLesson.component.js","components/CourseOverview/CourseOverviewPane/CourseOverviewPane.component.js","components/CourseOverview/Dialogs/CreateChapterDialog/CreateChapterDialog.component.js","components/CourseOverview/Dialogs/CreateLessonDialog/CreateLessonDialog.component.js","components/CourseOverview/CourseOverview.component.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","maxWidth","minWidth","maxHeight","minHeight","position","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","actionsRow","bottom","left","content","paddingBottom","CourseCard","props","classes","React","useState","isFavorited","setIsFavorited","isCourseAFavorite","Card","variant","className","CardHeader","title","course","subheader","owner","displayName","action","IconButton","aria-label","onClick","removeFavoriteClicked","favoriteClicked","CardMedia","image","CardContent","Typography","color","component","description","CardActions","disableSpacing","Button","Link","to","id","SearchBar","TextField","value","searchValue","onChange","type","onSearchClicked","CourseLibraryToolbarMenuItem","FormControlLabel","control","Radio","label","CourseLibraryToolbarMenu","menuItems","options","map","option","handleClick","associatedClickFunction","display","Menu","menuId","anchorEl","element","keepMounted","open","Boolean","onClose","closeFunction","MenuItem","FormControl","FormLabel","menuLabel","RadioGroup","name","radioGroupName","menuValue","event","target","CourseLibraryToolbar","menuButtons","menuItem","clickedFunction","buttonText","menus","menuOptions","AppBar","Toolbar","searchInfo","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","getUserById","userId","collection","doc","get","getAllUsers","updateUser","updates","a","set","merge","createUser","userAuth","uid","photoURL","email","getCurrentUser","user","auth","currentUser","deleteUser","delete","then","document","cookie","catch","error","console","log","getCourseById","courseId","courseResult","exists","data","createCourse","courseInfo","userDocRef","newCourseObj","chapters","overview","JSON","stringify","add","courseDoc","usersCreatedCourses","createdCoursesRefs","length","courseRef","push","updateObject","favoriteCourse","favoritedCourses","favoritedCoursesRefs","removeFavoriteCourse","filter","item","updateCourse","addNewChapter","newChapterInfo","chapter","lessonsRef","updateLesson","chapterInfo","lessonInfo","lessonDoc","lessonRef","logUserInUser","isGoog","provider","GoogleAuthProvider","FacebookAuthProvider","users","undefined","authUser","queryResults","forEach","signInWithPopup","result","u","signOut","getDocFromDocRef","docRef","myResult","CourseLibrary","sortByClicked","setState","sortByElement","currentTarget","sortByHandleClose","sortFilterValue","topicClicked","topicElement","topicHandleClose","topicFilterValue","organizationClicked","organizationElement","organizationHandleClosed","organizationFilterValue","buildMenuItems","state","find","favoritedCourse","handleSearchChange","bind","handleSearchClicked","activeCourses","courses","routeClicked","e","searchValueLowerCase","toLowerCase","this","includes","FirebaseService","listItems","Grid","s","class","container","spacing","Component","LoginPage","redirectToReferrer","loginGoogle","loginFacebook","completeLogin","history","loadingUser","CircularProgress","from","location","pathname","withRouter","CoursesDropdownComponent","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","xs","md","List","dense","ListItem","RouterLink","includeEditIcon","CurrentCoursesComponent","currentCourses","PastCoursesComponent","pastCourses","SavedCoursesComponent","savedCourses","CreatedCoursesComponent","createdCourses","MyCourses","setUser","useEffect","courseComponentList","hasCourses","pastCourse","CssBaseline","Container","Paper","EditDialog","Dialog","isOpen","handleClose","aria-labelledby","DialogTitle","field","DialogContent","DialogContentText","autoFocus","margin","fullWidth","DialogActions","handleSubmit","userKeyToDisplayMap","UserProfileSection","align","displayValue","isEditable","openDialog","isDialogOpen","displayKey","setDisplayName","oldDisplayName","setOldDiplayName","isDisplayNameDialogOpen","setIsDisplayNameDialogOpen","userInterests","setUserInterests","oldUserInterests","setOldUserInterests","isUserInterestsDialogOpen","setIsUserInterestsDialogOpen","res","interests","err","Divider","CreateCourseDialog","setDescription","setTitle","editorState","setEditorState","setOverview","isTitleError","setIsTitleError","isDescriptionError","setIsDescriptionError","EditorState","createWithContent","convertFromRaw","parse","createEmpty","required","helperText","editorClassName","handleKeyCommand","command","newState","RichUtils","convertToRaw","getCurrentContent","onEditorStateChange","titleIsGood","descriptionIsGood","currentContentState","courseDetails","CreateCourse","isCreateCourseDialogOpen","setIsCreateCourseDialogOpen","useHistory","updateCourses","currnetCoursesSection","CourseChapterPanel","addNewLessonButton","lessonItems","lessons","lesson","isActiveLesson","activeLesson","selected","setChapterInContext","setActiveLesson","listItemClicked","button","ListItemText","primary","editable","openLessonModal","defaultExpanded","chapterInContext","CourseNavigationPane","addNewChapterButton","courseNavigationPanels","openCreateChapterDialog","YoutubeComponentConfig","opts","width","playerVars","autoplay","videoId","EditCourseLesson","hasYoutubeVideo","goToPreviousLesson","navigateToPreviousLesson","goToNextLesson","navigateToNextLesson","str","isJson","contentStateObj","toolbarHidden","readOnly","text","ContentState","createFromText","youtubeConfig","url","video","myParamters","split","searchParams","URLSearchParams","getVideoConfig","onReady","pauseVideo","isFirstLesson","isLastLesson","nextLesson","nextChapter","leftButton","endIcon","prevLesson","prevChapter","rightButton","startIcon","getButtonDiv","CourseOverviewPane","openEditCourseOverviewDialogButton","lessonArray","i","j","openEditCourseOverviewDialog","currentLessonIndex","indexOf","currentLessonIndexInChapter","activeChapter","numLessonsInChapter","numChapters","activeChapterIndex","getLessonInformation","indexOfCurrentLesson","CreateChapterDialog","CreateLessonDialog","setVideo","isYoutubeError","setIsYoutubeError","descriptionJSON","tempVideo","dialogs","viewPublishedCourseButton","useParams","setCourse","isCreateChapterDialogOpen","setIsCreateChapterDialogOpen","isCreateLessonDialogOpen","setIsCreateLessonDialogOpen","isEditCourseOverviewDialogOpen","setIsEditCourseOverviewDialogOpen","addLesson","setAddLesson","openCreateLessonDialog","resolveLessons","Promise","all","results","resolve","resolveChapters","updatedLesson","buttonTheme","createMuiTheme","palette","main","secondary","typography","useNextVariants","overrides","MuiButton","textTransform","light","dark","App","myCourseSelected","allCoursesSelected","fetchCourses","fetchUsers","render","getUserOnLoad","pastCoursesRefs","some","trim","startsWith","cookieValue","replace","PrivateRoute","isLoggedIn","browserRouteChanged","hidden","exact","path","window","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.70338284.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { Button } from '@material-ui/core';\nimport {Link} from 'react-router-dom'\nimport FavoriteBorderOutlinedIcon from '@material-ui/icons/FavoriteBorderOutlined';\n\n\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: 345,\n    minWidth: 345,\n    maxHeight: 400,\n    minHeight: 400,\n    position: 'relative',\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n  actionsRow: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0\n  }, \n  content: {\n    paddingBottom: '1rem'\n  }\n}));\n\nexport default function CourseCard(props) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n  const [isFavorited, setIsFavorited] = React.useState(false)\n\n\n  if ( props.isCourseAFavorite != isFavorited){\n    setIsFavorited(props.isCourseAFavorite);\n  }\n\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  const favoriteButtonClicked = () => {\n    if (isFavorited) {\n      setIsFavorited(false);\n      props.removeFavoriteClicked(props.course);\n    } else {\n      setIsFavorited(true);\n      props.favoriteClicked(props.course);\n    }\n   \n  }\n\n  return (\n    <Card variant=\"outlined\" className={classes.root}>\n      <CardHeader\n        title={props.course.title}\n        subheader={props.course.owner.displayName}\n        action={\n          <IconButton aria-label=\"add to favorites\" onClick={favoriteButtonClicked}>\n           { isFavorited ? <FavoriteIcon /> : <FavoriteBorderOutlinedIcon />  } \n          </IconButton>\n        }\n      />\n      <CardMedia\n        className={classes.media}\n        image=\"/static/images/cards/paella.jpg\"\n        title=\"Paella dish\"\n      />\n      <CardContent className={classes.content}>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {props.course.description}\n        </Typography> \n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {props.course.owner.displayName}\n        </Typography>\n      </CardContent>\n      <CardActions className={classes.actionsRow} disableSpacing>\n        <Button \n          variant=\"contained\" \n          color=\"secondary\"\n          component={Link}\n          to={`/courseOverview/${props.course.id}`}\n          >\n            Overview\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}","import React from 'react';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport { IconButton } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\n\nimport './SearchBar.css';\n\nfunction SearchBar(props) {\n  return (\n    <div className=\"search-bar\">\n      <TextField value={props.searchValue} onChange={props.onChange} id=\"outlined-search\" type=\"search\" variant=\"outlined\" color=\"secondary\" />\n      <IconButton className=\"menu-button\" onClick={props.onSearchClicked}>\n        <SearchIcon className=\"search-bar-icon\" />\n      </IconButton>\n    </div>\n  )\n}\n\nexport default SearchBar\n\n\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Radio from '@material-ui/core/Radio';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\n\nfunction CourseLibraryToolbarMenuItem(props){\n    return (\n      <FormControlLabel value={props.value} control={<Radio />} label={props.value} />\n    )\n  }\n\n  export default CourseLibraryToolbarMenuItem","import React from 'react';\n\nimport Menu from '@material-ui/core/Menu';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport CourseLibraryToolbarMenuItem from './CourseLibraryToolbarMenuItem/CourseLibraryToolbarMenuItem.component';\n\n\n\nfunction CourseLibraryToolbarMenu(props){\n\n  let menuItems = props.options.map( option => {\n    return (\n      <CourseLibraryToolbarMenuItem\n        handleClick={option.associatedClickFunction}\n        value={option.display}>\n      </CourseLibraryToolbarMenuItem>\n    )\n  })\n\n  const onChangeFunction = (event) => {\n    props.closeFunction(event.target.value)\n  }\n\n    return (\n      <Menu\n          id={props.menuId}\n          anchorEl={props.element}\n          keepMounted\n          open={Boolean(props.element)}\n          onClose={props.closeFunction}\n        >\n          <MenuItem>\n            <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">{props.menuLabel}</FormLabel>\n            <RadioGroup aria-label=\"gender\" name={props.radioGroupName} value={props.menuValue} onChange={onChangeFunction}>\n              {menuItems}\n            </RadioGroup>\n            </FormControl>\n          </MenuItem>\n      </Menu>\n    )\n  }\n\n  export default CourseLibraryToolbarMenu","import React from 'react';\n\nimport {AppBar, Toolbar, IconButton, Typography } from '@material-ui/core';\nimport {Button} from '@material-ui/core';\n\nimport SearchBar from './SearchBar/SearchBar.component';\nimport CourseLibraryToolbarMenu from './CourseLibraryToolbarMenu/CourseLibraryToolbarMenu.component'\n\n\n//<CourseLibraryMenu handleClose={this.handleClose} sortByElement={props.state.sortByElement}></CourseLibraryMenu>\n\n\nfunction CourseLibraryToolbar(props){\n\n    let menuButtons = props.menuItems.map(menuItem => {\n        return (\n            <Button\n                color=\"inherit\" \n                className=\"menu-button\"\n                onClick={menuItem.clickedFunction}\n            >\n                {menuItem.buttonText}\n            </Button>\n        )\n    })\n\n    let menus = props.menuItems.map(menuItem => {\n        return(\n            <CourseLibraryToolbarMenu\n                element={menuItem.element}\n                closeFunction = {menuItem.closeFunction}\n                options={menuItem.menuOptions}\n                menuId={menuItem.menuId}\n                menuLabel={menuItem.buttonText}\n            >\n            </CourseLibraryToolbarMenu>\n        )\n    })\n\n    return(\n        <AppBar position=\"static\" className=\"course-library-app-bar\">\n            <Toolbar>\n                {menuButtons}\n                <SearchBar searchValue={props.searchInfo.value} onChange={props.searchInfo.onChange} onSearchClicked={props.searchInfo.onClick}></SearchBar>\n            </Toolbar>\n            {menus}\n      </AppBar>\n    )\n}\n\nexport default CourseLibraryToolbar","import firebase from 'firebase'\n\n\n/**\n * Firebase Set Up\n */\nvar firebaseConfig = {\n    apiKey: \"AIzaSyA8tAHYGUiNkFHq6452W4Qr79eibVmtRZA\",\n    authDomain: \"mooc-in-a-box.firebaseapp.com\",\n    databaseURL: \"https://mooc-in-a-box.firebaseio.com\",\n    projectId: \"mooc-in-a-box\",\n    storageBucket: \"mooc-in-a-box.appspot.com\",\n    messagingSenderId: \"594314585164\",\n    appId: \"1:594314585164:web:3ae152452d1c238af100e9\",\n    measurementId: \"G-LXH34JCXZS\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\n\n\n/*\n* -----------------------------------------------------------\n*  USER Functions\n* -----------------------------------------------------------\n*/\n\nexport const getUserById = userId => {\n    return db.collection('Users').doc(userId).get();\n}\n\nexport const getAllUsers = () => {\n    return db.collection('Users').get();\n}\n\nexport const updateUser = async (userId, updates) => {\n    return db.collection('Users')\n        .doc(userId)\n        .set(updates, { merge: true })\n}\n\nexport const createUser = async (userAuth) => {\n    return db.collection('Users')\n        .doc(userAuth.uid)\n        .set({\n            id: userAuth.uid,\n            name: userAuth.displayName,\n            photoURL: userAuth.photoURL,\n            email: userAuth.email,\n        },\n            { merge: true }\n        )\n}\n\nexport const getCurrentUser = () => {\n    var user = firebase.auth().currentUser;\n    if (user) {\n        return user;\n    } else {\n        return undefined;\n    }\n}\n\nexport const deleteUser = async () => {\n    var user = firebase.auth().currentUser;\n\n    return await user.delete().then(function () {\n        document.cookie = 'userid=; expires=Thu, 01 Jan 1970 00:00:01 GMT;';\n        return true;\n    }).catch(function (error) {\n        console.log(error);\n        return false;\n    });\n}\n\n\n\n/*\n* -----------------------------------------------------------\n*  Course Functions\n* -----------------------------------------------------------\n*/\n\nexport const getCourseById = courseId => {\n    return db.collection('Course')\n        .doc(courseId)\n        .get()\n        .then(courseResult => {\n            if (courseResult.exists) {\n                const course = courseResult.data();\n                course.id = courseId;\n                return course;\n            } else {\n                return null\n            }\n        });\n};\n\nexport const getAllCourses = () => {\n    return db.collection('Course').get();\n}\n\nexport const createCourse = async (user, courseInfo) => {\n    const userDocRef = db.doc(`Users/${user.id}`)\n\n    const newCourseObj = {\n        owner: userDocRef,\n        title: courseInfo.title,\n        description: courseInfo.description,\n        chapters: courseInfo.chapters\n    }\n\n    if (courseInfo.overview) {\n        newCourseObj.overview = JSON.stringify(courseInfo.overview)\n\n    }\n\n    return await db.collection('Course').add(newCourseObj)\n        .then(async courseDoc => {\n            let usersCreatedCourses;\n            if (user.createdCoursesRefs && user.createdCoursesRefs.length > 0) {\n                usersCreatedCourses = user.createdCoursesRefs;\n            } else {\n                usersCreatedCourses = []\n            }\n\n            const courseRef = db.doc(`Course/${courseDoc.id}`)\n            usersCreatedCourses.push(courseRef);\n            const updateObject = {\n                createdCoursesRefs: usersCreatedCourses\n            }\n\n            return await updateUser(user.id, updateObject);\n        })\n}\n\nexport const favoriteCourse = async (user, courseInfo) => {\n    const courseRef = db.doc(`Course/${courseInfo.id}`)\n    let favoritedCourses;\n\n    if (user.favoritedCoursesRefs && user.favoritedCoursesRefs.length > 0) {\n        favoritedCourses = user.favoritedCoursesRefs;\n    } else {\n        favoritedCourses = []\n    }\n\n    favoritedCourses.push(courseRef);\n\n    const updateObject = {\n        favoritedCoursesRefs: favoritedCourses\n    }\n\n    return await updateUser(user.id, updateObject);\n}\n\nexport const removeFavoriteCourse = async (user, courseInfo) => {\n    const favoritedCourses = user.favoritedCoursesRefs.filter(item => item.id !== courseInfo.id);\n    const updateObject = {\n        favoritedCoursesRefs: favoritedCourses\n    }\n\n    return await updateUser(user.id, updateObject);\n}\n\n\nexport const updateCourse = async (courseId, updates) => {\n    if (updates.overview) {\n        updates.overview = JSON.stringify(updates.overview);\n    }\n    return db.collection('Course')\n        .doc(courseId)\n        .set(updates, { merge: true });\n}\n\n\n\n\n/*\n* !!!!!!!!\n* Course Attributes Section\n* !!!!!!!!\n*/\nexport const updateCourseOverview = async (course, content) => {\n    const contentJSON = JSON.stringify(content);\n\n    const updateObject = {\n        overview: contentJSON\n    }\n\n    return await updateCourse(course.id, updateObject);\n}\n\nexport const addNewChapter = async (course, newChapterInfo) => {\n    const chapter = {}\n    chapter.title = newChapterInfo.title;\n    chapter.description = newChapterInfo.description;\n    chapter.id = 0\n    chapter.lessonsRef = [];\n\n    if (course.chapters && course.chapters.length > 0) {\n        chapter.id = course.chapters.length;\n        course.chapters.push(chapter);\n    } else {\n        course.chapters = [];\n        course.chapters.push(chapter);\n    }\n\n    const updateObject = {\n        chapters: course.chapters\n    }\n\n    return await updateCourse(course.id, updateObject);\n\n}\n\nexport const updateLesson = async (course, chapterInfo, lessonInfo, add) => {\n    if (add) { // For initial lesson creation.\n        delete lessonInfo.id; // cuz undefined is not allowed\n        return await db.collection('Course').doc(course.id).collection('Lessons').add(lessonInfo)\n            .then(async lessonDoc => {\n                const lessonRef = db.doc(`Course/${course.id}/Lessons/${lessonDoc.id}`);\n                const chapters = course.chapters.map(chapter => {\n                    if (chapter === chapterInfo) {\n                        chapter.lessonsRef.push(lessonRef);\n                    }\n                    return chapter\n                });\n\n                const updateObject = {\n                    chapters\n                }\n                return await updateCourse(course.id, updateObject)\n            });\n    } else {\n        const lessonRef = db.doc(`Course/${course.id}/Lessons/${lessonInfo.id}`);\n        return await lessonRef.set(lessonInfo, { merge: true });\n    }\n}\n\n\n/*\n* -----------------------------------------------------------\n*  Login Functions\n* -----------------------------------------------------------\n*/\n\nexport const logUserInUser = async (isGoog) => {\n    let provider;\n    isGoog ? provider = new firebase.auth.GoogleAuthProvider() :\n        provider = new firebase.auth.FacebookAuthProvider();\n    let users = [];\n    let currentUser = undefined;\n    let authUser = undefined;\n    // Get all users so we can see if the logged in one is one of ours.\n    // TODO(jessi): store this data so we don't need to fetch it, or directly ask for the user\n    // once they log in and if no user exists create one. Sounds like work.\n    await getAllUsers()\n        .then((queryResults) => {\n            queryResults.forEach((doc) => {\n                const user = doc.data();\n                user.id = doc.id;\n                users.push(user);\n            })\n        });\n\n    return await firebase.auth().signInWithPopup(provider).then(async function (result) {\n        authUser = result.user;\n        users.forEach(u => {\n            if (u.id === authUser.uid) {\n                currentUser = u;\n            }\n        });\n        // Didn't find an existing user.\n        if (currentUser === undefined) {\n            // Create new user\n            await createUser(authUser).then(async () => {\n                // Get the new user to return\n                return getCurrentUser();\n            }).catch(error => {\n                console.log(error);\n            });\n        }\n        return currentUser;\n    }).catch(function (error) {\n        console.log(error);\n    });\n}\n\nexport const signOut = async () => {\n    return await firebase.auth().signOut().then(function () {\n        document.cookie = 'userid=; expires=Thu, 01 Jan 1970 00:00:01 GMT;';\n        return true;\n    }).catch(function (error) {\n        console.log(error);\n        return false;\n    });\n}\n\n\n\n/*\n* -----------------------------------------------------------\n*  Utility Functions\n* -----------------------------------------------------------\n*/\n\nexport const getDocFromDocRef = docRef => {\n    return docRef.get()\n        .then(result => {\n            if (result.exists) {\n                const myResult = result.data();\n                myResult.id = result.id;\n                return myResult;\n            } else {\n                return null;\n            }\n        })\n}","import React from 'react';\nimport './CourseLibrary.css';\nimport {Button} from '@material-ui/core';\nimport CourseCard from '../CourseCard/CourseCard';\nimport { render } from '@testing-library/react';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Grid from '@material-ui/core/Grid';\nimport {AppBar, Toolbar, IconButton, Typography } from '@material-ui/core';\nimport SearchBar from './CourseLibraryToolbar/SearchBar/SearchBar.component';\nimport CourseLibraryMenu from './CourseLibraryToolbar/CourseLibraryToolbarMenu/CourseLibraryToolbarMenu.component'\nimport CourseLibraryToolbar from './CourseLibraryToolbar/CourseLibraryToolbar.component'\n\nimport * as FirebaseService from '../../service/firebase.service';\n\n\nclass CourseLibrary extends React.Component {\n  constructor(props) {\n    super(props);\n    // Bind Search\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n    this.handleSearchClicked = this.handleSearchClicked.bind(this);\n    // Bind Sort By\n    this.sortByClicked = this.sortByClicked.bind(this);\n    this.sortByHandleClose = this.sortByHandleClose.bind(this);\n    // Bind Topic\n    this.topicClicked = this.topicClicked.bind(this);\n    this.topicHandleClose = this.topicHandleClose.bind(this);\n    // Bind Organization\n    this.organizationClicked = this.organizationClicked.bind(this);\n    this.organizationHandleClosed = this.organizationHandleClosed.bind(this);\n\n    this.buildMenuItems = this.buildMenuItems.bind(this);\n    this.favoriteClicked = this.favoriteClicked.bind(this);\n    this.removeFavoriteClicked = this.removeFavoriteClicked.bind(this);\n    this.state = {\n      searchValue: \"\",\n      sortByElement: null,\n      topicElement: null,\n      organizationElement: null,\n      sortFilterValue: null,\n      topicFilterValue: null,\n      organizationFilterValue:null,\n      activeCourses: props.courses\n    }\n    props.routeClicked(\"Course Library\");\n  }\n\n  /** Search Function */\n  handleSearchChange(e){\n    const searchValue = e.target.value;\n    const searchValueLowerCase = searchValue.toLowerCase();\n    console.log(searchValue);\n    const activeCourses = this.props.courses.filter(course => \n      ( course.title?.toLowerCase().includes(searchValueLowerCase) \n      || course.description?.toLowerCase().includes(searchValueLowerCase) \n      || course.owner.displayName?.toLowerCase().includes(searchValueLowerCase) \n      ))\n    this.setState({\n      searchValue,\n      activeCourses\n    })\n  }\n\n  handleSearchClicked(e){\n  }\n\n  /** Sort By Functions */\n  sortByClicked = event => {\n    this.setState({\n      sortByElement: event.currentTarget\n    });\n  };\n\n  sortByHandleClose = (value) => {\n    this.setState({\n      sortByElement: null,\n      sortFilterValue: value\n    });\n  };\n\n\n  /** Topic Functions */\n  topicClicked = event => {\n    this.setState({\n      topicElement: event.currentTarget\n    });\n  };\n\n  topicHandleClose = (value) => {\n    this.setState({\n      topicElement: null,\n      topicFilterValue: value\n    });\n  };\n\n  /** Organization functions */\n  organizationClicked = event => {\n    this.setState({\n      organizationElement: event.currentTarget\n    });\n  };\n\n  organizationHandleClosed = (value) => {\n    this.setState({\n      organizationElement: null,\n      organizationFilterValue: value\n    });\n  };\n\n  async favoriteClicked(course) {\n    await FirebaseService.favoriteCourse(this.props.user, course);\n    this.props.updateUser(this.props.user.id)\n  }\n\n  async removeFavoriteClicked(course){\n    await FirebaseService.removeFavoriteCourse(this.props.user, course);\n    this.props.updateUser(this.props.user.id)\n\n  }\n\n  buildMenuItems = () => {\n    const sortByInfo = {\n      buttonText: \"Sort By\",\n      menuId: \"menu-sort-by\",\n      clickedFunction: this.sortByClicked,\n      closeFunction: this.sortByHandleClose,\n      element: this.state.sortByElement,\n      radioGroupName: \"menuRadio\",\n      menuValue: this.state.sortFilterValue,\n      menuOptions: [\n        {\n          display: \"Newest\",\n          associatedClickFunction:  this.sortByHandleClose\n        },\n        {\n          display: \"Recommended\",\n          associatedClickFunction:  this.sortByHandleClose\n        },\n        {\n          display: \"Trending\",\n          associatedClickFunction:  this.sortByHandleClose\n        }\n      ]\n    }\n\n    const topicInfo = {\n      buttonText: \"Topic\",\n      menuId: \"menu-topic\",\n      clickedFunction: this.topicClicked,\n      element: this.state.topicElement,\n      closeFunction: this.topicHandleClose,\n      radioGroupName: \"topicRadio\",\n      menuValue: this.state.topicFilterValue,\n      menuOptions: [\n        {\n          display: \"Science\",\n          associatedClickFunction:  this.topicHandleClose\n        },\n        {\n          display: \"Technology\",\n          associatedClickFunction:  this.topicHandleClose\n        },\n        {\n          display: \"History\",\n          associatedClickFunction:  this.topicHandleClose\n        },\n        {\n          display: \"Arts\",\n          associatedClickFunction:  this.topicHandleClose\n        }\n      ]\n    }\n\n    const organizationInfo = {\n      buttonText: \"Organization\",\n      menuId: \"menu-organization\",\n      clickedFunction: this.organizationClicked,\n      element: this.state.organizationElement,\n      closeFunction: this.organizationHandleClosed,\n      radioGroupName: \"organizationRadio\",\n      menuValue: this.state.organizationFilterValue,\n      menuOptions: [\n        {\n          display: \"Required\",\n          associatedClickFunction:  this.organizationHandleClosed\n        },\n        {\n          display: \"Recommended\",\n          associatedClickFunction:  this.organizationHandleClosed\n        },\n        {\n          display: \"All Courses\",\n          associatedClickFunction:  this.organizationHandleClosed\n        }\n      ]\n    }\n\n    return [sortByInfo, topicInfo, organizationInfo];\n  }\n\n  isCourseAFavorite = (user, course) => {\n    \n    if( user.favoritedCourses && user.favoritedCourses.length > 0 ){\n      return user.favoritedCourses\n        .find(favoritedCourse => favoritedCourse.id === course.id);\n    }\n    return false;\n  }\n\n\n  render() {\n    // Mappings\n    const menuItems = this.buildMenuItems();\n    const favoriteClicked = this.favoriteClicked;\n    const isCourseAFavorite = this.isCourseAFavorite;\n    const removeFavoriteClicked = this.removeFavoriteClicked\n\n    const user = this.props.user;\n    const searchInfo = {\n      value: this.state.searchValue,\n      onChange: this.handleSearchChange,\n      onClick: this.handleSearchClicked\n    }\n    let listItems = []\n    if (user) {\n\n      listItems = this.state.activeCourses.map(function(item) {\n        return (\n            <Grid item s={4}>\n              <CourseCard course={item} favoriteClicked={favoriteClicked} removeFavoriteClicked={removeFavoriteClicked} isCourseAFavorite={isCourseAFavorite(user, item)}></CourseCard>\n            </Grid>\n        );\n      });\n    }\n    \n    return (\n      <div class=\"course-library\">\n        <CourseLibraryToolbar menuItems={menuItems} searchInfo={searchInfo}></CourseLibraryToolbar>\n          <div className=\"course-list\">\n          <Grid container spacing={3}>\n            {listItems}\n          </Grid>\n          </div>\n      </div>\n\n      );\n  }\n}\n\nexport default CourseLibrary;\n","import React from 'react';\nimport './Login.css';\nimport { Button } from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { withRouter, Redirect } from \"react-router-dom\";\nimport * as FirebaseService from '../../service/firebase.service';\n\nclass LoginPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { redirectToReferrer: false };\n    this.loginGoogle = this.loginGoogle.bind(this);\n    this.loginFacebook = this.loginFacebook.bind(this);\n\n  }\n\n  async loginGoogle(event) {\n    // TODO(jessi): set a loading state\n    await FirebaseService.logUserInUser(/* isGoog= */ true).then(u => {\n      this.props.completeLogin(u);\n      this.props.history.push(\"/courseLibrary\");\n      this.setState({ redirectToReferrer: true });\n    });\n    // TODO(jessi): unset loading state\n  }\n\n  async loginFacebook(event) {\n    // TODO(jessi): set a loading state\n    await FirebaseService.logUserInUser(/* isGoog= */ false).then(u => {\n      this.props.completeLogin(u);\n      this.props.history.push(\"/courseLibrary\");\n      this.setState({ redirectToReferrer: true });\n    });\n    // TODO(jessi): unset loading state\n  }\n\n  render() {\n    // Show loading screen while we load the user.\n    if (this.props.loadingUser) {\n      return (\n        <div>\n          Loading..\n          <CircularProgress></CircularProgress>\n        </div>\n      )\n    }\n\n    // Redirect if logged in or complete login.\n    const { from } = this.props.location.state || { from: { pathname: '/' } }\n    const { redirectToReferrer } = this.state\n    if (redirectToReferrer === true || this.props.user) {\n      return <Redirect to={from} />\n    }\n\n\n    // TODO(jessi): style these buttons\n    return (\n      <div className=\"login\">\n        <h1>Sign into Mooc in a Box</h1>\n        <Button color=\"inherit\" className=\"menu-button\" onClick={this.loginFacebook}>\n          Sign in with Facebook\n      </Button>\n        <Button color=\"inherit\" className=\"menu-button\" onClick={this.loginGoogle}>\n          Sign in with Google\n      </Button>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(LoginPage);\n","import React, { useState } from 'react';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport {Button} from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\n\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Grid from '@material-ui/core/Grid';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { IconButton } from '@material-ui/core';\n\nfunction CoursesDropdownComponent(props) {\n    return (\n      <ExpansionPanel>\n              <ExpansionPanelSummary\n              expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel1a-content\"\n              id=\"panel1a-header\"\n              >\n              <Typography variant=\"subtitle2\">{props.courses.length} Course(s)</Typography>\n              </ExpansionPanelSummary>\n              <ExpansionPanelDetails>\n              <Grid container spacing={2}>\n                  <Grid item xs={12} md={6}>\n                      <div>\n                          <List dense=\"true\">\n                          {\n                            props.courses.map( course => {\n                              console.log(course);\n                              return (\n                                <span>\n                                  <ListItem \n                                  >\n                                    <Button\n                                      component={RouterLink} \n                                      to={`/courseOverview/${course.id}`}\n                                    >\n                                      {course.title}\n                                    </Button>\n                                    { props.includeEditIcon && \n                                      <IconButton \n                                        className=\"menu-button\" \n                                        color=\"inherit\" \n                                        aria-label=\"menu\"\n                                        component={RouterLink}\n                                        to={`/editCourse/${course.id}`}\n                                      >\n                                        <EditIcon/>\n                                      </IconButton>\n                                    }\n                                  </ListItem>\n                                </span>\n                                \n                              )\n                            })\n                          }\n                          </List>\n                      </div>\n                      </Grid>\n                  </Grid>\n              </ExpansionPanelDetails>\n          </ExpansionPanel>\n    )\n  }\n\n  export default CoursesDropdownComponent;\n","import React, { useState } from 'react';\nimport './MyCourses.css';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport { Button } from '@material-ui/core';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Link } from 'react-router-dom'\n\nimport EditIcon from '@material-ui/icons/Edit';\nimport { IconButton } from '@material-ui/core';\n\nimport CoursesDropdownComponent from '../CoursesDropdown/CoursesDropdown.component';\n\n\n\n/**\n * \n * http://localhost:3000/courseOverview/rlfxOavBn4nPZLNTRMkL\n * http://localhost:3000/courseOverview/rlfxOavBn4nPZLNTRMkL\n */\n\n/**\n * \n * \n */\n\n\n\nfunction generate(element) {\n  return React.cloneElement(element, {\n    key: element,\n  })\n}\n\nfunction CurrentCoursesComponent(props) {\n  let numberOfCourses = props.currentCourses.length;\n\n  return (\n    <div>\n      <h1> Current Courses </h1>\n      <CoursesDropdownComponent courses={props.currentCourses}></CoursesDropdownComponent>\n    </div>\n  )\n}\n\n\nfunction PastCoursesComponent(props) {\n  return (\n    <div>\n      <h1> Past Courses </h1>\n      <CoursesDropdownComponent courses={props.pastCourses}></CoursesDropdownComponent>\n    </div>\n  )\n}\n\nfunction SavedCoursesComponent(props) {\n  return (\n    <div>\n      <h1> Favorited Courses </h1>\n      <CoursesDropdownComponent courses={props.savedCourses}></CoursesDropdownComponent>\n    </div>\n  )\n}\n\nfunction CreatedCoursesComponent(props) {\n  return (\n    <div>\n      <h1> Created Courses </h1>\n      <CoursesDropdownComponent courses={props.createdCourses} includeEditIcon={true}></CoursesDropdownComponent>\n    </div>\n  )\n}\n\n\n\nfunction MyCourses(props) {\n\n  const [user, setUser] = useState();\n  props.routeClicked(\"My Courses\");\n\n\n  React.useEffect(() => {\n    setUser(props.user);\n  }, [props]);\n\n\n  if (user) {\n    const courseComponentList = []\n    let hasCourses = false;\n\n\n    if (user.currentCourses && user.currentCourses.length > 0) {\n      const element = <CurrentCoursesComponent currentCourses={user.currentCourses}></CurrentCoursesComponent>\n      courseComponentList.push(element);\n      hasCourses = true;\n    }\n\n    if (user.pastCourses && user.pastCourse.length > 0) {\n      const element = <PastCoursesComponent pastCourses={user.pastCourses}></PastCoursesComponent>\n      courseComponentList.push(element);\n      hasCourses = true;\n\n    }\n\n    if (user.favoritedCourses && user.favoritedCourses.length > 0) {\n      const element = <SavedCoursesComponent savedCourses={user.favoritedCourses}></SavedCoursesComponent>\n      courseComponentList.push(element);\n      hasCourses = true;\n\n    }\n\n    if (user.createdCourses && user.createdCourses.length > 0) {\n      const element = <CreatedCoursesComponent createdCourses={user.createdCourses}></CreatedCoursesComponent>\n      courseComponentList.push(element);\n      hasCourses = true;\n\n    }\n    if (hasCourses) {\n      return (\n        <div className=\"MyCourses\">\n          <CssBaseline />\n          <Typography className=\"center\" variant=\"h3\" component=\"h3\">\n            My Courses\n          </Typography>\n          <Container maxWidth=\"lg\">\n            <Paper className=\"paper\">\n              {\n                courseComponentList.map(element => element)\n              }\n            </Paper>\n          </Container>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"MyCourses\">\n          <CssBaseline />\n          <Typography className=\"center\" variant=\"h3\" component=\"h3\">\n            My Courses\n            </Typography>\n          <Container maxWidth=\"lg\">\n            <Paper className=\"paper\">\n              <h4>You don't have any courses saved yet!</h4>\n            </Paper>\n          </Container>\n        </div>\n      )\n    }\n\n\n  } else {\n    return (\n      <div>\n        Loading..\n        <CircularProgress></CircularProgress>\n      </div>\n    )\n  }\n\n}\n\nexport default MyCourses;\n","import React from 'react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Button } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\n\nfunction EditDialog(props) {\n  return (\n    <div>\n      <Dialog open={props.isOpen} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">{props.field}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Edit the Field below to update your {props.field}\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label={props.field}\n            value={props.value}\n            onChange={props.onChange}\n            type=\"email\"\n            color=\"secondary\"\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.handleClose} color=\"secondary\">\n            Cancel\n            </Button>\n          <Button onClick={props.handleSubmit} color=\"secondary\">\n            Submit\n            </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n\nexport default EditDialog","import React from 'react';\n\n\nimport Typography from '@material-ui/core/Typography';\nimport { IconButton } from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport EditDialog from '../EditDialog/EditDialog.component';\n\nconst userKeyToDisplayMap = {\n    \"displayName\": \"Display Name\",\n    \"email\": \"Email Address\",\n    \"password\": \"Password\"\n  }\n\nfunction UserProfileSection(props){\n    function getEditIconIfNecessary(){\n      return props.isEditable ? \n        <IconButton className=\"menu-button\" color=\"inherit\" aria-label=\"menu\">\n          <EditIcon onClick={props.openDialog}/>\n        </IconButton>\n        :\n        <div></div>\n    }\n\n\n    return (\n      <div>\n        <Typography align=\"center\" variant=\"h6\" component=\"h6\">\n          <strong>{props.displayValue}</strong>\n        </Typography>\n        <Typography align=\"center\" variant=\"body1\" component=\"body1\">\n          <span>\n            {props.value}\n            {getEditIconIfNecessary()}\n          </span>\n        </Typography>\n        <EditDialog \n          isOpen={props.isDialogOpen}\n          handleClose={props.handleClose}\n          handleSubmit={props.handleSubmit}\n          field={userKeyToDisplayMap[props.displayKey]}\n          value={props.value}\n          onChange={props.onChange}\n        />\n      </div>\n    )\n}\n\nexport default UserProfileSection\n  ","import React, { useState } from 'react';\nimport './UserProfile.css';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport Divider from '@material-ui/core/Divider';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport UserProfileSection from './UserProfileSection/UserProfileSection.component';\nimport { Button } from '@material-ui/core';\nimport { withRouter } from \"react-router-dom\";\nimport * as FirebaseService from '../../service/firebase.service';\n\nconst passwordValue = \"*******\";\n\nfunction UserProfile(props) {\n\n\n  const [displayName, setDisplayName] = useState(null);\n  const [oldDisplayName, setOldDiplayName] = useState(null);\n  const [error, setError] = useState();\n  const [isDisplayNameDialogOpen, setIsDisplayNameDialogOpen] = useState(false)\n  const [userInterests, setUserInterests] = useState(null);\n  const [oldUserInterests, setOldUserInterests] = useState(null);\n  const [isUserInterestsDialogOpen, setIsUserInterestsDialogOpen] = useState(false);\n\n  props.routeClicked(\"User Profile\");\n\n\n\n  function handleDisplayNameClose() {\n    setDisplayName(oldDisplayName)\n    setIsDisplayNameDialogOpen(false)\n  }\n\n  function handleDisplayNameSubmit() {\n    FirebaseService.updateUser(props.user.id, {\n      displayName\n    }).then(result => {\n      setIsDisplayNameDialogOpen(false)\n      setOldDiplayName(displayName)\n      props.updateUser(props.user.id);\n\n    })\n      .catch(err => {\n        console.log(err);\n      })\n  }\n\n  function openDisplayNameDialog() {\n    setOldDiplayName(displayName)\n    setIsDisplayNameDialogOpen(true)\n  }\n\n  function onDisplayNameChange(e) {\n    setDisplayName(e.target.value);\n  }\n\n  /**\n   * Begin User Interests\n   */\n  function handleUserInterestsDialogClose() {\n    setUserInterests(oldUserInterests)\n    setIsUserInterestsDialogOpen(false)\n  }\n\n  function openUserInterestDialog() {\n    setOldUserInterests(userInterests)\n    setIsUserInterestsDialogOpen(true)\n  }\n\n  function onUserInterestsChange(e) {\n    setUserInterests(e.target.value);\n  }\n\n  function handleUserInterestSubmit() {\n    FirebaseService.updateUser(props.user.id, {\n      interests: userInterests\n    }).then(result => {\n      setIsUserInterestsDialogOpen(false)\n      setUserInterests(userInterests)\n      props.updateUser(props.user.id);\n    })\n      .catch(err => {\n        console.log(err);\n      })\n  }\n\n  async function signOut() {\n    await FirebaseService.signOut().then((res) => {\n      if (res) {\n        props.history.push(\"/\");\n        props.updateUser(undefined);\n      }\n      // TODO(jessi) handle error\n    });\n  }\n\n  async function deleteAccount() {\n    await FirebaseService.deleteUser().then((res) => {\n      if (res) {\n        props.history.push(\"/\");\n        props.updateUser(undefined);\n      }\n      // TODO(jessi) handle error\n    });\n  }\n\n  if (props.user && displayName === null && userInterests === null) {\n    setDisplayName(props.user.displayName)\n    setUserInterests(props.user.interests)\n  }\n\n  if (props.user) {\n    return (\n      <div className=\"userProfile\">\n        <CssBaseline />\n        <Typography className=\"center\" variant=\"h3\" component=\"h3\">\n          User Profile\n        </Typography>\n        <Container className=\"userProfile-bottom-padding\" maxWidth=\"lg\">\n          <Paper className=\"paper\">\n\n            <UserProfileSection\n              isEditable={true}\n              displayValue=\"User Interests\"\n              value={userInterests}\n              handleClose={handleUserInterestsDialogClose}\n              handleSubmit={handleUserInterestSubmit}\n              isDialogOpen={isUserInterestsDialogOpen}\n              openDialog={openUserInterestDialog}\n              onChange={onUserInterestsChange}\n              isEditable={true}\n            ></UserProfileSection>\n\n          </Paper>\n        </Container>\n        <Divider />\n\n\n        <Container maxWidth=\"lg\">\n          <Paper className=\"paper\">\n\n            <UserProfileSection\n              isEditable={true}\n              displayValue=\"Display Name\"\n              value={displayName}\n              handleClose={handleDisplayNameClose}\n              handleSubmit={handleDisplayNameSubmit}\n              isDialogOpen={isDisplayNameDialogOpen}\n              openDialog={openDisplayNameDialog}\n              onChange={onDisplayNameChange}\n            />\n            <Divider />\n            <UserProfileSection \n              isEditable={false} \n              displayValue=\"Email\" \n              value={props.user.email}\n            />\n            <Divider />\n            <div className=\"logout-btns\">\n              <Button color=\"inherit\" className=\"menu-button\" onClick={signOut}>\n                Sign out\n              </Button>\n              <Button color=\"inherit\" className=\"menu-button\" onClick={deleteAccount}>\n                Delete account\n              </Button>\n            </div>\n          </Paper>\n        </Container>\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        Loading..\n        <CircularProgress></CircularProgress>\n      </div>\n    )\n  }\n\n}\n\nexport default withRouter(UserProfile);\n","import React, { useState, useEffect } from 'react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Button } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport { Editor } from 'react-draft-wysiwyg';\nimport { EditorState, convertFromRaw, convertToRaw, RichUtils } from 'draft-js';\nimport '../../../../node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport './CreateCourseDialog.css'\n\n\nfunction CreateCourseDialog(props) {\n  const [description, setDescription] = useState(props.course?.description);\n  const [title, setTitle] = useState(props.course?.title);\n  const [editorState, setEditorState] = useState();\n  const [overview, setOverview] = useState(props.course?.overview);\n  const [isTitleError, setIsTitleError] = useState(false);\n  const [isDescriptionError, setIsDescriptionError] = useState(false);\n\n\n  function onCourseTitleChange(e) {\n    setTitle(e.target.value);\n  }\n\n  function onCourseDescriptionChange(e) {\n    setDescription(e.target.value);\n\n  }\n\n  function onEditorStateChange(editorState) {\n    setEditorState(editorState);\n  };\n\n\n  function handleKeyCommand(command) {\n    console.log(\"In here: \", command);\n    const newState = RichUtils.handleKeyCommand(editorState, command);\n    if (newState) {\n      setEditorState(newState);\n      setOverview(convertToRaw(newState.getCurrentContent()));\n\n      return 'handled';\n    }\n    return 'not-handled';\n  };\n\n  function isValidTitle(){\n    if (title && title.length > 0) {\n      setIsTitleError(false)\n      return true;\n    } else {\n      setIsTitleError(true);\n      return false;\n    }\n\n  }\n\n  function isValidDescription(){\n    if (description && description.length > 0) {\n      setIsDescriptionError(false)\n      return true;\n    } else {\n      setIsDescriptionError(true);\n      return false;\n    }\n    \n\n  }\n\n\n  function handleSubmit() {\n\n    const titleIsGood = isValidTitle();\n    const descriptionIsGood = isValidDescription();\n\n    if( titleIsGood && descriptionIsGood){\n      const currentContentState = editorState.getCurrentContent();\n      setOverview(convertToRaw(currentContentState));\n\n      const courseDetails = {\n        title,\n        description,\n        overview: convertToRaw(currentContentState)\n      }\n      console.log(courseDetails);\n      props.handleSubmit(courseDetails);\n    }\n  }\n\n  function handleClose(){\n    setIsTitleError(false)\n    setIsDescriptionError(false)\n    setDescription(props.course?.description)\n    setTitle(props.course?.title)\n    setOverview(props.course?.overview)\n    props.handleClose();\n  }\n\n\n  useEffect(() => {\n    if (overview) {\n      setEditorState(EditorState.createWithContent(convertFromRaw(JSON.parse(overview))));\n    }\n    else {\n      setEditorState(EditorState.createEmpty());\n    }\n  },[]);\n\n\n  return (\n    <div>\n      <Dialog open={props.isOpen} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Create A New Course</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            { \n              props.course ?\n              \"Edit this existing courses title, description, or overview.\"\n              :\n              \"Create a new course. Start by entering at least the title and description below.\"\n            }\n            </DialogContentText>\n          <TextField\n            autoFocus\n            required\n            error={isTitleError}\n            margin=\"dense\"\n            id=\"title\"\n            label=\"Course Title\"\n            onChange={onCourseTitleChange}\n            type=\"text\"\n            color=\"secondary\"\n            value={title}\n            fullWidth\n          />\n          <TextField\n            margin=\"dense\"\n            id=\"description\"\n            error={isDescriptionError}\n            label=\"Course Description\"\n            required\n            onChange={onCourseDescriptionChange}\n            helperText=\"This is a required field and is shown on the card in the Course Library\"\n            type=\"text\"\n            color=\"secondary\"\n            value={description}\n            fullWidth\n          />\n          <h4>Course Overview:</h4>\n          <div className=\"course-overview-section\">\n            <Editor\n              editorState={editorState}\n              editorClassName=\"editor-textbox\"\n              handleKeyCommand={handleKeyCommand}\n              onEditorStateChange={onEditorStateChange}\n              label=\"Course Overview\"\n            />\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"secondary\">\n            Cancel\n            </Button>\n          <Button onClick={handleSubmit} color=\"secondary\">\n            Submit\n            </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n\nexport default CreateCourseDialog","import React, { useState } from 'react';\nimport './CreateCourse.css';\nimport { Button } from '@material-ui/core';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport Divider from '@material-ui/core/Divider';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { withRouter } from \"react-router-dom\";\nimport * as FirebaseService from '../../service/firebase.service';\nimport CreateCourseDialog from './CreateCourseDialog/CreateCourseDialog.component';\nimport CoursesDropdownComponent from '../CoursesDropdown/CoursesDropdown.component';\nimport { useHistory } from \"react-router-dom\";\n\n\nfunction CreatedCoursesComponent(props) {\n\n  return (\n    <div className=\"courses-section\">\n      <h1> Courses You've Created </h1>\n      <CoursesDropdownComponent courses={props.createdCourses} includeEditIcon={true}></CoursesDropdownComponent>\n    </div>\n  )\n}\n\nfunction CreateCourse(props) {\n  const [isCreateCourseDialogOpen, setIsCreateCourseDialogOpen] = useState(false);\n  const history = useHistory();\n\n  props.routeClicked(\"Create Course\");\n\n\n  function handleCreateCourseDialogClose() {\n    setIsCreateCourseDialogOpen(false);\n  }\n\n  function openCreateCourseDialog() {\n    setIsCreateCourseDialogOpen(true);\n\n  }\n\n  async function handleSubmit(courseInfo) {\n    courseInfo.owner = props.user.id;\n\n    // const chapter = {\n    //   id: 0,\n    //   lessons: \"Course/rlfxOavBn4nPZLNTRMkL/Lessons/kL5CwNARpoUhexocK7P4\",\n    //   sectionTitle: `${courseInfo.title} - Section`\n    // }\n\n    courseInfo.chapters = []\n    // courseInfo.chapter = chapter;\n    // courseInfo.chapters.push(chapter);\n\n    const response = await FirebaseService.createCourse(props.user, courseInfo)\n    setIsCreateCourseDialogOpen(false);\n    await props.updateCourses();\n    await props.updateUser(props.user.id);\n    // Navigate to Edit Course page\n    history.push(`/editCourse/${props.user.createdCoursesRefs[props.user.createdCoursesRefs.length - 1].id}`)\n  }\n\n  const hasCurrentCourses = false\n  let currnetCoursesSection = null;\n  if (props.user && props.user.createdCourses && props.user.createdCourses.length > 0) {\n    currnetCoursesSection = <CreatedCoursesComponent createdCourses={props.user.createdCourses}></CreatedCoursesComponent>\n  } else {\n    currnetCoursesSection = <h3>You have not created any courses</h3>\n  }\n\n\n  return (\n    <div className=\"Home\">\n      <CssBaseline />\n      <Typography className=\"center\" variant=\"h3\" component=\"h3\">\n        Create A Course\n        </Typography>\n      <Container className=\"userProfile-bottom-padding\" maxWidth=\"lg\">\n        <Paper className=\"paper\">\n          {\n            currnetCoursesSection\n          }\n          <span>\n            <Button variant=\"contained\" color=\"secondary\" onClick={openCreateCourseDialog}>\n              Create New Course\n              </Button>\n          </span>\n        </Paper>\n      </Container>\n      <Divider />\n\n      <CreateCourseDialog\n        isOpen={isCreateCourseDialogOpen}\n        handleClose={handleCreateCourseDialogClose}\n        handleSubmit={handleSubmit}\n        user={props.user}\n      />\n\n\n    </div>\n  );\n}\n\nexport default CreateCourse;\n","import React, { useState, useEffect } from 'react';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { Button } from '@material-ui/core';\nimport './CourseChapterPanel.css';\n\nfunction CourseChapterPanel(props) {\n\n    function listItemClicked(lesson) {\n        props.setChapterInContext(props.chapter);\n        props.setActiveLesson(lesson);\n    }\n\n    let lessonItems = []\n\n    const lessonsLength = props.chapter?.lessons?.length;\n    if (lessonsLength > 0) {\n        lessonItems = props.chapter.lessons.map(lesson => {\n            const isActiveLesson = (lesson === props.activeLesson);\n\n            return (\n                <ListItem selected={isActiveLesson} onClick={() => listItemClicked(lesson)} id={lesson.id} button>\n                    <ListItemText primary={lesson.title} />\n                </ListItem>\n            )\n        });\n    } else {\n        lessonItems[0] = <ListItem> <ListItemText primary=\"No Lessons Added\" /> </ListItem>\n    }\n\n\n    function openLessonModal() {\n        props.setChapterInContext(props.chapter);\n        props.openLessonModal(/**addLesson=*/true);\n    }\n\n    let addNewLessonButton;\n\n    if (props.editable) {\n        addNewLessonButton = <Button variant=\"contained\" onClick={openLessonModal} color=\"secondary\" className=\"add-content-btn\"> Add New Lesson </Button>\n    }\n\n\n    return (\n        <ExpansionPanel\n            defaultExpanded={props.chapter === props.chapterInContext}\n        >\n            <ExpansionPanelSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"panel1a-content\"\n                id=\"panel1a-header\"\n            >\n                <Typography variant=\"subtitle2\">{props.chapter.title}</Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n\n                <List dense=\"true\" className=\"lessons-list\">\n                    {lessonItems}\n                    {addNewLessonButton}\n                </List>\n\n            </ExpansionPanelDetails>\n        </ExpansionPanel>\n    )\n}\n\nexport default CourseChapterPanel;","import React from 'react';\nimport './CourseNavigationPane.css';\nimport Paper from '@material-ui/core/Paper';\nimport { Button } from '@material-ui/core';\n\nimport CourseChapterPanel from './CourseChapterPanel/CourseChapterPanel.component';\n\n\n/**\n * Generate multiple function\n */\n\n\nfunction generate(element) {\n  return [0, 1, 2].map(value =>\n    React.cloneElement(element, {\n      key: value,\n    }),\n  );\n}\n\n\n\n\nfunction CourseNavigationPane(props) {\n\n  function setChapterInContext(chapter) {\n    props.setChapterInContext(chapter);\n  }\n\n  const courseOverviewClicked = () => {\n    props.setActiveLesson(undefined);\n    props.setChapterInContext(undefined);\n  }\n\n  let courseNavigationPanels = []\n  const chaptersLength = props.course?.chapters?.length;\n\n  if (chaptersLength > 0) {\n    courseNavigationPanels = props.course.chapters.map(chapter =>\n      <CourseChapterPanel editable={props.editable} setActiveLesson={props.setActiveLesson} activeLesson={props.activeLesson} openLessonModal={props.openLessonModal} chapterInContext={props.chapterInContext} setChapterInContext={setChapterInContext} chapter={chapter} />\n    )\n  }\n  \n  let addNewChapterButton;\n  if(props.editable){\n   addNewChapterButton = <Button variant=\"contained\" onClick={props.openCreateChapterDialog} color=\"secondary\"> Add New Chapter </Button> \n  }\n\n\n  return (\n    <Paper className=\"paper\">\n      <Button id=\"course-overview\"\n        onClick={courseOverviewClicked}>\n        <h1>{props.course.title}</h1>\n      </Button>\n      {courseNavigationPanels}\n      {addNewChapterButton}\n    </Paper>\n  )\n}\n\nexport default CourseNavigationPane;","import React, { useState } from 'react';\nimport YouTube from 'react-youtube';\nimport { Button } from '@material-ui/core';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport { Editor } from 'react-draft-wysiwyg';\nimport { EditorState, convertFromRaw, ContentState } from \"draft-js\";\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\n\n// Youtube Constants\n\nconst YoutubeComponentConfig = {\n    opts: {\n        height: '390',\n        width: '640',\n        playerVars: {\n            autoplay: 0,\n        },\n    },\n    videoId: \"BKorP55Aqvg\"\n\n}\n\n\nfunction EditCourseLesson(props) {\n\n    let hasYoutubeVideo = false;\n\n    function _onReady(event) {\n        // access to player in all event handlers via event.target\n        event.target.pauseVideo();\n    }\n\n\n    function goToPreviousLesson() {\n        props.navigateToPreviousLesson(props.lesson);\n    }\n\n    function goToNextLesson() {\n        props.navigateToNextLesson(props.lesson);\n    }\n\n    function getButtonDiv() {\n        if (props.isFirstLesson && props.isLastLesson) {\n            return '';\n        }\n\n        let leftButton, rightButton;\n\n        if (props.nextLesson || props.nextChapter) {\n            leftButton =\n                <Button variant=\"contained\" onClick={goToNextLesson} className=\"next-button\" color=\"secondary\" endIcon={<ArrowForwardIosIcon />}>\n                    {props.nextLesson ? \"Next Lesson\" : \"Next Chapter\"}\n                </Button>\n        }\n\n        if (props.prevLesson || props.prevChapter) {\n            rightButton =\n                <Button variant=\"contained\" onClick={goToPreviousLesson} className=\"previous-button\" color=\"secondary\" startIcon={<ArrowBackIosIcon />}>\n                    {props.prevLesson ? \"Previous Lesson\" : \"Previous Chapter\"}\n                </Button>\n        }\n\n        return (\n            <div className=\"button-div\">\n                {leftButton}\n                {rightButton}\n            </div>\n        )\n    }\n\n    function getVideoConfig() {\n        const youtubeConfig = { ...YoutubeComponentConfig };\n        const url = props.lesson?.video;\n        if (url && url.includes(\"youtube\") && (url.includes(\"v=\"))) {\n            const myParamters = url.split(\"?\");\n            var searchParams = new URLSearchParams(myParamters[1]);\n            youtubeConfig.videoId = searchParams.get('v');\n            hasYoutubeVideo = true;\n        }\n        return youtubeConfig;\n    }\n\n    function isJson(str) {\n        try {\n            JSON.parse(str);\n        } catch (e) {\n            return false;\n        }\n        return true;\n    }\n\n    let content = undefined;\n    if (props.lesson?.description && isJson(props.lesson.description)) {\n        const contentStateObj = JSON.parse(props.lesson.description);\n        const editorState = EditorState.createWithContent(convertFromRaw(contentStateObj));\n        content = <Editor\n            toolbarHidden\n            editorState={editorState}\n            readOnly={true}\n        />\n    }\n    else {\n        const text = props.lesson?.description ? props.lesson.description : \"No text entered.\";\n        content = <Editor\n            toolbarHidden\n            editorState={EditorState.createWithContent(ContentState.createFromText(text))}\n            readOnly={true}\n        />\n    }\n\n    if (props.lesson) {\n        const youtubeConfig = getVideoConfig();\n\n        return (\n            <div>\n                <h3>{props.lesson.title}</h3>\n                <h6>Link: {props.lesson.video}</h6>\n                <strong>Description: </strong>\n                {/* <p>{props.lesson.description}</p> */}\n                {content}\n                {\n                    hasYoutubeVideo\n                        ?\n                        <YouTube videoId={youtubeConfig.videoId} opts={youtubeConfig.opts} onReady={_onReady} />\n                        :\n                        \"\"\n                }\n\n                {getButtonDiv()}\n            </div>\n        )\n    } else {\n        return (\n            <div>\n                <h5> No Lesson Details </h5>\n            </div>\n        )\n    }\n}\n\nexport default EditCourseLesson;","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport CourseLesson from './CourseLesson/CourseLesson.component';\nimport { Button } from '@material-ui/core';\nimport { Editor } from 'react-draft-wysiwyg';\nimport { EditorState, convertFromRaw, ContentState } from \"draft-js\";\n\nimport './CourseOverviewPane.css';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\n\nfunction CourseOverviewPane(props) {\n\n    let lessonArray = [];\n    for (let i = 0; i < props.course.chapters.length; i++) {\n        for (let j = 0; j < props.course.chapters[i].lessons?.length; j++) {\n            lessonArray.push(props.course.chapters[i].lessons[j]);\n        }\n    }\n\n    function navigateToNextLesson(lesson) {\n        const indexOfCurrentLesson = props.activeChapter.lessons.indexOf(lesson);\n        if (indexOfCurrentLesson !== props.activeChapter.lessons.length - 1) {\n            props.setActiveLesson(props.activeChapter.lessons[indexOfCurrentLesson + 1]);\n            return;\n        } else {\n            const activeChapterIndex = props.course.chapters.indexOf(props.activeChapter);\n            const nextChapter = props.course.chapters[activeChapterIndex + 1];\n            props.setChapterInContext(nextChapter);\n            props.setActiveLesson(nextChapter.lessons[0]);\n        }\n    }\n\n    function navigateToPreviousLesson(lesson) {\n        const indexOfCurrentLesson = props.activeChapter.lessons.indexOf(lesson);\n\n        if (indexOfCurrentLesson !== 0) {\n            props.setActiveLesson(props.activeChapter.lessons[indexOfCurrentLesson - 1]);\n            return;\n        } else {\n            const activeChapterIndex = props.course.chapters.indexOf(props.activeChapter);\n            const prevChapter = props.course.chapters[activeChapterIndex - 1];\n            props.setChapterInContext(prevChapter);\n            props.setActiveLesson(prevChapter.lessons[prevChapter.lessons.length - 1]);\n        }\n\n    }\n\n    function openLessonModal() {\n        props.openLessonModal(/**addLesson=*/false);\n    }\n\n\n    let openEditCourseOverviewDialogButton;\n    let addNewLessonButton;\n    if (props.editable) {\n        openEditCourseOverviewDialogButton = <Button onClick={props.openEditCourseOverviewDialog} color=\"secondary\" variant=\"contained\"> Edit Course Information </Button>\n        addNewLessonButton = <Button variant=\"contained\" onClick={openLessonModal} color=\"secondary\" className=\"add-content-btn\"> Edit Lesson </Button>\n    }\n\n    let content = undefined;\n    if (props.course.overview) {\n        const contentStateObj = JSON.parse(props.course.overview);\n        const editorState = EditorState.createWithContent(convertFromRaw(contentStateObj));\n        content = <Editor\n            toolbarHidden\n            editorState={editorState}\n            readOnly={true}\n        />\n    }\n    else {\n        content = <Editor\n            toolbarHidden\n            editorState={EditorState.createWithContent(ContentState.createFromText(\"No text entered.\"))}\n            readOnly={true}\n        />\n    }\n\n    function getLessonInformation() {\n        let prevLesson, nextLesson, prevChapter, nextChapter = false;\n\n        if (props.activeLesson) {\n            const currentLessonIndex = lessonArray.indexOf(props.activeLesson);\n            const currentLessonIndexInChapter = props.activeChapter.lessons.indexOf(props.activeLesson);\n            const numLessonsInChapter = props.activeChapter.lessons.length;\n            const numChapters = props.course.chapters.length;\n            const activeChapterIndex = props.course.chapters.indexOf(props.activeChapter);\n\n            prevLesson = currentLessonIndexInChapter > 0;\n            nextLesson = currentLessonIndexInChapter < numLessonsInChapter - 1;\n            prevChapter = currentLessonIndexInChapter === 0 && currentLessonIndex > 0\n            nextChapter = currentLessonIndexInChapter === numLessonsInChapter - 1\n                && currentLessonIndex < lessonArray.length - 1\n                && activeChapterIndex !== numChapters - 1;\n        }\n\n        return [prevLesson, nextLesson, prevChapter, nextChapter]\n    }\n\n\n    let prevLesson, nextLesson, prevChapter, nextChapter = false;\n    if (props.activeLesson) {\n        [prevLesson, nextLesson, prevChapter, nextChapter] = getLessonInformation();\n    }\n\n    return (\n        <Paper className=\"paper\">\n            {props.activeChapter ?\n                <div>\n                    <h2>Chapter: {props.activeChapter.title}</h2>\n                    <CourseLesson\n                        navigateToNextLesson={navigateToNextLesson}\n                        navigateToPreviousLesson={navigateToPreviousLesson}\n                        prevLesson={prevLesson}\n                        nextLesson={nextLesson}\n                        prevChapter={prevChapter}\n                        nextChapter={nextChapter}\n                        lesson={props.activeLesson}\n                    />\n                    {addNewLessonButton}\n                </div> :\n                <div>\n                    {content}\n                    {openEditCourseOverviewDialogButton}\n                </div>\n            }\n        </Paper>\n    )\n}\n\nexport default CourseOverviewPane;","import React, { useState } from 'react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Button } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\n\nfunction CreateChapterDialog(props) {\n  const [description, setDescription] = useState();\n  const [title, setTitle] = useState();\n\n  function onCourseTitleChange(e) {\n    setTitle(e.target.value);\n  }\n\n  function onCourseDescriptionChange(e) {\n    setDescription(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    const chapterInfo = {\n      title,\n      description,\n    }\n\n    props.handleSubmit(chapterInfo);\n  }\n\n\n  return (\n    <div>\n      <Dialog open={props.isOpen} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Create New Chapter</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Create a new chapter within your course. Enter a title and description below.\n            </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"title\"\n            label=\"Chapter Title\"\n            onChange={onCourseTitleChange}\n            type=\"text\"\n            color=\"secondary\"\n            fullWidth\n          />\n          <TextField\n            margin=\"dense\"\n            id=\"description\"\n            label=\"Chapter Description\"\n            onChange={onCourseDescriptionChange}\n            type=\"text\"\n            color=\"secondary\"\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.handleClose} color=\"secondary\">\n            Cancel\n            </Button>\n          <Button onClick={handleSubmit} color=\"secondary\">\n            Submit\n            </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n\nexport default CreateChapterDialog","import React, { useState, useEffect } from 'react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Button } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport { Editor } from 'react-draft-wysiwyg';\nimport { EditorState, convertFromRaw, ContentState, convertToRaw, RichUtils } from \"draft-js\";\n\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\n\nfunction CreateLessonDialog(props) {\n  const [description, setDescription] = useState();\n  const [title, setTitle] = useState();\n  const [video, setVideo] = useState();\n  const [isDescriptionError, setIsDescriptionError] = useState(false);\n  const [isTitleError, setIsTitleError] = useState(false);\n  const [isYoutubeError, setIsYoutubeError] = useState(false);\n  const [editorState, setEditorState] = useState();\n\n  function onEditorStateChange(editorState) {\n    setEditorState(editorState);\n    const currentContentState = editorState.getCurrentContent();\n    setDescription(JSON.stringify(convertToRaw(currentContentState)));\n  };\n\n  function handleKeyCommand(command) {\n    const newState = RichUtils.handleKeyCommand(editorState, command);\n    if (newState) {\n      setEditorState(newState);\n      return 'handled';\n    }\n    return 'not-handled';\n  };\n\n  function onCourseTitleChange(e) {\n    setTitle(e.target.value);\n  }\n\n  function onVideoUrlChange(e) {\n    setVideo(e.target.value);\n  }\n\n  function isValidTitle() {\n    if (title && title.length > 0) {\n      setIsTitleError(false)\n      return true;\n    } else {\n      setIsTitleError(true);\n      return false;\n    }\n\n  }\n\n  function isValidDescription() {\n    if (description && (isJson(description) || description.length > 0)) {\n      setIsDescriptionError(false)\n      return true;\n    } else {\n      setIsDescriptionError(true);\n      return false;\n    }\n  }\n\n  function isValidYoutubeURL() {\n    if (video === undefined || video.length === 0) {\n      setIsYoutubeError(false);\n      return true;\n    } else if (video && video.includes(\"youtube\") && (video.includes(\"v=\"))) {\n      setIsYoutubeError(false);\n      return true;\n    } else {\n      setIsYoutubeError(true);\n      return false;\n    }\n  }\n\n  function handleSubmit(e) {\n    const id = props.lesson?.id ? props.lesson.id : undefined;\n\n    const currentContentState = editorState.getCurrentContent();\n    const descriptionJSON = JSON.stringify(convertToRaw(currentContentState));\n    setDescription(descriptionJSON);\n\n    const tempVideo = \"\";\n    if (isValidTitle() && isValidDescription() && isValidYoutubeURL()) {\n      if (video === undefined || video.length === 0) {\n        setVideo(\"\"); // So firebase won't die with undefined.\n      } else {\n        tempVideo = video;\n      }\n      const lessonInfo = {\n        id,\n        title,\n        description: descriptionJSON,\n        video: tempVideo,\n      }\n      props.updateLesson(lessonInfo, props.add);\n    }\n  }\n\n  function handleClose() {\n    // Reset State\n    setTitle();\n    setVideo();\n    setDescription();\n    setIsTitleError(false);\n    setIsDescriptionError(false);\n    setIsYoutubeError(false);\n    setEditorState(EditorState.createEmpty());\n    props.handleClose();\n  }\n\n  function isJson(str) {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n\n  useEffect(() => {\n    if (!props.add && props.lesson) {\n      setTitle(props.lesson.title);\n      setDescription(props.lesson.description);\n      setVideo(props.lesson.video);\n      if (props.lesson.description) {\n        if (isJson(props.lesson.description)) {\n          setEditorState(EditorState.createWithContent(convertFromRaw(JSON.parse(props.lesson.description))));\n        } else {\n          // For backwards compatibility\n          setEditorState(EditorState.createWithContent(ContentState.createFromText(props.lesson.description)));\n        }\n      }\n      else {\n        setEditorState(EditorState.createEmpty());\n      }\n    } else {\n      setTitle()\n      setDescription()\n      setVideo()\n      setEditorState(EditorState.createEmpty());\n    }\n\n  }, [props]);\n\n  return (\n    <div>\n      <Dialog open={props.isOpen} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">{props.add ? \"Create New\" : \"Edit\"} Lesson</DialogTitle>\n        <DialogContent>\n          {props.add ?\n            <DialogContentText>\n              Add a new lesson to your course\n            </DialogContentText>\n            :\n            <DialogContentText>\n              Edit existing lesson\n            </DialogContentText>\n          }\n\n          <TextField\n            autoFocus\n            required\n            margin=\"dense\"\n            error={isTitleError}\n            id=\"title\"\n            label=\"Lesson Title\"\n            onChange={onCourseTitleChange}\n            type=\"text\"\n            color=\"secondary\"\n            value={title}\n            helperText={isTitleError ? \"Title is a required field\" : \"\"}\n            fullWidth\n          />\n          <TextField\n            margin=\"dense\"\n            error={isYoutubeError}\n            id=\"video\"\n            label=\"Video URL (optional)\"\n            onChange={onVideoUrlChange}\n            type=\"text\"\n            color=\"secondary\"\n            value={video}\n            helperText={isYoutubeError ? \"Youtube URL is malformed. It must have the form: https://www.youtube.com?v=<SomeCharacterString>\" : \"\"}\n\n            fullWidth\n          />\n          <Editor\n            editorState={editorState}\n            editorClassName=\"editor-textbox\"\n            handleKeyCommand={handleKeyCommand}\n            onEditorStateChange={onEditorStateChange}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.handleClose} color=\"secondary\">\n            Cancel\n            </Button>\n          <Button onClick={handleSubmit} color=\"secondary\">\n            Submit\n            </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n\nexport default CreateLessonDialog","import React, { useEffect, useState } from 'react';\nimport './CourseOverview.css';\nimport {\n    Link as RouterLink,\n    useParams\n} from \"react-router-dom\";\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { withRouter } from \"react-router-dom\";\nimport { Button } from '@material-ui/core';\nimport * as FirebaseService from '../../service/firebase.service';\nimport CourseNavigationPane from './CourseNavigationPane/CourseNavigationPane.component';\n\nimport CourseOverviewPane from './CourseOverviewPane/CourseOverviewPane.component';\nimport CreateChapterDialog from './Dialogs/CreateChapterDialog/CreateChapterDialog.component';\nimport CreateLessonDialog from './Dialogs/CreateLessonDialog/CreateLessonDialog.component';\nimport EditCourseOverviewDialog from './Dialogs/EditCourseOverviewDialog/EditCourseOverviewDialog.component';\nimport CreateCourseDialog from '../CreateCourse/CreateCourseDialog/CreateCourseDialog.component';\n\nfunction CourseOverview(props) {\n    // Get ID from Route Params\n    let { id } = useParams();\n    // Create State Variables\n    const [course, setCourse] = useState();\n    const [error, setError] = useState();\n    const [isCreateChapterDialogOpen, setIsCreateChapterDialogOpen] = useState(false);\n    const [isCreateLessonDialogOpen, setIsCreateLessonDialogOpen] = useState(false);\n    const [isEditCourseOverviewDialogOpen, setIsEditCourseOverviewDialogOpen] = useState(false);\n    const [chapterInContext, setChapterInContext] = useState();\n    const [activeLesson, setActiveLesson] = useState();\n    const [addLesson, setAddLesson] = useState();\n\n    props.routeClicked(\"Course Overview\");\n\n\n\n    function handleCreateChapterClose() {\n        setIsCreateChapterDialogOpen(false);\n    }\n\n    function openCreateChapterDialog() {\n        setIsCreateChapterDialogOpen(true);\n    }\n\n    function handleCreateLessonDialogClose() {\n        setIsCreateLessonDialogOpen(false);\n    }\n\n    function openCreateLessonDialog(addLesson) {\n        setAddLesson(addLesson);\n        setIsCreateLessonDialogOpen(true);\n    }\n\n    function handleEditCourseOverviewDialogClose() {\n        setIsEditCourseOverviewDialogOpen(false);\n    }\n\n    function openEditCourseOverviewDialog() {\n        setIsEditCourseOverviewDialogOpen(true);\n    }\n\n    function viewPublished() {\n        props.history.push(`/courseOverview/${course.id}`);\n    }\n\n\n    async function updateLesson(lessonInfo, add) {\n        setAddLesson(add);\n        setIsCreateLessonDialogOpen(false);\n        await FirebaseService.updateLesson(course, chapterInContext, lessonInfo, add).then(async () => {\n            getCourseById(id);\n            // TODO (jessi): make this go to the new lesson when adding.\n        }).catch((err) => { console.log(err) });\n    }\n\n    async function updateCourse(courseInfo) {\n        setIsEditCourseOverviewDialogOpen(false);\n        await FirebaseService.updateCourse(course.id, courseInfo);\n        getCourseById(id);\n    }\n\n    async function addNewChapter(chapterInfo) {\n        await FirebaseService.addNewChapter(course, chapterInfo);\n        getCourseById(id);\n        setIsCreateChapterDialogOpen(false);\n    }\n\n\n    async function resolveLessons(chapter) {\n        const lessonsRefLength = chapter.lessonsRef?.length;\n        if (lessonsRefLength > 0) {\n            return Promise.all(\n                chapter.lessonsRef.map(async lessonRef => {\n                    const lesson = await FirebaseService.getDocFromDocRef(lessonRef)\n                    return lesson;\n                })\n            ).then(results => {\n                chapter.lessons = results;\n                return chapter;\n            });\n\n        } else {\n            return Promise.resolve(chapter);\n        }\n    }\n\n    async function resolveChapters(chapters) {\n        return Promise.all(chapters.map(chapter => resolveLessons(chapter)))\n    }\n\n    async function getCourseById(id) {\n        const course = await FirebaseService.getCourseById(id);\n        course.chapters = await resolveChapters(course.chapters);\n        setCourse(course);\n    }\n\n    useEffect(() => {\n        if (id) {\n            getCourseById(id);\n        }\n    }, [id]);\n\n    useEffect(() => {\n        // after adding/editing a lesson, ensure we navigate to the freshest version\n        if (course && chapterInContext) {\n            if (!addLesson) {\n                const updatedLesson = course.chapters[chapterInContext.id].lessons.find(lesson => {\n                    if (lesson.id === activeLesson.id) {\n                        return lesson;\n                    }\n                });\n                if (updatedLesson) {\n                    setActiveLesson(updatedLesson);\n                }\n            } else {\n                const lessons = course.chapters[chapterInContext.id].lessons;\n                setActiveLesson(lessons[lessons.length - 1]);\n            }\n        }\n    }, [course]);\n\n    let dialogs;\n    let viewPublishedCourseButton;\n    if (props.editable) {\n        dialogs = <div>\n            <CreateChapterDialog isOpen={isCreateChapterDialogOpen} handleSubmit={addNewChapter} handleClose={handleCreateChapterClose} />\n            <CreateLessonDialog isOpen={isCreateLessonDialogOpen} add={addLesson} lesson={activeLesson} updateLesson={updateLesson} handleClose={handleCreateLessonDialogClose} />\n\n            <CreateCourseDialog\n                isOpen={isEditCourseOverviewDialogOpen}\n                handleClose={handleEditCourseOverviewDialogClose}\n                course={course}\n                handleSubmit={updateCourse}\n            />\n        </div>\n\n        viewPublishedCourseButton = <Button variant=\"contained\" color=\"secondary\" onClick={viewPublished}> View Published Course </Button>\n    }\n\n\n\n    if (course) {\n        return (\n            <div className=\"edit-course\">\n                <Grid container spacing={3}>\n                    <Grid item xs={4}>\n                        <CourseNavigationPane editable={props.editable} activeLesson={activeLesson} setActiveLesson={setActiveLesson} openLessonModal={openCreateLessonDialog} chapterInContext={chapterInContext} setChapterInContext={setChapterInContext} course={course} openCreateChapterDialog={openCreateChapterDialog} />\n                    </Grid>\n                    <Grid item xs={8}>\n                        <CourseOverviewPane setActiveLesson={setActiveLesson} setChapterInContext={setChapterInContext} editable={props.editable} activeChapter={chapterInContext} activeLesson={activeLesson} course={course} openEditCourseOverviewDialog={openEditCourseOverviewDialog} openLessonModal={openCreateLessonDialog} />\n                    </Grid>\n                    {viewPublishedCourseButton}\n                </Grid>\n                {dialogs}\n            </div>\n        );\n    } else {\n        return (\n            <div>\n                Loading...\n                <CircularProgress></CircularProgress>\n            </div>\n        )\n    }\n\n\n}\n\nexport default withRouter(CourseOverview);","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { AppBar, Toolbar, IconButton, Typography, Button, } from '@material-ui/core';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link as RouterLink,\n  Redirect,\n  withRouter,\n  browserHistory\n} from \"react-router-dom\";\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport CourseLibrary from './components/CourseLibrary/CourseLibrary';\nimport Login from './components/Login/Login';\nimport MyCourses from './components/MyCourses/MyCourses';\nimport UserProfile from './components/UserProfile/UserProfile';\nimport CreateCourse from './components/CreateCourse/CreateCourse.component';\nimport CourseOverview from './components/CourseOverview/CourseOverview.component';\nimport { MuiThemeProvider, ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nimport * as FirebaseService from '../src/service/firebase.service'\n\nconst buttonTheme = createMuiTheme({\n  palette: {\n    primary: { // peaches\n      main: '#87618c',\n    },\n    secondary: {  // purples\n      main: '#442b4a',\n    },\n  },\n  typography: {\n    useNextVariants: true\n  },\n  overrides: {\n    MuiButton: {\n      root: {\n        textTransform: 'none',\n      },\n    },\n  },\n});\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: { // peaches\n      light: '#f44336',\n      main: '#f6eee7',\n      dark: '#dbbca1',\n    },\n    secondary: {  // purples\n      light: '#a17da5',\n      main: '#87618c',\n      dark: '#442b4a',\n    },\n  },\n  typography: {\n    useNextVariants: true\n  },\n  overrides: {\n    MuiButton: {\n      root: {\n        textTransform: 'none',\n      },\n    },\n  },\n})\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      courses: [],\n      users: [],\n      currentUser: undefined,\n      loadingUser: true,\n      myCourseSelected: false,\n      allCoursesSelected: false\n    };\n    this.fetchCourses = this.fetchCourses.bind(this);\n    this.fetchUsers = this.fetchUsers.bind(this);\n    this.render = this.render.bind(this);\n    this.updateUser = this.updateUser.bind(this);\n    this.setUser = this.setUser.bind(this);\n    this.getUserOnLoad = this.getUserOnLoad.bind(this);\n    this.routeClicked = this.routeClicked.bind(this);\n    this.fetchCourses().then(() => {\n      this.getUserOnLoad();\n    });\n  }\n\n  async updateUser(userId){\n    if (!userId) {\n      this.setState({ currentUser: undefined });\n      this.setState({ loadingUser: false });\n      return;\n    }\n    await FirebaseService.getUserById(userId)\n      .then(result => {\n        const user = result.data();\n\n        if (user.createdCoursesRefs && user.createdCoursesRefs.length > 0) {\n\n          const newCourses = user.createdCoursesRefs\n            .map(courseRef => this.state.courses.find(course => course.id === courseRef.id));\n\n          user.createdCourses = user.createdCoursesRefs\n            .map(courseRef => this.state.courses.find(course => course.id === courseRef.id));\n        }\n\n        if (user.pastCoursesRefs && user.pastCoursesRefs.length > 0) {\n          user.pastCourses = user.pastCoursesRefs\n            .map(courseRef => this.state.courses.find(course => course.id === courseRef.id));\n        }\n\n        if (user.favoritedCoursesRefs && user.favoritedCoursesRefs.length > 0) {\n          user.favoritedCourses = user.favoritedCoursesRefs\n            .map(courseRef => this.state.courses.find(course => course.id === courseRef.id));\n        }\n\n        this.setState({ currentUser: user });\n        this.setState({ loadingUser: false });\n\n      })\n  }\n\n  getUserOnLoad() {\n    let user = FirebaseService.getCurrentUser();\n    if (user) {\n      this.updateUser(user.uid);\n    } else if (document.cookie.split(';').some((item) => item.trim().startsWith('userid='))) {\n      var cookieValue = document.cookie.replace(/(?:(?:^|.*;\\s*)userid\\s*\\=\\s*([^;]*).*$)|^.*$/, \"$1\");\n      this.updateUser(cookieValue);\n    } else {\n      this.updateUser(undefined);\n    }\n  }\n\n  setUser(user) {\n    this.updateUser(user.id);\n    document.cookie = `userid=${user.id}`;\n  }\n\n  async fetchCourses() {\n    let courses = [];\n    await FirebaseService.getAllCourses().then((queryResults) => {\n      queryResults.forEach((doc) => {\n        const course = doc.data();\n        const courseId = doc.id;\n        course.owner.get().then(user => {\n          course.owner = user.data();\n        })\n        // course.chapter.lessons.get().then(lesson => {\n        //   course.chapter.lessons = lesson.data();\n        // })\n        course.id = courseId\n        courses.push(course);\n        this.setState({ courses: courses });\n      });\n    });\n  }\n\n  async fetchUsers() {\n    let users = [];\n    await FirebaseService.getAllUsers()\n      .then((queryResults) => {\n        queryResults.forEach((doc) => {\n          const user = doc.data();\n          user.id = doc.id;\n          users.push(user);\n          this.setState({\n            users\n          })\n        })\n      })\n  }\n\n  routeClicked(location){\n    console.log(\"New Location: \", location);\n    if (location === \"Course Library\" && !this.state.allCoursesSelected){\n      this.setState({\n        allCoursesSelected: true,\n        myCourseSelected: false\n      })\n    } else if (location === \"My Courses\" && !this.state.myCourseSelected){\n      this.setState({\n        allCoursesSelected: false,\n        myCourseSelected: true\n      })\n    } else if ( (location !== \"Course Library\" && location !== \"My Courses\") && (this.state.allCoursesSelected || this.state.myCourseSelected)){\n      this.setState({\n        allCoursesSelected: false,\n        myCourseSelected: false\n      })\n    }\n  }\n\n  render() {\n\n    // If not logged in redirect to the login page with redirect info. Url will\n    // briefly flash to login while we figure out if we have a user.\n    const PrivateRoute = ({ isLoggedIn, ...props }) =>\n      this.state.currentUser\n        ? <Route {...props} />\n        : <Redirect to={{\n          pathname: '/login',\n          state: { from: props.location }\n        }} />\n\n    return (\n      <MuiThemeProvider theme={theme}>\n        <Router onChange={this.browserRouteChanged}>\n          <div>\n            <nav hidden={!this.state.currentUser}>\n              <AppBar position=\"static\">\n                <Toolbar>\n                  <MuiThemeProvider theme={buttonTheme}>\n                    <Button variant=\"contained\" color={ this.state.allCoursesSelected ? \"secondary\" : \"primary\"} className=\"menu-button main\" component={RouterLink} to=\"/courseLibrary\">All Courses</Button>\n                    <Button variant=\"contained\" color={ this.state.myCourseSelected ? \"secondary\" : \"primary\"} className=\"menu-button main\" component={RouterLink} to=\"/myCourses\">My Courses</Button>\n                  </MuiThemeProvider>\n                    <Button variant=\"outlined\" color=\"secondary\" className=\"menu-button align-left\" component={RouterLink} to=\"/createCourse\">Create a Course</Button>\n                  <IconButton className=\"menu-button profile-icon\" component={RouterLink} to=\"/profile\" color=\"inherit\" aria-label=\"menu\">\n                    <AccountCircleIcon />\n                  </IconButton>\n                </Toolbar>\n              </AppBar>\n            </nav>\n\n            {/* A <Switch> looks through its children <Route>s and\n                renders the first one that matches the current URL. */}\n            <Switch>\n              <Route exact path=\"/login\">\n                <Login routeClicked={this.routeClicked} completeLogin={this.setUser} user={this.state.currentUser} loadingUser={this.state.loadingUser} />\n              </Route>\n              <PrivateRoute path=\"/(courseLibrary|)\">\n                <CourseLibrary routeClicked={this.routeClicked} courses={this.state.courses} user={this.state.currentUser} updateUser={this.updateUser} />\n              </PrivateRoute>\n              <PrivateRoute path=\"/courseOverview/:id\">\n                <CourseOverview routeClicked={this.routeClicked}  editable={false} user={this.state.currentUser}></CourseOverview>\n              </PrivateRoute>\n              <PrivateRoute path=\"/myCourses\">\n                <MyCourses routeClicked={this.routeClicked} user={this.state.currentUser}></MyCourses>\n              </PrivateRoute>\n              <PrivateRoute path=\"/profile\">\n                <UserProfile routeClicked={this.routeClicked} user={this.state.currentUser} updateUser={this.updateUser}></UserProfile>\n              </PrivateRoute>\n              <PrivateRoute path=\"/createCourse\">\n                <CreateCourse routeClicked={this.routeClicked} user={this.state.currentUser} updateUser={this.updateUser} updateCourses={this.fetchCourses}></CreateCourse>\n              </PrivateRoute>\n              <PrivateRoute path=\"/editCourse/:id\">\n                <CourseOverview routeClicked={this.routeClicked} editable={true} user={this.state.currentUser}></CourseOverview>\n              </PrivateRoute>\n            </Switch>\n          </div>\n        </Router>\n      </MuiThemeProvider>\n    )\n  }\n};\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}