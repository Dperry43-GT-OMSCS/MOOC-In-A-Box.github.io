{"version":3,"sources":["components/CourseCard/CourseCard.js","components/CourseLibrary/CourseLibraryToolbar/SearchBar/SearchBar.component.js","components/CourseLibrary/CourseLibraryToolbar/CourseLibraryToolbarMenu/CourseLibraryToolbarMenuItem/CourseLibraryToolbarMenuItem.component.js","components/CourseLibrary/CourseLibraryToolbar/CourseLibraryToolbarMenu/CourseLibraryToolbarMenu.component.js","components/CourseLibrary/CourseLibraryToolbar/CourseLibraryToolbar.component.js","service/firebase.service.js","components/CourseLibrary/CourseLibrary.js","components/Login/Login.js","components/CoursesDropdown/CoursesDropdown.component.js","components/MyCourses/MyCourses.js","components/UserProfile/EditDialog/EditDialog.component.js","components/UserProfile/UserProfileSection/UserProfileSection.component.js","components/UserProfile/UserProfile.js","components/CreateCourse/CreateCourseDialog/CreateCourseDialog.component.js","components/CreateCourse/CreateCourse.component.js","components/CourseOverview/CourseNavigationPane/CourseChapterPanel/CourseChapterPanel.component.js","components/CourseOverview/CourseNavigationPane/CourseNavigationPane.component.js","components/CourseOverview/CourseOverviewPane/CourseLesson/CourseLesson.component.js","components/CourseOverview/CourseOverviewPane/CourseOverviewPane.component.js","components/CourseOverview/Dialogs/CreateChapterDialog/CreateChapterDialog.component.js","components/CourseOverview/Dialogs/CreateLessonDialog/CreateLessonDialog.component.js","components/CourseOverview/Dialogs/EditCourseOverviewDialog/EditCourseOverviewDialog.component.js","components/CourseOverview/CourseOverview.component.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","maxWidth","minWidth","maxHeight","minHeight","position","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","actionsRow","bottom","left","content","paddingBottom","CourseCard","props","classes","React","useState","isFavorited","setIsFavorited","isCourseAFavorite","Card","variant","className","CardHeader","title","course","subheader","owner","displayName","action","IconButton","aria-label","onClick","removeFavoriteClicked","favoriteClicked","CardMedia","image","CardContent","Typography","color","component","description","CardActions","disableSpacing","Button","Link","to","id","SearchBar","TextField","value","searchValue","onChange","type","onSearchClicked","CourseLibraryToolbarMenuItem","FormControlLabel","control","Radio","label","CourseLibraryToolbarMenu","menuItems","options","map","option","handleClick","associatedClickFunction","display","Menu","menuId","anchorEl","element","keepMounted","open","Boolean","onClose","closeFunction","MenuItem","FormControl","FormLabel","menuLabel","RadioGroup","name","radioGroupName","menuValue","event","target","CourseLibraryToolbar","menuButtons","menuItem","clickedFunction","buttonText","menus","menuOptions","AppBar","Toolbar","searchInfo","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","getUserById","userId","collection","doc","get","getAllUsers","updateUser","updates","a","set","merge","createUser","userAuth","uid","photoURL","email","getCurrentUser","user","auth","currentUser","deleteUser","delete","then","document","cookie","catch","error","console","log","getCourseById","courseId","courseResult","exists","data","createCourse","courseInfo","userDocRef","lessonRef","chapter","lessons","add","chapters","courseDoc","usersCreatedCourses","createdCoursesRefs","length","courseRef","push","updateObject","favoriteCourse","favoritedCourses","favoritedCoursesRefs","removeFavoriteCourse","filter","item","updateCourse","updateCourseOverview","contentJSON","JSON","stringify","overview","addNewChapter","newChapterInfo","lessonsRef","updateLesson","chapterInfo","lessonInfo","lessonDoc","logUserInUser","isGoog","provider","GoogleAuthProvider","FacebookAuthProvider","users","undefined","authUser","queryResults","forEach","signInWithPopup","result","u","signOut","getDocFromDocRef","docRef","myResult","CourseLibrary","sortByClicked","setState","sortByElement","currentTarget","sortByHandleClose","sortFilterValue","topicClicked","topicElement","topicHandleClose","topicFilterValue","organizationClicked","organizationElement","organizationHandleClosed","organizationFilterValue","buildMenuItems","state","find","favoritedCourse","handleSearchChange","bind","handleSearchClicked","activeCourses","courses","e","searchValueLowerCase","toLowerCase","this","includes","FirebaseService","listItems","Grid","s","class","container","spacing","Component","LoginPage","redirectToReferrer","loginGoogle","loginFacebook","completeLogin","history","loadingUser","CircularProgress","from","location","pathname","withRouter","CoursesDropdownComponent","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","xs","md","List","dense","ListItem","RouterLink","includeEditIcon","CurrentCoursesComponent","currentCourses","PastCoursesComponent","pastCourses","SavedCoursesComponent","savedCourses","CreatedCoursesComponent","createdCourses","MyCourses","setUser","useEffect","courseComponentList","hasCourses","pastCourse","CssBaseline","Container","Paper","EditDialog","Dialog","isOpen","handleClose","aria-labelledby","DialogTitle","field","DialogContent","DialogContentText","autoFocus","margin","fullWidth","DialogActions","handleSubmit","userKeyToDisplayMap","UserProfileSection","align","displayValue","isEditable","openDialog","isDialogOpen","displayKey","setDisplayName","oldDisplayName","setOldDiplayName","isDisplayNameDialogOpen","setIsDisplayNameDialogOpen","userInterests","setUserInterests","oldUserInterests","setOldUserInterests","isUserInterestsDialogOpen","setIsUserInterestsDialogOpen","res","interests","err","Divider","CreateCourseDialog","setDescription","setTitle","courseDetails","CreateCourse","isCreateCourseDialogOpen","setIsCreateCourseDialogOpen","useHistory","sectionTitle","updateCourses","currnetCoursesSection","CourseChapterPanel","addNewLessonButton","lessonItems","lesson","isActiveLesson","activeLesson","selected","setChapterInContext","setActiveLesson","listItemClicked","button","ListItemText","primary","editable","openLessonModal","defaultExpanded","chapterInContext","CourseNavigationPane","addNewChapterButton","courseNavigationPanels","openCreateChapterDialog","YoutubeComponentConfig","opts","width","playerVars","autoplay","videoId","EditCourseLesson","goToPreviousLesson","navigateToPreviousLesson","goToNextLesson","navigateToNextLesson","youtubeConfig","url","video","myParamters","split","searchParams","URLSearchParams","getVideoConfig","onReady","pauseVideo","isFirstLesson","isLastLesson","nextLesson","nextChapter","leftButton","endIcon","prevLesson","prevChapter","rightButton","startIcon","getButtonDiv","CourseOverviewPane","openEditCourseOverviewDialogButton","lessonArray","i","j","openEditCourseOverviewDialog","contentStateObj","parse","editorState","EditorState","createWithContent","convertFromRaw","toolbarHidden","readOnly","ContentState","createFromText","currentLessonIndex","indexOf","currentLessonIndexInChapter","activeChapter","numLessonsInChapter","numChapters","activeChapterIndex","getLessonInformation","indexOfCurrentLesson","CreateChapterDialog","CreateLessonDialog","setVideo","isDescriptionError","setIsDescriptionError","isTitleError","setIsTitleError","isYoutubeError","setIsYoutubeError","required","helperText","EditCourseOverviewDialog","contentState","setContentState","setEditorState","createEmpty","editorClassName","handleKeyCommand","command","newState","RichUtils","onEditorStateChange","currentContentState","getCurrentContent","convertToRaw","dialogs","viewPublishedCourseButton","useParams","setCourse","isCreateChapterDialogOpen","setIsCreateChapterDialogOpen","isCreateLessonDialogOpen","setIsCreateLessonDialogOpen","isEditCourseOverviewDialogOpen","setIsEditCourseOverviewDialogOpen","addLesson","setAddLesson","openCreateLessonDialog","resolveLessons","Promise","all","results","resolve","resolveChapters","createMuiTheme","palette","light","main","dark","secondary","typography","useNextVariants","overrides","MuiButton","textTransform","App","fetchCourses","fetchUsers","render","getUserOnLoad","pastCoursesRefs","some","trim","startsWith","cookieValue","replace","PrivateRoute","isLoggedIn","hidden","exact","path","window","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.388e37e3.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { Button } from '@material-ui/core';\nimport {Link} from 'react-router-dom'\nimport FavoriteBorderOutlinedIcon from '@material-ui/icons/FavoriteBorderOutlined';\n\n\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: 345,\n    minWidth: 345,\n    maxHeight: 400,\n    minHeight: 400,\n    position: 'relative',\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n  actionsRow: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0\n  }, \n  content: {\n    paddingBottom: '1rem'\n  }\n}));\n\nexport default function CourseCard(props) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n  const [isFavorited, setIsFavorited] = React.useState(false)\n\n\n  if ( props.isCourseAFavorite != isFavorited){\n    setIsFavorited(props.isCourseAFavorite);\n  }\n\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  const favoriteButtonClicked = () => {\n    if (isFavorited) {\n      setIsFavorited(false);\n      props.removeFavoriteClicked(props.course);\n    } else {\n      setIsFavorited(true);\n      props.favoriteClicked(props.course);\n    }\n   \n  }\n\n  return (\n    <Card variant=\"outlined\" className={classes.root}>\n      <CardHeader\n        title={props.course.title}\n        subheader={props.course.owner.displayName}\n        action={\n          <IconButton aria-label=\"add to favorites\" onClick={favoriteButtonClicked}>\n           { isFavorited ? <FavoriteIcon /> : <FavoriteBorderOutlinedIcon />  } \n          </IconButton>\n        }\n      />\n      <CardMedia\n        className={classes.media}\n        image=\"/static/images/cards/paella.jpg\"\n        title=\"Paella dish\"\n      />\n      <CardContent className={classes.content}>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {props.course.description}\n        </Typography> \n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {props.course.owner.displayName}\n        </Typography>\n      </CardContent>\n      <CardActions className={classes.actionsRow} disableSpacing>\n        <Button \n          variant=\"contained\" \n          color=\"secondary\"\n          component={Link}\n          to={`/courseOverview/${props.course.id}`}\n          >\n            Overview\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}","import React from 'react';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport { IconButton } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\n\nimport './SearchBar.css';\n\nfunction SearchBar(props) {\n  return (\n    <div className=\"search-bar\">\n      <TextField value={props.searchValue} onChange={props.onChange} id=\"outlined-search\" type=\"search\" variant=\"outlined\" color=\"secondary\" />\n      <IconButton className=\"menu-button\" onClick={props.onSearchClicked}>\n        <SearchIcon className=\"search-bar-icon\" />\n      </IconButton>\n    </div>\n  )\n}\n\nexport default SearchBar\n\n\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Radio from '@material-ui/core/Radio';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\n\nfunction CourseLibraryToolbarMenuItem(props){\n    return (\n      <FormControlLabel value={props.value} control={<Radio />} label={props.value} />\n    )\n  }\n\n  export default CourseLibraryToolbarMenuItem","import React from 'react';\n\nimport Menu from '@material-ui/core/Menu';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport CourseLibraryToolbarMenuItem from './CourseLibraryToolbarMenuItem/CourseLibraryToolbarMenuItem.component';\n\n\n\nfunction CourseLibraryToolbarMenu(props){\n\n  let menuItems = props.options.map( option => {\n    return (\n      <CourseLibraryToolbarMenuItem\n        handleClick={option.associatedClickFunction}\n        value={option.display}>\n      </CourseLibraryToolbarMenuItem>\n    )\n  })\n\n  const onChangeFunction = (event) => {\n    props.closeFunction(event.target.value)\n  }\n\n    return (\n      <Menu\n          id={props.menuId}\n          anchorEl={props.element}\n          keepMounted\n          open={Boolean(props.element)}\n          onClose={props.closeFunction}\n        >\n          <MenuItem>\n            <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">{props.menuLabel}</FormLabel>\n            <RadioGroup aria-label=\"gender\" name={props.radioGroupName} value={props.menuValue} onChange={onChangeFunction}>\n              {menuItems}\n            </RadioGroup>\n            </FormControl>\n          </MenuItem>\n      </Menu>\n    )\n  }\n\n  export default CourseLibraryToolbarMenu","import React from 'react';\n\nimport {AppBar, Toolbar, IconButton, Typography } from '@material-ui/core';\nimport {Button} from '@material-ui/core';\n\nimport SearchBar from './SearchBar/SearchBar.component';\nimport CourseLibraryToolbarMenu from './CourseLibraryToolbarMenu/CourseLibraryToolbarMenu.component'\n\n\n//<CourseLibraryMenu handleClose={this.handleClose} sortByElement={props.state.sortByElement}></CourseLibraryMenu>\n\n\nfunction CourseLibraryToolbar(props){\n\n    let menuButtons = props.menuItems.map(menuItem => {\n        return (\n            <Button\n                color=\"inherit\" \n                className=\"menu-button\"\n                onClick={menuItem.clickedFunction}\n            >\n                {menuItem.buttonText}\n            </Button>\n        )\n    })\n\n    let menus = props.menuItems.map(menuItem => {\n        return(\n            <CourseLibraryToolbarMenu\n                element={menuItem.element}\n                closeFunction = {menuItem.closeFunction}\n                options={menuItem.menuOptions}\n                menuId={menuItem.menuId}\n                menuLabel={menuItem.buttonText}\n            >\n            </CourseLibraryToolbarMenu>\n        )\n    })\n\n    return(\n        <AppBar position=\"static\" className=\"course-library-app-bar\">\n            <Toolbar>\n                {menuButtons}\n                <SearchBar searchValue={props.searchInfo.value} onChange={props.searchInfo.onChange} onSearchClicked={props.searchInfo.onClick}></SearchBar>\n            </Toolbar>\n            {menus}\n      </AppBar>\n    )\n}\n\nexport default CourseLibraryToolbar","import firebase from 'firebase'\n\n\n/**\n * Firebase Set Up\n */\nvar firebaseConfig = {\n    apiKey: \"AIzaSyA8tAHYGUiNkFHq6452W4Qr79eibVmtRZA\",\n    authDomain: \"mooc-in-a-box.firebaseapp.com\",\n    databaseURL: \"https://mooc-in-a-box.firebaseio.com\",\n    projectId: \"mooc-in-a-box\",\n    storageBucket: \"mooc-in-a-box.appspot.com\",\n    messagingSenderId: \"594314585164\",\n    appId: \"1:594314585164:web:3ae152452d1c238af100e9\",\n    measurementId: \"G-LXH34JCXZS\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\n\n\n/*\n* -----------------------------------------------------------\n*  USER Functions\n* -----------------------------------------------------------\n*/\n\nexport const getUserById = userId => {\n    return db.collection('Users').doc(userId).get();\n}\n\nexport const getAllUsers = () => {\n    return db.collection('Users').get();\n}\n\nexport const updateUser = async (userId, updates) => {\n    return db.collection('Users')\n        .doc(userId)\n        .set(updates, { merge: true })\n}\n\nexport const createUser = async (userAuth) => {\n    return db.collection('Users')\n        .doc(userAuth.uid)\n        .set({\n            id: userAuth.uid,\n            name: userAuth.displayName,\n            photoURL: userAuth.photoURL,\n            email: userAuth.email,\n        },\n            { merge: true }\n        )\n}\n\nexport const getCurrentUser = () => {\n    var user = firebase.auth().currentUser;\n    if (user) {\n        return user;\n    } else {\n        return undefined;\n    }\n}\n\nexport const deleteUser = async () => {\n    var user = firebase.auth().currentUser;\n\n    return await user.delete().then(function () {\n        document.cookie = 'userid=; expires=Thu, 01 Jan 1970 00:00:01 GMT;';\n        return true;\n    }).catch(function (error) {\n        console.log(error);\n        return false;\n    });\n}\n\n\n\n/*\n* -----------------------------------------------------------\n*  Course Functions\n* -----------------------------------------------------------\n*/\n\nexport const getCourseById = courseId => {\n    return db.collection('Course')\n        .doc(courseId)\n        .get()\n        .then(courseResult => {\n            if (courseResult.exists) {\n                const course = courseResult.data();\n                course.id = courseId;\n                return course;\n            } else {\n                return null\n            }\n        });\n};\n\nexport const getAllCourses = () => {\n    return db.collection('Course').get();\n}\n\nexport const createCourse = async (user, courseInfo) => {\n    const userDocRef = db.doc(`Users/${user.id}`)\n    const lessonRef = db.doc(courseInfo.chapter.lessons);\n    courseInfo.chapter.lessons = lessonRef;\n    return await db.collection('Course').add({\n        owner: userDocRef,\n        title: courseInfo.title,\n        description: courseInfo.description,\n        chapters: courseInfo.chapters\n    })\n        .then(async courseDoc => {\n            let usersCreatedCourses;\n            if (user.createdCoursesRefs && user.createdCoursesRefs.length > 0) {\n                usersCreatedCourses = user.createdCoursesRefs;\n            } else {\n                usersCreatedCourses = []\n            }\n\n            const courseRef = db.doc(`Course/${courseDoc.id}`)\n            usersCreatedCourses.push(courseRef);\n            const updateObject = {\n                createdCoursesRefs: usersCreatedCourses\n            }\n\n            return await updateUser(user.id, updateObject);\n        })\n}\n\nexport const favoriteCourse = async (user, courseInfo) => {\n    const courseRef = db.doc(`Course/${courseInfo.id}`)\n    let favoritedCourses;\n\n    if (user.favoritedCoursesRefs && user.favoritedCoursesRefs.length > 0) {\n        favoritedCourses = user.favoritedCoursesRefs;\n    } else {\n        favoritedCourses = []\n    }\n\n    favoritedCourses.push(courseRef);\n\n    const updateObject = {\n        favoritedCoursesRefs: favoritedCourses\n    }\n\n    return await updateUser(user.id, updateObject);\n}\n\nexport const removeFavoriteCourse = async (user, courseInfo) => {\n    const favoritedCourses = user.favoritedCoursesRefs.filter(item => item.id !== courseInfo.id);\n    const updateObject = {\n        favoritedCoursesRefs: favoritedCourses\n    }\n\n    return await updateUser(user.id, updateObject);\n}\n\n\nexport const updateCourse = async (courseId, updates) => {\n    return db.collection('Course')\n        .doc(courseId)\n        .set(updates, { merge: true });\n}\n\n\n\n\n/*\n* !!!!!!!!\n* Course Attributes Section\n* !!!!!!!!\n*/\nexport const updateCourseOverview = async (course, content) => {\n    const contentJSON = JSON.stringify(content);\n\n    const updateObject = {\n        overview: contentJSON\n    }\n\n    return await updateCourse(course.id, updateObject);\n}\n\nexport const addNewChapter = async (course, newChapterInfo) => {\n    const chapter = {}\n    chapter.title = newChapterInfo.title;\n    chapter.description = newChapterInfo.description;\n    chapter.id = 0\n    chapter.lessonsRef = [];\n\n    if (course.chapters && course.chapters.length > 0) {\n        chapter.id = course.chapters.length;\n        course.chapters.push(chapter);\n    } else {\n        course.chapters = [];\n        course.chapters.push(chapter);\n    }\n\n    const updateObject = {\n        chapters: course.chapters\n    }\n\n    return await updateCourse(course.id, updateObject);\n\n}\n\nexport const updateLesson = async (course, chapterInfo, lessonInfo, add) => {\n    if (add) { // For initial lesson creation.\n        delete lessonInfo.id; // cuz undefined is not allowed\n        return await db.collection('Course').doc(course.id).collection('Lessons').add(lessonInfo)\n            .then(async lessonDoc => {\n                const lessonRef = db.doc(`Course/${course.id}/Lessons/${lessonDoc.id}`);\n                const chapters = course.chapters.map(chapter => {\n                    if (chapter === chapterInfo) {\n                        chapter.lessonsRef.push(lessonRef);\n                    }\n                    return chapter\n                });\n\n                const updateObject = {\n                    chapters\n                }\n                return await updateCourse(course.id, updateObject)\n            });\n    } else {\n        const lessonRef = db.doc(`Course/${course.id}/Lessons/${lessonInfo.id}`);\n        return await lessonRef.set(lessonInfo, { merge: true });\n    }\n}\n\n\n/*\n* -----------------------------------------------------------\n*  Login Functions\n* -----------------------------------------------------------\n*/\n\nexport const logUserInUser = async (isGoog) => {\n    let provider;\n    isGoog ? provider = new firebase.auth.GoogleAuthProvider() :\n        provider = new firebase.auth.FacebookAuthProvider();\n    let users = [];\n    let currentUser = undefined;\n    let authUser = undefined;\n    // Get all users so we can see if the logged in one is one of ours.\n    // TODO(jessi): store this data so we don't need to fetch it, or directly ask for the user\n    // once they log in and if no user exists create one. Sounds like work.\n    await getAllUsers()\n        .then((queryResults) => {\n            queryResults.forEach((doc) => {\n                const user = doc.data();\n                user.id = doc.id;\n                users.push(user);\n            })\n        });\n\n    return await firebase.auth().signInWithPopup(provider).then(async function (result) {\n        authUser = result.user;\n        users.forEach(u => {\n            if (u.id === authUser.uid) {\n                currentUser = u;\n            }\n        });\n        // Didn't find an existing user.\n        if (currentUser === undefined) {\n            // Create new user\n            await createUser(authUser).then(async () => {\n                // Get the new user to return\n                return getCurrentUser();\n            }).catch(error => {\n                console.log(error);\n            });\n        }\n        return currentUser;\n    }).catch(function (error) {\n        console.log(error);\n    });\n}\n\nexport const signOut = async () => {\n    return await firebase.auth().signOut().then(function () {\n        document.cookie = 'userid=; expires=Thu, 01 Jan 1970 00:00:01 GMT;';\n        return true;\n    }).catch(function (error) {\n        console.log(error);\n        return false;\n    });\n}\n\n\n\n/*\n* -----------------------------------------------------------\n*  Utility Functions\n* -----------------------------------------------------------\n*/\n\nexport const getDocFromDocRef = docRef => {\n    return docRef.get()\n        .then(result => {\n            if (result.exists) {\n                const myResult = result.data();\n                myResult.id = result.id;\n                return myResult;\n            } else {\n                return null;\n            }\n        })\n}","import React from 'react';\nimport './CourseLibrary.css';\nimport {Button} from '@material-ui/core';\nimport CourseCard from '../CourseCard/CourseCard';\nimport { render } from '@testing-library/react';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Grid from '@material-ui/core/Grid';\nimport {AppBar, Toolbar, IconButton, Typography } from '@material-ui/core';\nimport SearchBar from './CourseLibraryToolbar/SearchBar/SearchBar.component';\nimport CourseLibraryMenu from './CourseLibraryToolbar/CourseLibraryToolbarMenu/CourseLibraryToolbarMenu.component'\nimport CourseLibraryToolbar from './CourseLibraryToolbar/CourseLibraryToolbar.component'\n\nimport * as FirebaseService from '../../service/firebase.service';\n\n\nclass CourseLibrary extends React.Component {\n  constructor(props) {\n    super(props);\n    // Bind Search\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n    this.handleSearchClicked = this.handleSearchClicked.bind(this);\n    // Bind Sort By\n    this.sortByClicked = this.sortByClicked.bind(this);\n    this.sortByHandleClose = this.sortByHandleClose.bind(this);\n    // Bind Topic\n    this.topicClicked = this.topicClicked.bind(this);\n    this.topicHandleClose = this.topicHandleClose.bind(this);\n    // Bind Organization\n    this.organizationClicked = this.organizationClicked.bind(this);\n    this.organizationHandleClosed = this.organizationHandleClosed.bind(this);\n\n    this.buildMenuItems = this.buildMenuItems.bind(this);\n    this.favoriteClicked = this.favoriteClicked.bind(this);\n    this.removeFavoriteClicked = this.removeFavoriteClicked.bind(this);\n    this.state = {\n      searchValue: \"\",\n      sortByElement: null,\n      topicElement: null,\n      organizationElement: null,\n      sortFilterValue: null,\n      topicFilterValue: null,\n      organizationFilterValue:null,\n      activeCourses: props.courses\n    }\n  }\n\n  /** Search Function */\n  handleSearchChange(e){\n    const searchValue = e.target.value;\n    const searchValueLowerCase = searchValue.toLowerCase();\n    console.log(searchValue);\n    const activeCourses = this.props.courses.filter(course => \n      ( course.title?.toLowerCase().includes(searchValueLowerCase) \n      || course.description?.toLowerCase().includes(searchValueLowerCase) \n      || course.owner.displayName?.toLowerCase().includes(searchValueLowerCase) \n      ))\n    this.setState({\n      searchValue,\n      activeCourses\n    })\n  }\n\n  handleSearchClicked(e){\n  }\n\n  /** Sort By Functions */\n  sortByClicked = event => {\n    this.setState({\n      sortByElement: event.currentTarget\n    });\n  };\n\n  sortByHandleClose = (value) => {\n    this.setState({\n      sortByElement: null,\n      sortFilterValue: value\n    });\n  };\n\n\n  /** Topic Functions */\n  topicClicked = event => {\n    this.setState({\n      topicElement: event.currentTarget\n    });\n  };\n\n  topicHandleClose = (value) => {\n    this.setState({\n      topicElement: null,\n      topicFilterValue: value\n    });\n  };\n\n  /** Organization functions */\n  organizationClicked = event => {\n    this.setState({\n      organizationElement: event.currentTarget\n    });\n  };\n\n  organizationHandleClosed = (value) => {\n    this.setState({\n      organizationElement: null,\n      organizationFilterValue: value\n    });\n  };\n\n  async favoriteClicked(course) {\n    await FirebaseService.favoriteCourse(this.props.user, course);\n    this.props.updateUser(this.props.user.id)\n  }\n\n  async removeFavoriteClicked(course){\n    await FirebaseService.removeFavoriteCourse(this.props.user, course);\n    this.props.updateUser(this.props.user.id)\n\n  }\n\n  buildMenuItems = () => {\n    const sortByInfo = {\n      buttonText: \"Sort By\",\n      menuId: \"menu-sort-by\",\n      clickedFunction: this.sortByClicked,\n      closeFunction: this.sortByHandleClose,\n      element: this.state.sortByElement,\n      radioGroupName: \"menuRadio\",\n      menuValue: this.state.sortFilterValue,\n      menuOptions: [\n        {\n          display: \"Newest\",\n          associatedClickFunction:  this.sortByHandleClose\n        },\n        {\n          display: \"Recommended\",\n          associatedClickFunction:  this.sortByHandleClose\n        },\n        {\n          display: \"Trending\",\n          associatedClickFunction:  this.sortByHandleClose\n        }\n      ]\n    }\n\n    const topicInfo = {\n      buttonText: \"Topic\",\n      menuId: \"menu-topic\",\n      clickedFunction: this.topicClicked,\n      element: this.state.topicElement,\n      closeFunction: this.topicHandleClose,\n      radioGroupName: \"topicRadio\",\n      menuValue: this.state.topicFilterValue,\n      menuOptions: [\n        {\n          display: \"Science\",\n          associatedClickFunction:  this.topicHandleClose\n        },\n        {\n          display: \"Technology\",\n          associatedClickFunction:  this.topicHandleClose\n        },\n        {\n          display: \"History\",\n          associatedClickFunction:  this.topicHandleClose\n        },\n        {\n          display: \"Arts\",\n          associatedClickFunction:  this.topicHandleClose\n        }\n      ]\n    }\n\n    const organizationInfo = {\n      buttonText: \"Organization\",\n      menuId: \"menu-organization\",\n      clickedFunction: this.organizationClicked,\n      element: this.state.organizationElement,\n      closeFunction: this.organizationHandleClosed,\n      radioGroupName: \"organizationRadio\",\n      menuValue: this.state.organizationFilterValue,\n      menuOptions: [\n        {\n          display: \"Required\",\n          associatedClickFunction:  this.organizationHandleClosed\n        },\n        {\n          display: \"Recommended\",\n          associatedClickFunction:  this.organizationHandleClosed\n        },\n        {\n          display: \"All Courses\",\n          associatedClickFunction:  this.organizationHandleClosed\n        }\n      ]\n    }\n\n    return [sortByInfo, topicInfo, organizationInfo];\n  }\n\n  isCourseAFavorite = (user, course) => {\n    \n    if( user.favoritedCourses && user.favoritedCourses.length > 0 ){\n      return user.favoritedCourses\n        .find(favoritedCourse => favoritedCourse.id === course.id);\n    }\n    return false;\n  }\n\n\n  render() {\n    // Mappings\n    const menuItems = this.buildMenuItems();\n    const favoriteClicked = this.favoriteClicked;\n    const isCourseAFavorite = this.isCourseAFavorite;\n    const removeFavoriteClicked = this.removeFavoriteClicked\n\n    const user = this.props.user;\n    const searchInfo = {\n      value: this.state.searchValue,\n      onChange: this.handleSearchChange,\n      onClick: this.handleSearchClicked\n    }\n    let listItems = []\n    if (user) {\n\n      listItems = this.state.activeCourses.map(function(item) {\n        return (\n            <Grid item s={4}>\n              <CourseCard course={item} favoriteClicked={favoriteClicked} removeFavoriteClicked={removeFavoriteClicked} isCourseAFavorite={isCourseAFavorite(user, item)}></CourseCard>\n            </Grid>\n        );\n      });\n    }\n    \n    return (\n      <div class=\"course-library\">\n        <CourseLibraryToolbar menuItems={menuItems} searchInfo={searchInfo}></CourseLibraryToolbar>\n          <div className=\"course-list\">\n          <Grid container spacing={3}>\n            {listItems}\n          </Grid>\n          </div>\n      </div>\n\n      );\n  }\n}\n\nexport default CourseLibrary;\n","import React from 'react';\nimport './Login.css';\nimport { Button } from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { withRouter, Redirect } from \"react-router-dom\";\nimport * as FirebaseService from '../../service/firebase.service';\n\nclass LoginPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { redirectToReferrer: false };\n    this.loginGoogle = this.loginGoogle.bind(this);\n    this.loginFacebook = this.loginFacebook.bind(this);\n\n  }\n\n  async loginGoogle(event) {\n    // TODO(jessi): set a loading state\n    await FirebaseService.logUserInUser(/* isGoog= */ true).then(u => {\n      this.props.completeLogin(u);\n      this.props.history.push(\"/courseLibrary\");\n      this.setState({ redirectToReferrer: true });\n    });\n    // TODO(jessi): unset loading state\n  }\n\n  async loginFacebook(event) {\n    // TODO(jessi): set a loading state\n    await FirebaseService.logUserInUser(/* isGoog= */ false).then(u => {\n      this.props.completeLogin(u);\n      this.props.history.push(\"/courseLibrary\");\n      this.setState({ redirectToReferrer: true });\n    });\n    // TODO(jessi): unset loading state\n  }\n\n  render() {\n    // Show loading screen while we load the user.\n    if (this.props.loadingUser) {\n      return (\n        <div>\n          Loading..\n          <CircularProgress></CircularProgress>\n        </div>\n      )\n    }\n\n    // Redirect if logged in or complete login.\n    const { from } = this.props.location.state || { from: { pathname: '/' } }\n    const { redirectToReferrer } = this.state\n    if (redirectToReferrer === true || this.props.user) {\n      return <Redirect to={from} />\n    }\n\n\n    // TODO(jessi): style these buttons\n    return (\n      <div className=\"login\">\n        <h1>Sign into Mooc in a Box</h1>\n        <Button color=\"inherit\" className=\"menu-button\" onClick={this.loginFacebook}>\n          Sign in with Facebook\n      </Button>\n        <Button color=\"inherit\" className=\"menu-button\" onClick={this.loginGoogle}>\n          Sign in with Google\n      </Button>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(LoginPage);\n","import React, { useState } from 'react';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport {Button} from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\n\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Grid from '@material-ui/core/Grid';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { IconButton } from '@material-ui/core';\n\nfunction CoursesDropdownComponent(props) {\n    return (\n      <ExpansionPanel>\n              <ExpansionPanelSummary\n              expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel1a-content\"\n              id=\"panel1a-header\"\n              >\n              <Typography variant=\"subtitle2\">{props.courses.length} Course(s)</Typography>\n              </ExpansionPanelSummary>\n              <ExpansionPanelDetails>\n              <Grid container spacing={2}>\n                  <Grid item xs={12} md={6}>\n                      <div>\n                          <List dense=\"true\">\n                          {\n                            props.courses.map( course => {\n                              return (\n                                <span>\n                                  <ListItem \n                                  >\n                                    <Button\n                                      component={RouterLink} \n                                      to={`/courseOverview/${course.id}`}\n                                    >\n                                      {course.title}\n                                    </Button>\n                                    { props.includeEditIcon && \n                                      <IconButton \n                                        className=\"menu-button\" \n                                        color=\"inherit\" \n                                        aria-label=\"menu\"\n                                        component={RouterLink}\n                                        to={`/editCourse/${course.id}`}\n                                      >\n                                        <EditIcon/>\n                                      </IconButton>\n                                    }\n                                  </ListItem>\n                                </span>\n                                \n                              )\n                            })\n                          }\n                          </List>\n                      </div>\n                      </Grid>\n                  </Grid>\n              </ExpansionPanelDetails>\n          </ExpansionPanel>\n    )\n  }\n\n  export default CoursesDropdownComponent;\n","import React, { useState } from 'react';\nimport './MyCourses.css';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport { Button } from '@material-ui/core';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Link } from 'react-router-dom'\n\nimport EditIcon from '@material-ui/icons/Edit';\nimport { IconButton } from '@material-ui/core';\n\nimport CoursesDropdownComponent from '../CoursesDropdown/CoursesDropdown.component';\n\n\n\n/**\n * \n * http://localhost:3000/courseOverview/rlfxOavBn4nPZLNTRMkL\n * http://localhost:3000/courseOverview/rlfxOavBn4nPZLNTRMkL\n */\n\n/**\n * \n * \n */\n\n\n\nfunction generate(element) {\n  return React.cloneElement(element, {\n    key: element,\n  })\n}\n\nfunction CurrentCoursesComponent(props) {\n  let numberOfCourses = props.currentCourses.length;\n\n  return (\n    <div>\n      <h1> Current Courses </h1>\n      <CoursesDropdownComponent courses={props.currentCourses}></CoursesDropdownComponent>\n    </div>\n  )\n}\n\n\nfunction PastCoursesComponent(props) {\n  return (\n    <div>\n      <h1> Past Courses </h1>\n      <CoursesDropdownComponent courses={props.pastCourses}></CoursesDropdownComponent>\n    </div>\n  )\n}\n\nfunction SavedCoursesComponent(props) {\n  return (\n    <div>\n      <h1> Favorited Courses </h1>\n      <CoursesDropdownComponent courses={props.savedCourses}></CoursesDropdownComponent>\n    </div>\n  )\n}\n\nfunction CreatedCoursesComponent(props) {\n  return (\n    <div>\n      <h1> Created Courses </h1>\n      <CoursesDropdownComponent courses={props.createdCourses} includeEditIcon={true}></CoursesDropdownComponent>\n    </div>\n  )\n}\n\n\n\nfunction MyCourses(props) {\n\n  const [user, setUser] = useState();\n\n  React.useEffect(() => {\n    setUser(props.user);\n  }, [props]);\n\n\n  if (user) {\n    const courseComponentList = []\n    let hasCourses = false;\n\n\n    if (user.currentCourses && user.currentCourses.length > 0) {\n      const element = <CurrentCoursesComponent currentCourses={user.currentCourses}></CurrentCoursesComponent>\n      courseComponentList.push(element);\n      hasCourses = true;\n    }\n\n    if (user.pastCourses && user.pastCourse.length > 0) {\n      const element = <PastCoursesComponent pastCourses={user.pastCourses}></PastCoursesComponent>\n      courseComponentList.push(element);\n      hasCourses = true;\n\n    }\n\n    if (user.favoritedCourses && user.favoritedCourses.length > 0) {\n      const element = <SavedCoursesComponent savedCourses={user.favoritedCourses}></SavedCoursesComponent>\n      courseComponentList.push(element);\n      hasCourses = true;\n\n    }\n\n    if (user.createdCourses && user.createdCourses.length > 0) {\n      const element = <CreatedCoursesComponent createdCourses={user.createdCourses}></CreatedCoursesComponent>\n      courseComponentList.push(element);\n      hasCourses = true;\n\n    }\n    if (hasCourses) {\n      return (\n        <div className=\"MyCourses\">\n          <CssBaseline />\n          <Typography className=\"center\" variant=\"h3\" component=\"h3\">\n            My Courses\n          </Typography>\n          <Container maxWidth=\"lg\">\n            <Paper className=\"paper\">\n              {\n                courseComponentList.map(element => element)\n              }\n            </Paper>\n          </Container>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"MyCourses\">\n          <CssBaseline />\n          <Typography className=\"center\" variant=\"h3\" component=\"h3\">\n            My Courses\n            </Typography>\n          <Container maxWidth=\"lg\">\n            <Paper className=\"paper\">\n              <h4>You don't have any courses saved yet!</h4>\n            </Paper>\n          </Container>\n        </div>\n      )\n    }\n\n\n  } else {\n    return (\n      <div>\n        Loading..\n        <CircularProgress></CircularProgress>\n      </div>\n    )\n  }\n\n}\n\nexport default MyCourses;\n","import React from 'react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Button } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\n\nfunction EditDialog(props) {\n  return (\n    <div>\n      <Dialog open={props.isOpen} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">{props.field}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Edit the Field below to update your {props.field}\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label={props.field}\n            value={props.value}\n            onChange={props.onChange}\n            type=\"email\"\n            color=\"secondary\"\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.handleClose} color=\"secondary\">\n            Cancel\n            </Button>\n          <Button onClick={props.handleSubmit} color=\"secondary\">\n            Submit\n            </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n\nexport default EditDialog","import React from 'react';\n\n\nimport Typography from '@material-ui/core/Typography';\nimport { IconButton } from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport EditDialog from '../EditDialog/EditDialog.component';\n\nconst userKeyToDisplayMap = {\n    \"displayName\": \"Display Name\",\n    \"email\": \"Email Address\",\n    \"password\": \"Password\"\n  }\n\nfunction UserProfileSection(props){\n    function getEditIconIfNecessary(){\n      return props.isEditable ? \n        <IconButton className=\"menu-button\" color=\"inherit\" aria-label=\"menu\">\n          <EditIcon onClick={props.openDialog}/>\n        </IconButton>\n        :\n        <div></div>\n    }\n\n\n    return (\n      <div>\n        <Typography align=\"center\" variant=\"h6\" component=\"h6\">\n          <strong>{props.displayValue}</strong>\n        </Typography>\n        <Typography align=\"center\" variant=\"body1\" component=\"body1\">\n          <span>\n            {props.value}\n            {getEditIconIfNecessary()}\n          </span>\n        </Typography>\n        <EditDialog \n          isOpen={props.isDialogOpen}\n          handleClose={props.handleClose}\n          handleSubmit={props.handleSubmit}\n          field={userKeyToDisplayMap[props.displayKey]}\n          value={props.value}\n          onChange={props.onChange}\n        />\n      </div>\n    )\n}\n\nexport default UserProfileSection\n  ","import React, { useState } from 'react';\nimport './UserProfile.css';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport Divider from '@material-ui/core/Divider';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport UserProfileSection from './UserProfileSection/UserProfileSection.component';\nimport { Button } from '@material-ui/core';\nimport { withRouter } from \"react-router-dom\";\nimport * as FirebaseService from '../../service/firebase.service';\n\nconst passwordValue = \"*******\";\n\nfunction UserProfile(props) {\n\n\n  const [displayName, setDisplayName] = useState(null);\n  const [oldDisplayName, setOldDiplayName] = useState(null);\n  const [error, setError] = useState();\n  const [isDisplayNameDialogOpen, setIsDisplayNameDialogOpen] = useState(false)\n  const [userInterests, setUserInterests] = useState(null);\n  const [oldUserInterests, setOldUserInterests] = useState(null);\n  const [isUserInterestsDialogOpen, setIsUserInterestsDialogOpen] = useState(false);\n\n\n\n  function handleDisplayNameClose() {\n    setDisplayName(oldDisplayName)\n    setIsDisplayNameDialogOpen(false)\n  }\n\n  function handleDisplayNameSubmit() {\n    FirebaseService.updateUser(props.user.id, {\n      displayName\n    }).then(result => {\n      setIsDisplayNameDialogOpen(false)\n      setOldDiplayName(displayName)\n      props.updateUser(props.user.id);\n\n    })\n      .catch(err => {\n        console.log(err);\n      })\n  }\n\n  function openDisplayNameDialog() {\n    setOldDiplayName(displayName)\n    setIsDisplayNameDialogOpen(true)\n  }\n\n  function onDisplayNameChange(e) {\n    setDisplayName(e.target.value);\n  }\n\n  /**\n   * Begin User Interests\n   */\n  function handleUserInterestsDialogClose() {\n    setUserInterests(oldUserInterests)\n    setIsUserInterestsDialogOpen(false)\n  }\n\n  function openUserInterestDialog() {\n    setOldUserInterests(userInterests)\n    setIsUserInterestsDialogOpen(true)\n  }\n\n  function onUserInterestsChange(e) {\n    setUserInterests(e.target.value);\n  }\n\n  function handleUserInterestSubmit() {\n    FirebaseService.updateUser(props.user.id, {\n      interests: userInterests\n    }).then(result => {\n      setIsUserInterestsDialogOpen(false)\n      setUserInterests(userInterests)\n      props.updateUser(props.user.id);\n    })\n      .catch(err => {\n        console.log(err);\n      })\n  }\n\n  async function signOut() {\n    await FirebaseService.signOut().then((res) => {\n      if (res) {\n        props.history.push(\"/\");\n        props.updateUser(undefined);\n      }\n      // TODO(jessi) handle error\n    });\n  }\n\n  async function deleteAccount() {\n    await FirebaseService.deleteUser().then((res) => {\n      if (res) {\n        props.history.push(\"/\");\n        props.updateUser(undefined);\n      }\n      // TODO(jessi) handle error\n    });\n  }\n\n  if (props.user && displayName === null && userInterests === null) {\n    setDisplayName(props.user.displayName)\n    setUserInterests(props.user.interests)\n  }\n\n  if (props.user) {\n    return (\n      <div className=\"userProfile\">\n        <CssBaseline />\n        <Typography className=\"center\" variant=\"h3\" component=\"h3\">\n          User Profile\n        </Typography>\n        <Container className=\"userProfile-bottom-padding\" maxWidth=\"lg\">\n          <Paper className=\"paper\">\n\n            <UserProfileSection\n              isEditable={true}\n              displayValue=\"User Interests\"\n              value={userInterests}\n              handleClose={handleUserInterestsDialogClose}\n              handleSubmit={handleUserInterestSubmit}\n              isDialogOpen={isUserInterestsDialogOpen}\n              openDialog={openUserInterestDialog}\n              onChange={onUserInterestsChange}\n              isEditable={true}\n            ></UserProfileSection>\n\n          </Paper>\n        </Container>\n        <Divider />\n\n\n        <Container maxWidth=\"lg\">\n          <Paper className=\"paper\">\n\n            <UserProfileSection\n              isEditable={true}\n              displayValue=\"Display Name\"\n              value={displayName}\n              handleClose={handleDisplayNameClose}\n              handleSubmit={handleDisplayNameSubmit}\n              isDialogOpen={isDisplayNameDialogOpen}\n              openDialog={openDisplayNameDialog}\n              onChange={onDisplayNameChange}\n            />\n            <Divider />\n            <UserProfileSection \n              isEditable={false} \n              displayValue=\"Email\" \n              value={props.user.email}\n            />\n            <Divider />\n            <div className=\"logout-btns\">\n              <Button color=\"inherit\" className=\"menu-button\" onClick={signOut}>\n                Sign out\n              </Button>\n              <Button color=\"inherit\" className=\"menu-button\" onClick={deleteAccount}>\n                Delete account\n              </Button>\n            </div>\n          </Paper>\n        </Container>\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        Loading..\n        <CircularProgress></CircularProgress>\n      </div>\n    )\n  }\n\n}\n\nexport default withRouter(UserProfile);\n","import React, { useState } from 'react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Button } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\n\nfunction CreateCourseDialog(props) {\n  const [description, setDescription] = useState();\n  const [title, setTitle] = useState();\n\n\n  function onCourseTitleChange(e) {\n    setTitle(e.target.value);\n  }\n\n  function onCourseDescriptionChange(e) {\n    setDescription(e.target.value);\n\n  }\n\n  function handleSubmit() {\n\n    const courseDetails = {\n      title,\n      description\n    }\n\n    props.handleSubmit(courseDetails);\n  }\n\n\n  return (\n    <div>\n      <Dialog open={props.isOpen} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Create A New Course</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Create a new course. Start by entering a title and description below!\n            </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"title\"\n            label=\"Course Title\"\n            onChange={onCourseTitleChange}\n            type=\"text\"\n            color=\"secondary\"\n            fullWidth\n          />\n          <TextField\n            margin=\"dense\"\n            id=\"description\"\n            label=\"Course Description\"\n            onChange={onCourseDescriptionChange}\n            type=\"text\"\n            color=\"secondary\"\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.handleClose} color=\"secondary\">\n            Cancel\n            </Button>\n          <Button onClick={handleSubmit} color=\"secondary\">\n            Submit\n            </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n\nexport default CreateCourseDialog","import React, { useState } from 'react';\nimport './CreateCourse.css';\nimport { Button } from '@material-ui/core';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport Divider from '@material-ui/core/Divider';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { withRouter } from \"react-router-dom\";\nimport * as FirebaseService from '../../service/firebase.service';\nimport CreateCourseDialog from './CreateCourseDialog/CreateCourseDialog.component';\nimport CoursesDropdownComponent from '../CoursesDropdown/CoursesDropdown.component';\nimport { useHistory } from \"react-router-dom\";\n\n\nfunction CreatedCoursesComponent(props) {\n\n  return (\n    <div className=\"courses-section\">\n      <h1> Courses You've Created </h1>\n      <CoursesDropdownComponent courses={props.createdCourses} includeEditIcon={true}></CoursesDropdownComponent>\n    </div>\n  )\n}\n\nfunction CreateCourse(props) {\n  const [isCreateCourseDialogOpen, setIsCreateCourseDialogOpen] = useState(false);\n  const history = useHistory();\n\n\n  function handleCreateCourseDialogClose() {\n    setIsCreateCourseDialogOpen(false);\n  }\n\n  function openCreateCourseDialog() {\n    setIsCreateCourseDialogOpen(true);\n\n  }\n\n  async function handleSubmit(courseInfo) {\n    courseInfo.owner = props.user.id;\n\n    const chapter = {\n      id: 0,\n      lessons: \"Course/rlfxOavBn4nPZLNTRMkL/Lessons/kL5CwNARpoUhexocK7P4\",\n      sectionTitle: `${courseInfo.title} - Section`\n    }\n\n    courseInfo.chapters = []\n    courseInfo.chapter = chapter;\n    // courseInfo.chapters.push(chapter);\n\n    const response = await FirebaseService.createCourse(props.user, courseInfo)\n    setIsCreateCourseDialogOpen(false);\n    await props.updateCourses();\n    await props.updateUser(props.user.id);\n    // Navigate to Edit Course page\n    history.push(`/editCourse/${props.user.createdCoursesRefs[props.user.createdCoursesRefs.length - 1].id}`)\n  }\n\n  const hasCurrentCourses = false\n  let currnetCoursesSection = null;\n  if (props.user && props.user.createdCourses && props.user.createdCourses.length > 0) {\n    currnetCoursesSection = <CreatedCoursesComponent createdCourses={props.user.createdCourses}></CreatedCoursesComponent>\n  } else {\n    currnetCoursesSection = <h3>You have not created any courses</h3>\n  }\n\n\n  return (\n    <div className=\"Home\">\n      <CssBaseline />\n      <Typography className=\"center\" variant=\"h3\" component=\"h3\">\n        Create A Course\n        </Typography>\n      <Container className=\"userProfile-bottom-padding\" maxWidth=\"lg\">\n        <Paper className=\"paper\">\n          {\n            currnetCoursesSection\n          }\n          <span>\n            <Button variant=\"contained\" color=\"secondary\" onClick={openCreateCourseDialog}>\n              Create New Course\n              </Button>\n          </span>\n        </Paper>\n      </Container>\n      <Divider />\n\n      <CreateCourseDialog\n        isOpen={isCreateCourseDialogOpen}\n        handleClose={handleCreateCourseDialogClose}\n        handleSubmit={handleSubmit}\n        user={props.user}\n      />\n\n\n    </div>\n  );\n}\n\nexport default CreateCourse;\n","import React, { useState, useEffect } from 'react';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { Button } from '@material-ui/core';\nimport './CourseChapterPanel.css';\n\nfunction CourseChapterPanel(props) {\n\n    function listItemClicked(lesson) {\n        props.setChapterInContext(props.chapter);\n        props.setActiveLesson(lesson);\n    }\n\n    let lessonItems = []\n\n    const lessonsLength = props.chapter?.lessons?.length;\n    if (lessonsLength > 0) {\n        lessonItems = props.chapter.lessons.map(lesson => {\n            const isActiveLesson = (lesson === props.activeLesson);\n\n            return (\n                <ListItem selected={isActiveLesson} onClick={() => listItemClicked(lesson)} id={lesson.id} button>\n                    <ListItemText primary={lesson.title} />\n                </ListItem>\n            )\n        });\n    } else {\n        lessonItems[0] = <ListItem> <ListItemText primary=\"No Lessons Added\" /> </ListItem>\n    }\n\n\n    function openLessonModal() {\n        props.setChapterInContext(props.chapter);\n        props.openLessonModal(/**addLesson=*/true);\n    }\n\n    let addNewLessonButton;\n\n    if (props.editable) {\n        addNewLessonButton = <Button variant=\"contained\" onClick={openLessonModal} color=\"secondary\" className=\"add-content-btn\"> Add New Lesson </Button>\n    }\n\n\n    return (\n        <ExpansionPanel\n            defaultExpanded={props.chapter === props.chapterInContext}\n        >\n            <ExpansionPanelSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"panel1a-content\"\n                id=\"panel1a-header\"\n            >\n                <Typography variant=\"subtitle2\">{props.chapter.title}</Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n\n                <List dense=\"true\" className=\"lessons-list\">\n                    {lessonItems}\n                    {addNewLessonButton}\n                </List>\n\n            </ExpansionPanelDetails>\n        </ExpansionPanel>\n    )\n}\n\nexport default CourseChapterPanel;","import React from 'react';\nimport './CourseNavigationPane.css';\nimport Paper from '@material-ui/core/Paper';\nimport { Button } from '@material-ui/core';\n\nimport CourseChapterPanel from './CourseChapterPanel/CourseChapterPanel.component';\n\n\n/**\n * Generate multiple function\n */\n\n\nfunction generate(element) {\n  return [0, 1, 2].map(value =>\n    React.cloneElement(element, {\n      key: value,\n    }),\n  );\n}\n\n\n\n\nfunction CourseNavigationPane(props) {\n\n  function setChapterInContext(chapter) {\n    props.setChapterInContext(chapter);\n  }\n\n  const courseOverviewClicked = () => {\n    props.setActiveLesson(undefined);\n    props.setChapterInContext(undefined);\n  }\n\n  let courseNavigationPanels = []\n  const chaptersLength = props.course?.chapters?.length;\n\n  if (chaptersLength > 0) {\n    courseNavigationPanels = props.course.chapters.map(chapter =>\n      <CourseChapterPanel editable={props.editable} setActiveLesson={props.setActiveLesson} activeLesson={props.activeLesson} openLessonModal={props.openLessonModal} chapterInContext={props.chapterInContext} setChapterInContext={setChapterInContext} chapter={chapter} />\n    )\n  }\n  \n  let addNewChapterButton;\n  if(props.editable){\n   addNewChapterButton = <Button variant=\"contained\" onClick={props.openCreateChapterDialog} color=\"secondary\"> Add New Chapter </Button> \n  }\n\n\n  return (\n    <Paper className=\"paper\">\n      <Button id=\"course-overview\"\n        onClick={courseOverviewClicked}>\n        <h1>{props.course.title}</h1>\n      </Button>\n      {courseNavigationPanels}\n      {addNewChapterButton}\n    </Paper>\n  )\n}\n\nexport default CourseNavigationPane;","import React from 'react';\nimport YouTube from 'react-youtube';\nimport { Button } from '@material-ui/core';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\n\n// Youtube Constants\n\nconst YoutubeComponentConfig = {\n    opts: {\n        height: '390',\n        width: '640',\n        playerVars: {\n            autoplay: 0,\n        },\n    },\n    videoId: \"BKorP55Aqvg\"\n\n}\n\n\nfunction EditCourseLesson(props) {\n\n    function _onReady(event) {\n        // access to player in all event handlers via event.target\n        event.target.pauseVideo();\n    }\n\n\n    function goToPreviousLesson() {\n        props.navigateToPreviousLesson(props.lesson);\n    }\n\n    function goToNextLesson() {\n        props.navigateToNextLesson(props.lesson);\n    }\n\n    function getButtonDiv() {\n        if (props.isFirstLesson && props.isLastLesson) {\n            return '';\n        }\n\n        let leftButton, rightButton;\n\n        if (props.nextLesson || props.nextChapter) {\n            leftButton =\n                <Button variant=\"contained\" onClick={goToNextLesson} className=\"next-button\" color=\"secondary\" endIcon={<ArrowForwardIosIcon />}>\n                    {props.nextLesson ? \"Next Lesson\" : \"Next Chapter\"}\n                </Button>\n        }\n\n        if (props.prevLesson || props.prevChapter) {\n            rightButton =\n                <Button variant=\"contained\" onClick={goToPreviousLesson} className=\"previous-button\" color=\"secondary\" startIcon={<ArrowBackIosIcon />}>\n                    {props.prevLesson ? \"Previous Lesson\" : \"Previous Chapter\"}\n                </Button>\n        }\n\n        return (\n            <div className=\"button-div\">\n                {leftButton}\n                {rightButton}\n            </div>\n        )\n    }\n\n    function getVideoConfig() {\n        const youtubeConfig = { ...YoutubeComponentConfig };\n        const url = props.lesson?.video;\n        if (url && url.includes(\"youtube\") && (url.includes(\"v=\"))) {\n            const myParamters = url.split(\"?\");\n            var searchParams = new URLSearchParams(myParamters[1]);\n            youtubeConfig.videoId = searchParams.get('v');\n        }\n        return youtubeConfig;\n    }\n\n    if (props.lesson) {\n        const youtubeConfig = getVideoConfig();\n\n        return (\n            <div>\n                <h3>{props.lesson.title}</h3>\n                <h6>Link: {props.lesson.video}</h6>\n                <strong>Description: </strong>\n                <p>{props.lesson.description}</p>\n                <YouTube videoId={youtubeConfig.videoId} opts={youtubeConfig.opts} onReady={_onReady} />\n                {getButtonDiv()}\n            </div>\n        )\n    } else {\n        return (\n            <div>\n                <h5> No Lesson Details </h5>\n            </div>\n        )\n    }\n}\n\nexport default EditCourseLesson;","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport CourseLesson from './CourseLesson/CourseLesson.component';\nimport { Button } from '@material-ui/core';\nimport { Editor } from 'react-draft-wysiwyg';\nimport { EditorState, convertFromRaw, ContentState } from \"draft-js\";\n\nimport './CourseOverviewPane.css'\n\n\n\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\n\nfunction CourseOverviewPane(props) {\n\n    let lessonArray = [];\n    for (let i = 0; i < props.course.chapters.length; i++) {\n        for (let j = 0; j < props.course.chapters[i].lessons?.length; j++) {\n            lessonArray.push(props.course.chapters[i].lessons[j]);\n        }\n    }\n\n    function navigateToNextLesson(lesson) {\n        console.log(\"NAVIGATE TO NEXT LESSON FROM: \", lesson);\n        const indexOfCurrentLesson = props.activeChapter.lessons.indexOf(lesson);\n        if (indexOfCurrentLesson !== props.activeChapter.lessons.length - 1) {\n            props.setActiveLesson(props.activeChapter.lessons[indexOfCurrentLesson + 1]);\n            return;\n        } else {\n            const activeChapterIndex = props.course.chapters.indexOf(props.activeChapter);\n            const nextChapter = props.course.chapters[activeChapterIndex + 1];\n            props.setChapterInContext(nextChapter);\n            props.setActiveLesson(nextChapter.lessons[0]);\n        }\n    }\n\n    function navigateToPreviousLesson(lesson) {\n        console.log(\"NAVIGATE TO PREVIOUS LESSON FROM: \", lesson);\n        const indexOfCurrentLesson = props.activeChapter.lessons.indexOf(lesson);\n\n        if (indexOfCurrentLesson !== 0) {\n            props.setActiveLesson(props.activeChapter.lessons[indexOfCurrentLesson - 1]);\n            return;\n        } else {\n            const activeChapterIndex = props.course.chapters.indexOf(props.activeChapter);\n            const prevChapter = props.course.chapters[activeChapterIndex - 1];\n            props.setChapterInContext(prevChapter);\n            props.setActiveLesson(prevChapter.lessons[prevChapter.lessons.length - 1]);\n        }\n\n    }\n\n    function openLessonModal() {\n        props.openLessonModal(/**addLesson=*/false);\n    }\n\n\n    let openEditCourseOverviewDialogButton;\n    let addNewLessonButton;\n    if (props.editable) {\n        openEditCourseOverviewDialogButton = <Button onClick={props.openEditCourseOverviewDialog} color=\"secondary\" variant=\"contained\"> Edit Overview </Button>\n        addNewLessonButton = <Button variant=\"contained\" onClick={openLessonModal} color=\"secondary\" className=\"add-content-btn\"> Edit Lesson </Button>\n    }\n\n    let content = undefined;\n    if (props.course.overview) {\n        const contentStateObj = JSON.parse(props.course.overview);\n        const editorState = EditorState.createWithContent(convertFromRaw(contentStateObj));\n        content = <Editor\n            toolbarHidden\n            editorState={editorState}\n            readOnly={true}\n        />\n    }\n    else {\n        content = <Editor\n            toolbarHidden\n            editorState={EditorState.createWithContent(ContentState.createFromText(\"No text entered.\"))}\n            readOnly={true}\n        />\n    }\n\n    function getLessonInformation() {\n        let prevLesson, nextLesson, prevChapter, nextChapter = false;\n\n        if (props.activeLesson) {\n            const currentLessonIndex = lessonArray.indexOf(props.activeLesson);\n            const currentLessonIndexInChapter = props.activeChapter.lessons.indexOf(props.activeLesson);\n            const numLessonsInChapter = props.activeChapter.lessons.length;\n            const numChapters = props.course.chapters.length;\n            const activeChapterIndex = props.course.chapters.indexOf(props.activeChapter);\n\n            prevLesson = currentLessonIndexInChapter > 0;\n            nextLesson = currentLessonIndexInChapter < numLessonsInChapter - 1;\n            prevChapter = currentLessonIndexInChapter === 0 && currentLessonIndex > 0\n            nextChapter = currentLessonIndexInChapter === numLessonsInChapter - 1\n                && currentLessonIndex < lessonArray.length - 1\n                && activeChapterIndex !== numChapters - 1;\n        }\n\n        return [prevLesson, nextLesson, prevChapter, nextChapter]\n    }\n\n\n    let prevLesson, nextLesson, prevChapter, nextChapter = false;\n    if (props.activeLesson) {\n        [prevLesson, nextLesson, prevChapter, nextChapter] = getLessonInformation();\n    }\n\n    return (\n        <Paper className=\"paper\">\n            {props.activeChapter ?\n                <div>\n                    <h2>Chapter: {props.activeChapter.title}</h2>\n                    <CourseLesson\n                        navigateToNextLesson={navigateToNextLesson}\n                        navigateToPreviousLesson={navigateToPreviousLesson}\n                        prevLesson={prevLesson}\n                        nextLesson={nextLesson}\n                        prevChapter={prevChapter}\n                        nextChapter={nextChapter}\n                        lesson={props.activeLesson}\n                    />\n                    {addNewLessonButton}\n                </div> :\n                <div>\n                    {content}\n                    {openEditCourseOverviewDialogButton}\n                </div>\n            }\n        </Paper>\n    )\n}\n\nexport default CourseOverviewPane;","import React, { useState } from 'react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Button } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\n\nfunction CreateChapterDialog(props) {\n  const [description, setDescription] = useState();\n  const [title, setTitle] = useState();\n\n\n  function onCourseTitleChange(e) {\n    setTitle(e.target.value);\n  }\n\n  function onCourseDescriptionChange(e) {\n    setDescription(e.target.value);\n\n  }\n\n  function handleSubmit(e) {\n    const chapterInfo = {\n      title,\n      description\n    }\n\n    props.handleSubmit(chapterInfo);\n  }\n\n\n  return (\n    <div>\n      <Dialog open={props.isOpen} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Create New Chapter</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Create a new chapter within your course. Enter a title and description below.\n            </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"title\"\n            label=\"Chapter Title\"\n            onChange={onCourseTitleChange}\n            type=\"text\"\n            color=\"secondary\"\n            fullWidth\n          />\n          <TextField\n            margin=\"dense\"\n            id=\"description\"\n            label=\"Chapter Description\"\n            onChange={onCourseDescriptionChange}\n            type=\"text\"\n            color=\"secondary\"\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.handleClose} color=\"secondary\">\n            Cancel\n            </Button>\n          <Button onClick={handleSubmit} color=\"secondary\">\n            Submit\n            </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n\nexport default CreateChapterDialog","import React, { useState, useEffect } from 'react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Button } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\n\nfunction CreateLessonDialog(props) {\n  const [description, setDescription] = useState();\n  const [title, setTitle] = useState();\n  const [video, setVideo] = useState();\n  const [isDescriptionError, setIsDescriptionError] = useState(false);\n  const [isTitleError, setIsTitleError] = useState(false);\n  const [isYoutubeError, setIsYoutubeError] = useState(false);\n\n  function onCourseTitleChange(e) {\n    setTitle(e.target.value);\n  }\n\n  function onCourseDescriptionChange(e) {\n    setDescription(e.target.value);\n\n  }\n\n  function onVideoUrlChange(e) {\n    setVideo(e.target.value);\n  }\n\n  function isValidTitle(){\n    console.log(\"TITLE: \", title);\n    if (title && title.length > 0){\n      setIsTitleError(false)\n      return true;\n    } else {\n      setIsTitleError(true);\n      console.log(\"TITLE ERROR: \", isTitleError)\n      return false;\n    }\n\n  }\n\n  function isValidDescription() {\n    console.log(\"DESCRIPTION: \", description);\n\n    if (description && description.length > 0){\n      setIsDescriptionError(false)\n      return true;\n    } else {\n      setIsDescriptionError(true);\n      return false;\n    }\n  }\n\n  function isValidYoutubeURL(){\n    if (video && video.includes(\"youtube\") && (video.includes(\"v=\"))) {\n      setIsYoutubeError(false);\n      return true;\n    } else {\n      setIsYoutubeError(true);\n      return false;\n    }\n  }\n\n  function handleSubmit(e) {\n    const id = props.lesson?.id ? props.lesson.id : undefined;\n\n    if( isValidTitle() && isValidDescription() && isValidYoutubeURL() ){\n      const lessonInfo = {\n        id,\n        title,\n        description,\n        video\n      }\n      props.updateLesson(lessonInfo, props.add);\n    } \n  }\n\n  function handleClose(){\n    // Reset State\n    setTitle();\n    setVideo();\n    setDescription();\n    setIsTitleError(false);\n    setIsDescriptionError(false);\n    setIsYoutubeError(false);\n    props.handleClose();\n  }\n\n  useEffect( () => {\n    if (!props.add && props.lesson) {\n      console.log(\"Coming in here....\");\n      setTitle(props.lesson.title);\n      setDescription(props.lesson.description);\n      setVideo(props.lesson.video);\n    } else {\n      setTitle()\n      setDescription()\n      setVideo()\n    }\n  }, [props]);\n\n  return (\n    <div>\n      <Dialog open={props.isOpen} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">{props.add ? \"Create New\" : \"Edit\"} Lesson</DialogTitle>\n        <DialogContent>\n          {props.add ? \n            <DialogContentText>\n              Add a new lesson to your course\n            </DialogContentText>\n          :\n            <DialogContentText>\n              Edit existing lesson\n            </DialogContentText>\n          }\n\n          <TextField\n            autoFocus\n            required\n            margin=\"dense\"\n            error={isTitleError}\n            id=\"title\"\n            label=\"Lesson Title\"\n            onChange={onCourseTitleChange}\n            type=\"text\"\n            color=\"secondary\"\n            value={title}  \n            helperText={isTitleError ? \"Title is a required field\" : \"\"}\n            fullWidth\n          />\n          <TextField\n            margin=\"dense\"\n            required\n            error={isDescriptionError}\n            id=\"description\"\n            label=\"Lesson Description\"\n            onChange={onCourseDescriptionChange}\n            type=\"text\"\n            color=\"secondary\"\n            value={description}\n            helperText={isDescriptionError ? \"Description is a required field\" : \"\"}\n            fullWidth\n          />\n          <TextField\n            margin=\"dense\"\n            error={isYoutubeError}\n            id=\"video\"\n            label=\"Video URL\"\n            onChange={onVideoUrlChange}\n            type=\"text\"\n            color=\"secondary\"\n            value={video}\n            helperText={isYoutubeError ? \"Youtube URL is malformed. It must have the form: https://www.youtube.com?v=<SomeCharacterString>\" : \"\"}\n\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.handleClose} color=\"secondary\">\n            Cancel\n            </Button>\n          <Button onClick={handleSubmit} color=\"secondary\">\n            Submit\n            </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n\nexport default CreateLessonDialog","import React, { useState, useEffect } from 'react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Button } from '@material-ui/core';\nimport { Editor } from 'react-draft-wysiwyg';\nimport { EditorState, convertFromRaw, convertToRaw, RichUtils } from 'draft-js';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\n\nfunction EditCourseOverviewDialog(props) {\n  const [overview, setOverview] = useState();\n  const [contentState, setContentState] = useState(props.course.overview);\n  const [editorState, setEditorState] = useState();\n\n  function handleSubmit(e) {\n    const currentContentState = editorState.getCurrentContent();\n    setContentState(convertToRaw(currentContentState));\n    props.updateCourseOverview(convertToRaw(currentContentState));\n  }\n\n  useEffect(() => {\n    if (contentState) {\n      setEditorState(EditorState.createWithContent(convertFromRaw(JSON.parse(contentState))));\n    }\n    else {\n      setEditorState(EditorState.createEmpty());\n    }\n  }, []);\n\n  function onEditorStateChange(editorState) {\n    setEditorState(editorState);\n  };\n\n  function handleKeyCommand(command) {\n    const newState = RichUtils.handleKeyCommand(editorState, command);\n    if (newState) {\n      setEditorState(newState);\n      return 'handled';\n    }\n    return 'not-handled';\n  };\n\n  return (\n\n\n    <div>\n      <Dialog open={props.isOpen} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Edit Course Overview</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Edit course information, providing students with a basic description of the class and learning objectives.\n            </DialogContentText>\n          <Editor\n            editorState={editorState}\n            editorClassName=\"editor-textbox\"\n            handleKeyCommand={handleKeyCommand}\n            onEditorStateChange={onEditorStateChange}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.handleClose} color=\"secondary\">\n            Cancel\n            </Button>\n          <Button onClick={handleSubmit} color=\"secondary\">\n            Submit\n            </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n\nexport default EditCourseOverviewDialog","import React, { useEffect, useState } from 'react';\nimport './CourseOverview.css';\nimport {\n    Link as RouterLink,\n    useParams\n} from \"react-router-dom\";\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { withRouter } from \"react-router-dom\";\nimport { Button } from '@material-ui/core';\nimport * as FirebaseService from '../../service/firebase.service';\nimport CourseNavigationPane from './CourseNavigationPane/CourseNavigationPane.component';\n\nimport CourseOverviewPane from './CourseOverviewPane/CourseOverviewPane.component';\nimport CreateChapterDialog from './Dialogs/CreateChapterDialog/CreateChapterDialog.component';\nimport CreateLessonDialog from './Dialogs/CreateLessonDialog/CreateLessonDialog.component';\nimport EditCourseOverviewDialog from './Dialogs/EditCourseOverviewDialog/EditCourseOverviewDialog.component';\n\nfunction CourseOverview(props) {\n    // Get ID from Route Params\n    let { id } = useParams();\n    // Create State Variables\n    const [course, setCourse] = useState();\n    const [error, setError] = useState();\n    const [isCreateChapterDialogOpen, setIsCreateChapterDialogOpen] = useState(false);\n    const [isCreateLessonDialogOpen, setIsCreateLessonDialogOpen] = useState(false);\n    const [isEditCourseOverviewDialogOpen, setIsEditCourseOverviewDialogOpen] = useState(false);\n    const [chapterInContext, setChapterInContext] = useState();\n    const [activeLesson, setActiveLesson] = useState();\n    const [addLesson, setAddLesson] = useState();\n\n\n    function handleCreateChapterClose() {\n        setIsCreateChapterDialogOpen(false);\n    }\n\n    function openCreateChapterDialog() {\n        setIsCreateChapterDialogOpen(true);\n    }\n\n    function handleCreateLessonDialogClose() {\n        setIsCreateLessonDialogOpen(false);\n    }\n\n    function openCreateLessonDialog(addLesson) {\n        setAddLesson(addLesson);\n        setIsCreateLessonDialogOpen(true);\n    }\n\n    function handleEditCourseOverviewDialogClose() {\n        setIsEditCourseOverviewDialogOpen(false);\n    }\n\n    function openEditCourseOverviewDialog() {\n        setIsEditCourseOverviewDialogOpen(true);\n    }\n\n    function viewPublished() {\n        // ensure course overview\n        setActiveLesson(undefined);\n        setChapterInContext(undefined);\n        // navigate\n        props.history.push(`/courseOverview/${course.id}`);\n    }\n\n\n    async function updateLesson(lessonInfo, add) {\n        setIsCreateLessonDialogOpen(false);\n        await FirebaseService.updateLesson(course, chapterInContext, lessonInfo, add).then(() => {\n            getCourseById(id);\n            // TODO (jessi): make this go to the new lesson when adding.\n        }).catch((err) => { console.log(err) });\n    }\n\n    async function updateCourseOverview(overview) {\n        setIsEditCourseOverviewDialogOpen(false);\n        console.log(overview)\n        await FirebaseService.updateCourseOverview(course, overview);\n        getCourseById(id);\n    }\n\n    async function addNewChapter(chapterInfo) {\n        await FirebaseService.addNewChapter(course, chapterInfo);\n        getCourseById(id);\n        setIsCreateChapterDialogOpen(false);\n    }\n\n\n    async function resolveLessons(chapter) {\n        const lessonsRefLength = chapter.lessonsRef?.length;\n        if (lessonsRefLength > 0) {\n            return Promise.all(\n                chapter.lessonsRef.map(async lessonRef => {\n                    const lesson = await FirebaseService.getDocFromDocRef(lessonRef)\n                    return lesson;\n                })\n            ).then(results => {\n                chapter.lessons = results;\n                return chapter;\n            });\n\n        } else {\n            return Promise.resolve(chapter);\n        }\n    }\n\n    async function resolveChapters(chapters) {\n        return Promise.all(chapters.map(chapter => resolveLessons(chapter)))\n    }\n\n    async function getCourseById(id) {\n        const course = await FirebaseService.getCourseById(id);\n        course.chapters = await resolveChapters(course.chapters);\n        setCourse(course);\n    }\n\n    useEffect(() => {\n        if (id) {\n            getCourseById(id);\n        }\n    }, [id]);\n\n    let dialogs;\n    let viewPublishedCourseButton;\n    if (props.editable) {\n        dialogs = <div>\n            <CreateChapterDialog isOpen={isCreateChapterDialogOpen} handleSubmit={addNewChapter} handleClose={handleCreateChapterClose} />\n            <CreateLessonDialog isOpen={isCreateLessonDialogOpen} add={addLesson} lesson={activeLesson} updateLesson={updateLesson} handleClose={handleCreateLessonDialogClose} />\n            <EditCourseOverviewDialog isOpen={isEditCourseOverviewDialogOpen} updateCourseOverview={updateCourseOverview} handleClose={handleEditCourseOverviewDialogClose} course={course} />\n        </div>\n\n        viewPublishedCourseButton = <Button variant=\"contained\" color=\"secondary\" onClick={viewPublished}> View Published Course </Button>\n    }\n\n\n\n    if (course) {\n        return (\n            <div className=\"edit-course\">\n                <Grid container spacing={3}>\n                    <Grid item xs={4}>\n                        <CourseNavigationPane editable={props.editable} activeLesson={activeLesson} setActiveLesson={setActiveLesson} openLessonModal={openCreateLessonDialog} chapterInContext={chapterInContext} setChapterInContext={setChapterInContext} course={course} openCreateChapterDialog={openCreateChapterDialog} />\n                    </Grid>\n                    <Grid item xs={8}>\n                        <CourseOverviewPane setActiveLesson={setActiveLesson} setChapterInContext={setChapterInContext} editable={props.editable} activeChapter={chapterInContext} activeLesson={activeLesson} course={course} openEditCourseOverviewDialog={openEditCourseOverviewDialog} openLessonModal={openCreateLessonDialog} />\n                    </Grid>\n                    {viewPublishedCourseButton}\n                </Grid>\n                {dialogs}\n            </div>\n        );\n    } else {\n        return (\n            <div>\n                Loading...\n                <CircularProgress></CircularProgress>\n            </div>\n        )\n    }\n\n\n}\n\nexport default withRouter(CourseOverview);","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { AppBar, Toolbar, IconButton, Typography, Button, } from '@material-ui/core';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link as RouterLink,\n  Redirect\n} from \"react-router-dom\";\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport CourseLibrary from './components/CourseLibrary/CourseLibrary';\nimport Login from './components/Login/Login';\nimport MyCourses from './components/MyCourses/MyCourses';\nimport UserProfile from './components/UserProfile/UserProfile';\nimport CreateCourse from './components/CreateCourse/CreateCourse.component';\nimport CourseOverview from './components/CourseOverview/CourseOverview.component';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nimport * as FirebaseService from '../src/service/firebase.service'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: { // peaches\n      light: '#f44336',\n      main: '#f6eee7',\n      dark: '#dbbca1',\n    },\n    secondary: {  // purples\n      light: '#a17da5',\n      main: '#87618c',\n      dark: '#442b4a',\n    },\n  },\n  typography: {\n    useNextVariants: true\n  },\n  overrides: {\n    MuiButton: {\n      root: {\n        textTransform: 'none',\n      },\n    },\n  },\n})\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      courses: [],\n      users: [],\n      currentUser: undefined,\n      loadingUser: true\n    };\n    this.fetchCourses = this.fetchCourses.bind(this);\n    this.fetchUsers = this.fetchUsers.bind(this);\n    this.render = this.render.bind(this);\n    this.updateUser = this.updateUser.bind(this);\n    this.setUser = this.setUser.bind(this);\n    this.getUserOnLoad = this.getUserOnLoad.bind(this);\n    this.fetchCourses().then(() => {\n      this.getUserOnLoad();\n    });\n  }\n\n  async updateUser(userId) {\n    if (!userId) {\n      this.setState({ currentUser: undefined });\n      this.setState({ loadingUser: false });\n      return;\n    }\n    await FirebaseService.getUserById(userId)\n      .then(result => {\n        const user = result.data();\n\n        if (user.createdCoursesRefs && user.createdCoursesRefs.length > 0) {\n\n          const newCourses = user.createdCoursesRefs\n            .map(courseRef => this.state.courses.find(course => course.id === courseRef.id));\n\n          user.createdCourses = user.createdCoursesRefs\n            .map(courseRef => this.state.courses.find(course => course.id === courseRef.id));\n        }\n\n        if (user.pastCoursesRefs && user.pastCoursesRefs.length > 0) {\n          user.pastCourses = user.pastCoursesRefs\n            .map(courseRef => this.state.courses.find(course => course.id === courseRef.id));\n        }\n\n        if (user.favoritedCoursesRefs && user.favoritedCoursesRefs.length > 0) {\n          user.favoritedCourses = user.favoritedCoursesRefs\n            .map(courseRef => this.state.courses.find(course => course.id === courseRef.id));\n        }\n\n        this.setState({ currentUser: user });\n        this.setState({ loadingUser: false });\n\n      })\n  }\n\n  getUserOnLoad() {\n    let user = FirebaseService.getCurrentUser();\n    if (user) {\n      this.updateUser(user.uid);\n    } else if (document.cookie.split(';').some((item) => item.trim().startsWith('userid='))) {\n      var cookieValue = document.cookie.replace(/(?:(?:^|.*;\\s*)userid\\s*\\=\\s*([^;]*).*$)|^.*$/, \"$1\");\n      this.updateUser(cookieValue);\n    } else {\n      this.updateUser(undefined);\n    }\n  }\n\n  setUser(user) {\n    this.updateUser(user.id);\n    document.cookie = `userid=${user.id}`;\n  }\n\n  async fetchCourses() {\n    let courses = [];\n    await FirebaseService.getAllCourses().then((queryResults) => {\n      queryResults.forEach((doc) => {\n        const course = doc.data();\n        const courseId = doc.id;\n        course.owner.get().then(user => {\n          course.owner = user.data();\n        })\n        // course.chapter.lessons.get().then(lesson => {\n        //   course.chapter.lessons = lesson.data();\n        // })\n        course.id = courseId\n        courses.push(course);\n        this.setState({ courses: courses });\n      });\n    });\n  }\n\n  async fetchUsers() {\n    let users = [];\n    await FirebaseService.getAllUsers()\n      .then((queryResults) => {\n        queryResults.forEach((doc) => {\n          const user = doc.data();\n          user.id = doc.id;\n          users.push(user);\n          this.setState({\n            users\n          })\n        })\n      })\n  }\n\n  render() {\n\n    // If not logged in redirect to the login page with redirect info. Url will\n    // briefly flash to login while we figure out if we have a user.\n    const PrivateRoute = ({ isLoggedIn, ...props }) =>\n      this.state.currentUser\n        ? <Route {...props} />\n        : <Redirect to={{\n          pathname: '/login',\n          state: { from: props.location }\n        }} />\n\n    return (\n      <MuiThemeProvider theme={theme}>\n        <Router>\n          <div>\n            <nav hidden={!this.state.currentUser}>\n              <AppBar position=\"static\">\n                <Toolbar>\n                  <Button variant=\"contained\" color=\"secondary\" className=\"menu-button main\" component={RouterLink} to=\"/courseLibrary\">All Courses</Button>\n                  <Button variant=\"contained\" color=\"secondary\" className=\"menu-button main\" component={RouterLink} to=\"/myCourses\">My Courses</Button>\n                  <Button variant=\"outlined\" color=\"secondary\" className=\"menu-button align-left\" component={RouterLink} to=\"/createCourse\">Create a Course</Button>\n                  <IconButton className=\"menu-button profile-icon\" component={RouterLink} to=\"/profile\" color=\"inherit\" aria-label=\"menu\">\n                    <AccountCircleIcon />\n                  </IconButton>\n                </Toolbar>\n              </AppBar>\n            </nav>\n\n            {/* A <Switch> looks through its children <Route>s and\n                renders the first one that matches the current URL. */}\n            <Switch>\n              <Route exact path=\"/login\">\n                <Login completeLogin={this.setUser} user={this.state.currentUser} loadingUser={this.state.loadingUser} />\n              </Route>\n              <PrivateRoute path=\"/(courseLibrary|)\">\n                <CourseLibrary courses={this.state.courses} user={this.state.currentUser} updateUser={this.updateUser} />\n              </PrivateRoute>\n              <PrivateRoute path=\"/courseOverview/:id\">\n                <CourseOverview editable={false} user={this.state.currentUser}></CourseOverview>\n              </PrivateRoute>\n              <PrivateRoute path=\"/myCourses\">\n                <MyCourses user={this.state.currentUser}></MyCourses>\n              </PrivateRoute>\n              <PrivateRoute path=\"/profile\">\n                <UserProfile user={this.state.currentUser} updateUser={this.updateUser}></UserProfile>\n              </PrivateRoute>\n              <PrivateRoute path=\"/createCourse\">\n                <CreateCourse user={this.state.currentUser} updateUser={this.updateUser} updateCourses={this.fetchCourses}></CreateCourse>\n              </PrivateRoute>\n              <PrivateRoute path=\"/editCourse/:id\">\n                <CourseOverview editable={true} user={this.state.currentUser}></CourseOverview>\n              </PrivateRoute>\n            </Switch>\n          </div>\n        </Router>\n      </MuiThemeProvider>\n    )\n  }\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}