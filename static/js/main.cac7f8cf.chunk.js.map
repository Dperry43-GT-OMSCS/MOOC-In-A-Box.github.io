{"version":3,"sources":["components/CourseCard/placeholder.png","components/CourseCard/CourseCard.js","components/CourseLibrary/CourseLibraryToolbar/SearchBar/SearchBar.component.js","components/CourseLibrary/CourseLibraryToolbar/CourseLibraryToolbarMenu/CourseLibraryToolbarMenuItem/CourseLibraryToolbarMenuItem.component.js","components/CourseLibrary/CourseLibraryToolbar/CourseLibraryToolbarMenu/CourseLibraryToolbarMenu.component.js","components/CourseLibrary/CourseLibraryToolbar/CourseLibraryToolbar.component.js","service/firebase.service.js","components/CourseLibrary/CourseLibrary.js","components/Login/Login.js","components/CoursesDropdown/CoursesDropdown.component.js","components/MyCourses/MyCourses.js","components/UserProfile/EditDialog/EditDialog.component.js","components/UserProfile/UserProfileSection/UserProfileSection.component.js","components/UserProfile/UserProfile.js","components/CreateCourse/CreateCourseDialog/CreateCourseDialog.component.js","components/CreateCourse/CreateCourse.component.js","components/CourseOverview/CourseNavigationPane/CourseChapterPanel/CourseChapterPanel.component.js","components/CourseOverview/CourseNavigationPane/CourseNavigationPane.component.js","components/CourseOverview/CourseOverviewPane/CourseLesson/CourseLesson.component.js","components/CourseOverview/CourseOverviewPane/CourseOverviewPane.component.js","components/CourseOverview/Dialogs/CreateChapterDialog/CreateChapterDialog.component.js","components/CourseOverview/Dialogs/CreateLessonDialog/CreateLessonDialog.component.js","components/CourseOverview/Dialogs/DeleteDialog/DeleteDialog.component.js","components/CourseOverview/CourseOverview.component.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","maxWidth","minWidth","maxHeight","minHeight","position","media","paddingTop","marginLeft","marginRight","expand","transform","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","actionsRow","bottom","left","content","overflow","textOverflow","display","WebkitLineClamp","WebkitBoxOrient","CourseCard","props","classes","React","useState","isFavorited","setIsFavorited","isCourseAFavorite","Card","variant","className","CardHeader","title","course","subheader","owner","displayName","name","action","IconButton","aria-label","onClick","removeFavoriteClicked","favoriteClicked","CardMedia","image","thumbnailUrl","placeholder","CardContent","Typography","color","component","description","CardActions","Button","Link","to","id","SearchBar","TextField","value","searchValue","onChange","type","onSearchClicked","CourseLibraryToolbarMenuItem","FormControlLabel","control","Radio","label","CourseLibraryToolbarMenu","menuItems","options","map","option","handleClick","associatedClickFunction","Menu","menuId","anchorEl","element","keepMounted","open","Boolean","onClose","closeFunction","MenuItem","FormControl","FormLabel","menuLabel","RadioGroup","radioGroupName","menuValue","event","target","CourseLibraryToolbar","menuButtons","menuItem","clickedFunction","buttonText","menus","menuOptions","AppBar","Toolbar","searchInfo","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","storageRef","storage","ref","getUserById","userId","collection","doc","get","getAllUsers","updateUser","updates","a","set","merge","createUser","userAuth","uid","photoURL","email","getCurrentUser","user","auth","currentUser","deleteUser","delete","then","document","cookie","catch","error","getCourseById","courseId","courseResult","exists","data","addImage","imageFile","child","put","getImageUrl","getDownloadURL","createCourse","courseInfo","userDocRef","newCourseObj","chapters","overview","JSON","stringify","add","courseDoc","usersCreatedCourses","createdCoursesRefs","length","courseRef","push","thumbnailFile","imageRef","imageUrl","courseUpdate","updateCourse","courseDocWithImage","updateObject","favoriteCourse","favoritedCourses","favoritedCoursesRefs","removeFavoriteCourse","filter","item","deleteCourseInFirebase","courseDeletedResult","queryResults","updateUsersPromises","forEach","createdCoursesRefLength","favoritedCourseRefs","Promise","all","deleteAllChapters","arrayOfLessonPromises","deleteLessons","chapter","lessonsRef","deleteCourse","addNewChapter","newChapterInfo","updateLesson","chapterInfo","lessonInfo","lessonDoc","lessonRef","deleteLesson","lesson","courseChapters","chapterInside","lessonsRefs","lessons","lessonInside","result","logUserInUser","isGoog","provider","GoogleAuthProvider","FacebookAuthProvider","users","undefined","authUser","signInWithPopup","u","console","log","signOut","getDocFromDocRef","docRef","myResult","CourseLibrary","sortByClicked","setState","sortByElement","currentTarget","sortByHandleClose","sortFilterValue","topicClicked","topicElement","topicHandleClose","topicFilterValue","organizationClicked","organizationElement","organizationHandleClosed","organizationFilterValue","buildMenuItems","state","find","favoritedCourse","handleSearchChange","bind","handleSearchClicked","activeCourses","courses","routeClicked","e","searchValueLowerCase","toLowerCase","this","includes","FirebaseService","listItems","Grid","s","class","container","spacing","Component","LoginPage","redirectToReferrer","loginGoogle","loginFacebook","completeLogin","history","loadingUser","CircularProgress","from","location","pathname","withRouter","CoursesDropdownComponent","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","xs","md","List","dense","ListItem","RouterLink","includeEditIcon","CurrentCoursesComponent","currentCourses","PastCoursesComponent","pastCourses","SavedCoursesComponent","savedCourses","CreatedCoursesComponent","createdCourses","MyCourses","setUser","useEffect","courseComponentList","hasCourses","pastCourse","CssBaseline","Container","Paper","EditDialog","Dialog","isOpen","handleClose","aria-labelledby","DialogTitle","field","DialogContent","DialogContentText","autoFocus","margin","fullWidth","DialogActions","handleSubmit","userKeyToDisplayMap","UserProfileSection","align","displayValue","isEditable","openDialog","isDialogOpen","displayKey","setDisplayName","oldDisplayName","setOldDiplayName","isDisplayNameDialogOpen","setIsDisplayNameDialogOpen","userInterests","setUserInterests","oldUserInterests","setOldUserInterests","isUserInterestsDialogOpen","setIsUserInterestsDialogOpen","res","interests","err","Divider","CreateCourseDialog","setDescription","setTitle","editorState","setEditorState","setOverview","isTitleError","setIsTitleError","isDescriptionError","setIsDescriptionError","setThumbnailFile","EditorState","createWithContent","convertFromRaw","parse","createEmpty","required","Input","file","files","helperText","editorClassName","handleKeyCommand","command","newState","RichUtils","convertToRaw","getCurrentContent","onEditorStateChange","titleIsGood","descriptionIsGood","currentContentState","courseDetails","CreateCourse","isCreateCourseDialogOpen","setIsCreateCourseDialogOpen","useHistory","updateCourses","currnetCoursesSection","CourseChapterPanel","addNewLessonButton","lessonItems","isActiveLesson","activeLesson","selected","setChapterInContext","setActiveLesson","listItemClicked","button","ListItemText","primary","editable","openLessonModal","defaultExpanded","chapterInContext","CourseNavigationPane","addNewChapterButton","deleteCourseButton","courseNavigationPanels","openCreateChapterDialog","openDeleteDialog","size","YoutubeComponentConfig","opts","height","width","playerVars","autoplay","videoId","EditCourseLesson","hasYoutubeVideo","goToPreviousLesson","navigateToPreviousLesson","goToNextLesson","navigateToNextLesson","str","isJson","contentStateObj","toolbarHidden","readOnly","text","ContentState","createFromText","youtubeConfig","url","video","myParamters","split","searchParams","URLSearchParams","getVideoConfig","onReady","pauseVideo","isFirstLesson","isLastLesson","nextLesson","nextChapter","leftButton","endIcon","prevLesson","prevChapter","rightButton","startIcon","getButtonDiv","CourseOverviewPane","openEditCourseOverviewDialogButton","editLessonButton","lessonArray","i","j","openEditCourseOverviewDialog","currentLessonIndex","indexOf","currentLessonIndexInChapter","activeChapter","numLessonsInChapter","numChapters","activeChapterIndex","getLessonInformation","indexOfCurrentLesson","CreateChapterDialog","CreateLessonDialog","setVideo","isYoutubeError","setIsYoutubeError","wrapperClassName","descriptionJSON","tempVideo","DeleteDialog","aria-describedby","deleteType","dialogs","viewPublishedCourseButton","useParams","setCourse","isCreateChapterDialogOpen","setIsCreateChapterDialogOpen","isCreateLessonDialogOpen","setIsCreateLessonDialogOpen","isEditCourseOverviewDialogOpen","setIsEditCourseOverviewDialogOpen","isDeleteDialogOpen","setIsDeleteDialogOpen","addLesson","setAddLesson","setDeleteType","objToDelete","setObjToDelete","openCreateLessonDialog","setDeletingCourse","resolveLessons","results","resolve","resolveChapters","isDeletingCourse","updatedLesson","buttonTheme","createMuiTheme","palette","main","secondary","typography","useNextVariants","overrides","MuiButton","textTransform","light","dark","App","myCourseSelected","allCoursesSelected","createCourseSelected","fetchCourses","fetchUsers","render","getUserOnLoad","deletingCourse","pastCoursesRefs","some","trim","startsWith","cookieValue","replace","PrivateRoute","isLoggedIn","browserRouteChanged","hidden","exact","path","window","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.cac7f8cf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/placeholder.fa9f1a41.png\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { Button } from '@material-ui/core';\nimport { Link } from 'react-router-dom'\nimport FavoriteBorderOutlinedIcon from '@material-ui/icons/FavoriteBorderOutlined';\nimport './CourseCard.css';\nimport placeholder from './placeholder.png';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: 345,\n    minWidth: 345,\n    maxHeight: 400,\n    minHeight: 400,\n    position: 'relative',\n  },\n  media: {\n    paddingTop: '56.25%', // 16:9\n    maxWidth: '50%',\n    marginLeft: \"auto\",\n    marginRight: \"auto\"\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n  actionsRow: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0\n  },\n  content: {\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    display: '-webkit-box',\n    WebkitLineClamp: '2',\n    WebkitBoxOrient: 'vertical',\n  }\n}));\n\nexport default function CourseCard(props) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n  const [isFavorited, setIsFavorited] = React.useState(false)\n\n  if (props.isCourseAFavorite != isFavorited) {\n    setIsFavorited(props.isCourseAFavorite);\n  }\n\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  const favoriteButtonClicked = () => {\n    if (isFavorited) {\n      setIsFavorited(false);\n      props.removeFavoriteClicked(props.course);\n    } else {\n      setIsFavorited(true);\n      props.favoriteClicked(props.course);\n    }\n\n  }\n\n  return (\n    <Card variant=\"outlined\" className={classes.root}>\n      <CardHeader\n        title={props.course.title}\n        subheader={props.course.owner.displayName ? props.course.owner.displayName : props.course.owner.name}\n        action={\n          <IconButton aria-label=\"add to favorites\" onClick={favoriteButtonClicked}>\n            {isFavorited ? <FavoriteIcon /> : <FavoriteBorderOutlinedIcon />}\n          </IconButton>\n        }\n      />\n      <CardMedia\n        className={classes.media}\n        image={props.course.thumbnailUrl ? props.course.thumbnailUrl : placeholder}\n      />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" className={classes.content}>\n          {props.course.description}\n        </Typography>\n      </CardContent>\n      <CardActions className={classes.actionsRow} >\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          component={Link}\n          to={`/courseOverview/${props.course.id}`}\n        >\n          Overview\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}","import React from 'react';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport { IconButton } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\n\nimport './SearchBar.css';\n\nfunction SearchBar(props) {\n  return (\n    <div className=\"search-bar\">\n      <TextField value={props.searchValue} onChange={props.onChange} id=\"outlined-search\" type=\"search\" variant=\"outlined\" color=\"secondary\" />\n      <IconButton className=\"menu-button\" onClick={props.onSearchClicked}>\n        <SearchIcon className=\"search-bar-icon\" />\n      </IconButton>\n    </div>\n  )\n}\n\nexport default SearchBar\n\n\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Radio from '@material-ui/core/Radio';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\n\nfunction CourseLibraryToolbarMenuItem(props){\n    return (\n      <FormControlLabel value={props.value} control={<Radio />} label={props.value} />\n    )\n  }\n\n  export default CourseLibraryToolbarMenuItem","import React from 'react';\n\nimport Menu from '@material-ui/core/Menu';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport CourseLibraryToolbarMenuItem from './CourseLibraryToolbarMenuItem/CourseLibraryToolbarMenuItem.component';\n\n\n\nfunction CourseLibraryToolbarMenu(props){\n\n  let menuItems = props.options.map( option => {\n    return (\n      <CourseLibraryToolbarMenuItem\n        handleClick={option.associatedClickFunction}\n        value={option.display}>\n      </CourseLibraryToolbarMenuItem>\n    )\n  })\n\n  const onChangeFunction = (event) => {\n    props.closeFunction(event.target.value)\n  }\n\n    return (\n      <Menu\n          id={props.menuId}\n          anchorEl={props.element}\n          keepMounted\n          open={Boolean(props.element)}\n          onClose={props.closeFunction}\n        >\n          <MenuItem>\n            <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">{props.menuLabel}</FormLabel>\n            <RadioGroup aria-label=\"gender\" name={props.radioGroupName} value={props.menuValue} onChange={onChangeFunction}>\n              {menuItems}\n            </RadioGroup>\n            </FormControl>\n          </MenuItem>\n      </Menu>\n    )\n  }\n\n  export default CourseLibraryToolbarMenu","import React from 'react';\n\nimport {AppBar, Toolbar, IconButton, Typography } from '@material-ui/core';\nimport {Button} from '@material-ui/core';\n\nimport SearchBar from './SearchBar/SearchBar.component';\nimport CourseLibraryToolbarMenu from './CourseLibraryToolbarMenu/CourseLibraryToolbarMenu.component'\n\n\n//<CourseLibraryMenu handleClose={this.handleClose} sortByElement={props.state.sortByElement}></CourseLibraryMenu>\n\n\nfunction CourseLibraryToolbar(props){\n\n    let menuButtons = props.menuItems.map(menuItem => {\n        return (\n            <Button\n                color=\"inherit\" \n                className=\"menu-button\"\n                onClick={menuItem.clickedFunction}\n            >\n                {menuItem.buttonText}\n            </Button>\n        )\n    })\n\n    let menus = props.menuItems.map(menuItem => {\n        return(\n            <CourseLibraryToolbarMenu\n                element={menuItem.element}\n                closeFunction = {menuItem.closeFunction}\n                options={menuItem.menuOptions}\n                menuId={menuItem.menuId}\n                menuLabel={menuItem.buttonText}\n            >\n            </CourseLibraryToolbarMenu>\n        )\n    })\n\n    return(\n        <AppBar position=\"static\" className=\"course-library-app-bar\">\n            <Toolbar>\n                {menuButtons}\n                <SearchBar searchValue={props.searchInfo.value} onChange={props.searchInfo.onChange} onSearchClicked={props.searchInfo.onClick}></SearchBar>\n            </Toolbar>\n            {menus}\n      </AppBar>\n    )\n}\n\nexport default CourseLibraryToolbar","import firebase from 'firebase'\n\n\n/**\n * Firebase Set Up\n */\nvar firebaseConfig = {\n    apiKey: \"AIzaSyA8tAHYGUiNkFHq6452W4Qr79eibVmtRZA\",\n    authDomain: \"mooc-in-a-box.firebaseapp.com\",\n    databaseURL: \"https://mooc-in-a-box.firebaseio.com\",\n    projectId: \"mooc-in-a-box\",\n    storageBucket: \"mooc-in-a-box.appspot.com\",\n    messagingSenderId: \"594314585164\",\n    appId: \"1:594314585164:web:3ae152452d1c238af100e9\",\n    measurementId: \"G-LXH34JCXZS\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\nvar storageRef = firebase.storage().ref();\n\n\n\n/*\n* -----------------------------------------------------------\n*  USER Functions\n* -----------------------------------------------------------\n*/\n\nexport const getUserById = userId => {\n    return db.collection('Users').doc(userId).get();\n}\n\nexport const getAllUsers = () => {\n    return db.collection('Users').get();\n}\n\nexport const updateUser = async (userId, updates) => {\n    return db.collection('Users')\n        .doc(userId)\n        .set(updates, { merge: true })\n}\n\nexport const createUser = async (userAuth) => {\n    return db.collection('Users')\n        .doc(userAuth.uid)\n        .set({\n            id: userAuth.uid,\n            name: userAuth.displayName,\n            photoURL: userAuth.photoURL,\n            email: userAuth.email,\n        },\n            { merge: true }\n        )\n}\n\nexport const getCurrentUser = () => {\n    var user = firebase.auth().currentUser;\n    if (user) {\n        return user;\n    } else {\n        return undefined;\n    }\n}\n\nexport const deleteUser = async () => {\n    var user = firebase.auth().currentUser;\n\n    return await user.delete().then(function () {\n        document.cookie = 'userid=; expires=Thu, 01 Jan 1970 00:00:01 GMT;';\n        return true;\n    }).catch(function (error) {\n        return false;\n    });\n}\n\n\n\n/*\n* -----------------------------------------------------------\n*  Course Functions\n* -----------------------------------------------------------\n*/\n\nexport const getCourseById = courseId => {\n    return db.collection('Course')\n        .doc(courseId)\n        .get()\n        .then(async courseResult => {\n            if (courseResult.exists) {\n                const course = courseResult.data();\n                course.id = courseId;\n                return course;\n            } else {\n                return null\n            }\n        });\n};\n\nexport const getAllCourses = () => {\n    return db.collection('Course').get();\n}\n\n\nexport const addImage = (courseId, imageFile) => {\n    const courseImageRef = storageRef.child(`images/courses/${courseId}/${imageFile.name}`);\n    return courseImageRef.put(imageFile);\n}\n\nexport const getImageUrl = (courseId, imageFile) => {\n    const courseImageRef = storageRef.child(`images/courses/${courseId}/${imageFile.name}`);\n    return courseImageRef.getDownloadURL();\n\n}\n\nexport const createCourse = async (user, courseInfo) => {\n    const userDocRef = db.doc(`Users/${user.id}`)\n\n    const newCourseObj = {\n        owner: userDocRef,\n        title: courseInfo.title,\n        description: courseInfo.description,\n        chapters: courseInfo.chapters\n    }\n\n    if (courseInfo.overview) {\n        newCourseObj.overview = JSON.stringify(courseInfo.overview)\n    }\n\n    // Create Course\n    return await db.collection('Course').add(newCourseObj)\n        .then(async courseDoc => {\n\n            let usersCreatedCourses;\n            if (user.createdCoursesRefs && user.createdCoursesRefs.length > 0) {\n                usersCreatedCourses = user.createdCoursesRefs;\n            } else {\n                usersCreatedCourses = []\n            }\n            const courseRef = db.doc(`Course/${courseDoc.id}`)\n            usersCreatedCourses.push(courseRef);\n\n\n            // Check If Image Was Included\n            if(courseInfo.thumbnailFile){\n                // Upload Image\n                return await addImage(courseDoc.id, courseInfo.thumbnailFile)\n                    .then( async imageRef => {\n\n                       return await getImageUrl(courseDoc.id, courseInfo.thumbnailFile)\n                        .then( async imageUrl => {\n                            const courseUpdate = {\n                                thumbnailUrl: imageUrl\n                            };\n\n                            return await updateCourse(courseDoc.id, courseUpdate )\n                                .then( async courseDocWithImage => {                                                                \n                                    const updateObject = {\n                                        createdCoursesRefs: usersCreatedCourses\n                                    }\n\n                                return await updateUser(user.id, updateObject);\n                            })\n                        })\n                    });\n            } else {\n                // No Image\n                const updateObject = {\n                    createdCoursesRefs: usersCreatedCourses\n                }\n                return await updateUser(user.id, updateObject);\n            }\n        })\n}\n\nexport const favoriteCourse = async (user, courseInfo) => {\n    const courseRef = db.doc(`Course/${courseInfo.id}`)\n    let favoritedCourses;\n\n    if (user.favoritedCoursesRefs && user.favoritedCoursesRefs.length > 0) {\n        favoritedCourses = user.favoritedCoursesRefs;\n    } else {\n        favoritedCourses = []\n    }\n\n    favoritedCourses.push(courseRef);\n\n    const updateObject = {\n        favoritedCoursesRefs: favoritedCourses\n    }\n\n    return await updateUser(user.id, updateObject);\n}\n\nexport const removeFavoriteCourse = async (user, courseInfo) => {\n    const favoritedCourses = user.favoritedCoursesRefs.filter(item => item.id !== courseInfo.id);\n    const updateObject = {\n        favoritedCoursesRefs: favoritedCourses\n    }\n\n    return await updateUser(user.id, updateObject);\n}\n\n\nexport const updateCourse = async (courseId, updates) => {\n\n    if (updates.overview) {\n        updates.overview = JSON.stringify(updates.overview);\n    }\n\n    if( updates.thumbnailFile) {\n        return await addImage(courseId, updates.thumbnailFile)\n            .then( async imageRef => {\n\n           return await getImageUrl(courseId, updates.thumbnailFile)\n            .then( async imageUrl => {\n\n                delete updates.thumbnailFile;\n                updates.thumbnailUrl = imageUrl\n\n                return db.collection('Course')\n                .doc(courseId)\n                .set(updates, { merge: true });\n            })\n        })\n    } else{ \n        return db.collection('Course')\n            .doc(courseId)\n            .set(updates, { merge: true });\n    }\n}\n\n\nconst deleteCourseInFirebase = async (courseId) => {\n\n    return db.collection('Course').doc(courseId).delete().then( async courseDeletedResult => {\n        return await getAllUsers().then(async (queryResults) => {\n            const updateUsersPromises = []\n\n            queryResults.forEach((doc) => {\n                let updateUser = false;\n                const user = doc.data();\n                user.id = doc.id;\n                // const createdCoursesRefLength =  user.createdCoursesRefs?.length();\n                // const favoritedCourseRefs = user.favoritedCoursesRefs?.length();\n                \n                if(user.createdCoursesRefs && user.createdCoursesRefs.length > 0) {\n                    const createdCoursesRefLength =  user.createdCoursesRefs.length;\n                    user.createdCoursesRefs = user.createdCoursesRefs.filter( courseRef => courseRef.id !== courseId );\n                    if (user.createdCoursesRefs.length !== createdCoursesRefLength){\n                        updateUser = true;\n                    }\n                }\n\n                if(user.favoritedCourseRefs && user.favoritedCourseRefs.length > 0){\n                    const favoritedCourseRefs = user.favoritedCoursesRefs.length;\n                    user.favoritedCourseRefs = user.favoritedCoursesRefs.filter( courseRef => courseRef.id !== courseId);\n                    if (user.favoritedCourseRefs.length !== favoritedCourseRefs) {\n                        updateUser = true;\n                    }\n                }\n        \n                if (updateUser){\n                    updateUsersPromises.push( db.collection('Users').doc(user.id).set(user, { merge: true }) );\n                }\n            })\n\n            return await Promise.all(updateUsersPromises);\n        })\n    });\n}\n\n\nconst deleteAllChapters= async (course) => {\n    const arrayOfLessonPromises = [];\n    let deleteLessons = false;\n    for (const chapter of course.chapters) {\n        if (chapter.lessonsRef?.length > 0){\n            deleteLessons = true;\n            break;\n        }\n    }\n    if (deleteLessons){\n        // var batch = firebase.firestore().batch()\n\n        db.collection(`/Course/${course.id}/Lessons`).get()\n            .then(queryResults => {\n                // values.map(val => {\n                //     batch.delete(val)\n                // })\n                queryResults.forEach( doc => {\n                    arrayOfLessonPromises.push(\n                        db.collection(`/Course/${course.id}/Lessons/`).doc(doc.id).delete()\n                    )\n                })\n            })\n        \n            return await Promise.all(arrayOfLessonPromises);\n        }\n}\n\n// const deleteChapter = async (course, chapter) => {\n//     db.collection(`/Course/${course.id}/`)\n// }\n\n\n\nexport const deleteCourse = async (course) => {\n\n    if (course.chapters?.length > 0 ){\n        await deleteAllChapters(course)\n    }\n    return await deleteCourseInFirebase(course.id);\n}\n\n\n/*\n* !!!!!!!!\n* Course Attributes Section\n* !!!!!!!!\n*/\nexport const updateCourseOverview = async (course, content) => {\n    const contentJSON = JSON.stringify(content);\n\n    const updateObject = {\n        overview: contentJSON\n    }\n\n    return await updateCourse(course.id, updateObject);\n}\n\nexport const addNewChapter = async (course, newChapterInfo) => {\n    const chapter = {}\n    chapter.title = newChapterInfo.title;\n    chapter.description = newChapterInfo.description;\n    chapter.id = 0\n    chapter.lessonsRef = [];\n\n    if (course.chapters && course.chapters.length > 0) {\n        chapter.id = course.chapters.length;\n        course.chapters.push(chapter);\n    } else {\n        course.chapters = [];\n        course.chapters.push(chapter);\n    }\n\n    const updateObject = {\n        chapters: course.chapters\n    }\n\n    return await updateCourse(course.id, updateObject);\n\n}\n\nexport const updateLesson = async (course, chapterInfo, lessonInfo, add) => {\n    if (add) { // For initial lesson creation.\n        delete lessonInfo.id; // cuz undefined is not allowed\n        return await db.collection('Course').doc(course.id).collection('Lessons').add(lessonInfo)\n            .then(async lessonDoc => {\n                const lessonRef = db.doc(`Course/${course.id}/Lessons/${lessonDoc.id}`);\n                const chapters = course.chapters.map(chapter => {\n                    if (chapter === chapterInfo) {\n                        chapter.lessonsRef.push(lessonRef);\n                    }\n                    return chapter\n                });\n\n                const updateObject = {\n                    chapters\n                }\n                return await updateCourse(course.id, updateObject)\n            });\n    } else {\n        const lessonRef = db.doc(`Course/${course.id}/Lessons/${lessonInfo.id}`);\n        return await lessonRef.set(lessonInfo, { merge: true });\n    }\n}\n\nexport const deleteLesson = async (course, chapter, lesson) => {\n\n    const courseChapters = course.chapters.map( chapterInside => {\n        if (chapterInside.title === chapter.title ) {\n            const lessonsRefs = [];\n            chapterInside.lessonsRef.forEach( lessonRef => {\n                if (lessonRef.id !== lesson.id){\n                    lessonsRefs.push(lesson);\n                }\n            })\n            chapterInside.lessonsRef = lessonsRefs;\n\n            const lessons = []\n            chapterInside.lessons.forEach( lessonInside => {\n                if (lessonInside.id !== lesson.id){\n                    lessons.push(lesson);\n                }\n            })\n            chapterInside.lessons = lessons;\n        }\n        return chapterInside;\n    });\n\n\n    return await db.collection(`/Course/${course.id}/Lessons`).doc(lesson.id).delete().then(async result => {\n        return await updateCourse(course.id, {\n            chapters: courseChapters\n        });\n    });\n  \n}\n\n\n/*\n* -----------------------------------------------------------\n*  Login Functions\n* -----------------------------------------------------------\n*/\n\nexport const logUserInUser = async (isGoog) => {\n    let provider;\n    isGoog ? provider = new firebase.auth.GoogleAuthProvider() :\n        provider = new firebase.auth.FacebookAuthProvider();\n    let users = [];\n    let currentUser = undefined;\n    let authUser = undefined;\n    // Get all users so we can see if the logged in one is one of ours.\n    // TODO(jessi): store this data so we don't need to fetch it, or directly ask for the user\n    // once they log in and if no user exists create one. Sounds like work.\n    await getAllUsers()\n        .then((queryResults) => {\n            queryResults.forEach((doc) => {\n                const user = doc.data();\n                user.id = doc.id;\n                users.push(user);\n            })\n        });\n\n    return await firebase.auth().signInWithPopup(provider).then(async function (result) {\n        authUser = result.user;\n        users.forEach(u => {\n            if (u.id === authUser.uid) {\n                currentUser = u;\n            }\n        });\n        // Didn't find an existing user.\n        if (currentUser === undefined) {\n            // Create new user\n            await createUser(authUser).then(async () => {\n                // Get the new user to return\n                return getCurrentUser();\n            }).catch(error => {\n                console.log(error);\n            });\n        }\n        return currentUser;\n    }).catch(function (error) {\n        console.log(error);\n    });\n}\n\nexport const signOut = async () => {\n    return await firebase.auth().signOut().then(function () {\n        document.cookie = 'userid=; expires=Thu, 01 Jan 1970 00:00:01 GMT;';\n        return true;\n    }).catch(function (error) {\n        console.log(error);\n        return false;\n    });\n}\n\n\n\n/*\n* -----------------------------------------------------------\n*  Utility Functions\n* -----------------------------------------------------------\n*/\n\nexport const getDocFromDocRef = docRef => {\n    return docRef.get()\n        .then(result => {\n            if (result.exists) {\n                const myResult = result.data();\n                myResult.id = result.id;\n                return myResult;\n            } else {\n                return null;\n            }\n        })\n}","import React from 'react';\nimport './CourseLibrary.css';\nimport {Button} from '@material-ui/core';\nimport CourseCard from '../CourseCard/CourseCard';\nimport { render } from '@testing-library/react';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Grid from '@material-ui/core/Grid';\nimport {AppBar, Toolbar, IconButton, Typography } from '@material-ui/core';\nimport SearchBar from './CourseLibraryToolbar/SearchBar/SearchBar.component';\nimport CourseLibraryMenu from './CourseLibraryToolbar/CourseLibraryToolbarMenu/CourseLibraryToolbarMenu.component'\nimport CourseLibraryToolbar from './CourseLibraryToolbar/CourseLibraryToolbar.component'\n\nimport * as FirebaseService from '../../service/firebase.service';\n\n\nclass CourseLibrary extends React.Component {\n  constructor(props) {\n    super(props);\n    // Bind Search\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n    this.handleSearchClicked = this.handleSearchClicked.bind(this);\n    // Bind Sort By\n    this.sortByClicked = this.sortByClicked.bind(this);\n    this.sortByHandleClose = this.sortByHandleClose.bind(this);\n    // Bind Topic\n    this.topicClicked = this.topicClicked.bind(this);\n    this.topicHandleClose = this.topicHandleClose.bind(this);\n    // Bind Organization\n    this.organizationClicked = this.organizationClicked.bind(this);\n    this.organizationHandleClosed = this.organizationHandleClosed.bind(this);\n\n    this.buildMenuItems = this.buildMenuItems.bind(this);\n    this.favoriteClicked = this.favoriteClicked.bind(this);\n    this.removeFavoriteClicked = this.removeFavoriteClicked.bind(this);\n    this.state = {\n      searchValue: \"\",\n      sortByElement: null,\n      topicElement: null,\n      organizationElement: null,\n      sortFilterValue: null,\n      topicFilterValue: null,\n      organizationFilterValue:null,\n      activeCourses: props.courses\n    }\n    props.routeClicked(\"Course Library\");\n  }\n\n  /** Search Function */\n  handleSearchChange(e){\n    const searchValue = e.target.value;\n    const searchValueLowerCase = searchValue.toLowerCase();\n    const activeCourses = this.props.courses.filter(course => \n      ( course.title?.toLowerCase().includes(searchValueLowerCase) \n      || course.description?.toLowerCase().includes(searchValueLowerCase) \n      || course.owner.displayName?.toLowerCase().includes(searchValueLowerCase) \n      ))\n    this.setState({\n      searchValue,\n      activeCourses\n    })\n  }\n\n  handleSearchClicked(e){\n  }\n\n  /** Sort By Functions */\n  sortByClicked = event => {\n    this.setState({\n      sortByElement: event.currentTarget\n    });\n  };\n\n  sortByHandleClose = (value) => {\n    this.setState({\n      sortByElement: null,\n      sortFilterValue: value\n    });\n  };\n\n\n  /** Topic Functions */\n  topicClicked = event => {\n    this.setState({\n      topicElement: event.currentTarget\n    });\n  };\n\n  topicHandleClose = (value) => {\n    this.setState({\n      topicElement: null,\n      topicFilterValue: value\n    });\n  };\n\n  /** Organization functions */\n  organizationClicked = event => {\n    this.setState({\n      organizationElement: event.currentTarget\n    });\n  };\n\n  organizationHandleClosed = (value) => {\n    this.setState({\n      organizationElement: null,\n      organizationFilterValue: value\n    });\n  };\n\n  async favoriteClicked(course) {\n    await FirebaseService.favoriteCourse(this.props.user, course);\n    this.props.updateUser(this.props.user.id)\n  }\n\n  async removeFavoriteClicked(course){\n    await FirebaseService.removeFavoriteCourse(this.props.user, course);\n    this.props.updateUser(this.props.user.id)\n\n  }\n\n  buildMenuItems = () => {\n    const sortByInfo = {\n      buttonText: \"Sort By\",\n      menuId: \"menu-sort-by\",\n      clickedFunction: this.sortByClicked,\n      closeFunction: this.sortByHandleClose,\n      element: this.state.sortByElement,\n      radioGroupName: \"menuRadio\",\n      menuValue: this.state.sortFilterValue,\n      menuOptions: [\n        {\n          display: \"Newest\",\n          associatedClickFunction:  this.sortByHandleClose\n        },\n        {\n          display: \"Recommended\",\n          associatedClickFunction:  this.sortByHandleClose\n        },\n        {\n          display: \"Trending\",\n          associatedClickFunction:  this.sortByHandleClose\n        }\n      ]\n    }\n\n    const topicInfo = {\n      buttonText: \"Topic\",\n      menuId: \"menu-topic\",\n      clickedFunction: this.topicClicked,\n      element: this.state.topicElement,\n      closeFunction: this.topicHandleClose,\n      radioGroupName: \"topicRadio\",\n      menuValue: this.state.topicFilterValue,\n      menuOptions: [\n        {\n          display: \"Science\",\n          associatedClickFunction:  this.topicHandleClose\n        },\n        {\n          display: \"Technology\",\n          associatedClickFunction:  this.topicHandleClose\n        },\n        {\n          display: \"History\",\n          associatedClickFunction:  this.topicHandleClose\n        },\n        {\n          display: \"Arts\",\n          associatedClickFunction:  this.topicHandleClose\n        }\n      ]\n    }\n\n    const organizationInfo = {\n      buttonText: \"Organization\",\n      menuId: \"menu-organization\",\n      clickedFunction: this.organizationClicked,\n      element: this.state.organizationElement,\n      closeFunction: this.organizationHandleClosed,\n      radioGroupName: \"organizationRadio\",\n      menuValue: this.state.organizationFilterValue,\n      menuOptions: [\n        {\n          display: \"Required\",\n          associatedClickFunction:  this.organizationHandleClosed\n        },\n        {\n          display: \"Recommended\",\n          associatedClickFunction:  this.organizationHandleClosed\n        },\n        {\n          display: \"All Courses\",\n          associatedClickFunction:  this.organizationHandleClosed\n        }\n      ]\n    }\n\n    return [sortByInfo, topicInfo, organizationInfo];\n  }\n\n  isCourseAFavorite = (user, course) => {\n    \n    if( user.favoritedCourses && user.favoritedCourses.length > 0 ){\n      return user.favoritedCourses\n        .find(favoritedCourse => favoritedCourse.id === course.id);\n    }\n    return false;\n  }\n\n\n  render() {\n    // Mappings\n    const menuItems = this.buildMenuItems();\n    const favoriteClicked = this.favoriteClicked;\n    const isCourseAFavorite = this.isCourseAFavorite;\n    const removeFavoriteClicked = this.removeFavoriteClicked\n\n    const user = this.props.user;\n    const searchInfo = {\n      value: this.state.searchValue,\n      onChange: this.handleSearchChange,\n      onClick: this.handleSearchClicked\n    }\n    let listItems = []\n    if (user) {\n\n      listItems = this.state.activeCourses.map(function(item) {\n        return (\n            <Grid item s={4}>\n              <CourseCard course={item} favoriteClicked={favoriteClicked} removeFavoriteClicked={removeFavoriteClicked} isCourseAFavorite={isCourseAFavorite(user, item)}></CourseCard>\n            </Grid>\n        );\n      });\n    }\n    \n    return (\n      <div class=\"course-library\">\n        <CourseLibraryToolbar menuItems={menuItems} searchInfo={searchInfo}></CourseLibraryToolbar>\n          <div className=\"course-list\">\n          <Grid container spacing={3}>\n            {listItems}\n          </Grid>\n          </div>\n      </div>\n\n      );\n  }\n}\n\nexport default CourseLibrary;\n","import React from 'react';\nimport './Login.css';\nimport { Button } from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { withRouter, Redirect } from \"react-router-dom\";\nimport * as FirebaseService from '../../service/firebase.service';\n\nclass LoginPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { redirectToReferrer: false };\n    this.loginGoogle = this.loginGoogle.bind(this);\n    this.loginFacebook = this.loginFacebook.bind(this);\n\n  }\n\n  async loginGoogle(event) {\n    // TODO(jessi): set a loading state\n    await FirebaseService.logUserInUser(/* isGoog= */ true).then(u => {\n      this.props.completeLogin(u);\n      this.props.history.push(\"/courseLibrary\");\n      this.setState({ redirectToReferrer: true });\n    });\n    // TODO(jessi): unset loading state\n  }\n\n  async loginFacebook(event) {\n    // TODO(jessi): set a loading state\n    await FirebaseService.logUserInUser(/* isGoog= */ false).then(u => {\n      this.props.completeLogin(u);\n      this.props.history.push(\"/courseLibrary\");\n      this.setState({ redirectToReferrer: true });\n    });\n    // TODO(jessi): unset loading state\n  }\n\n  render() {\n    // Show loading screen while we load the user.\n    if (this.props.loadingUser) {\n      return (\n        <div>\n          Loading..\n          <CircularProgress></CircularProgress>\n        </div>\n      )\n    }\n\n    // Redirect if logged in or complete login.\n    const { from } = this.props.location.state || { from: { pathname: '/' } }\n    const { redirectToReferrer } = this.state\n    if (redirectToReferrer === true || this.props.user) {\n      return <Redirect to={from} />\n    }\n\n\n    // TODO(jessi): style these buttons\n    return (\n      <div className=\"login\">\n        <h1>Sign into Mooc in a Box</h1>\n        <Button color=\"inherit\" className=\"menu-button\" onClick={this.loginFacebook}>\n          Sign in with Facebook\n      </Button>\n        <Button color=\"inherit\" className=\"menu-button\" onClick={this.loginGoogle}>\n          Sign in with Google\n      </Button>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(LoginPage);\n","import React, { useState } from 'react';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport { Button } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\n\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Grid from '@material-ui/core/Grid';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { IconButton } from '@material-ui/core';\nimport './CoursesDropdown.css';\n\nfunction CoursesDropdownComponent(props) {\n  return (\n    <ExpansionPanel>\n      <ExpansionPanelSummary\n        expandIcon={<ExpandMoreIcon />}\n        aria-controls=\"panel1a-content\"\n        id=\"panel1a-header\"\n      >\n        <Typography variant=\"subtitle2\">{props.courses.length} Course(s)</Typography>\n      </ExpansionPanelSummary>\n      <ExpansionPanelDetails>\n        <Grid container spacing={2}>\n          <Grid item xs={12} md={6}>\n            <div>\n              <List dense=\"true\">\n                {\n                  props.courses.map(course => {\n                    return (\n                      <span>\n                        <ListItem\n                        >\n                          <Button id=\"course-link\"\n                            component={RouterLink}\n                            to={`/courseOverview/${course.id}`}\n                          >\n                            {course.title}\n                          </Button>\n                          {props.includeEditIcon &&\n                            <IconButton id=\"edit-button\"\n                              className=\"menu-button\"\n                              color=\"inherit\"\n                              aria-label=\"menu\"\n                              component={RouterLink}\n                              to={`/editCourse/${course.id}`}\n                            >\n                              <EditIcon />\n                            </IconButton>\n                          }\n                        </ListItem>\n                      </span>\n\n                    )\n                  })\n                }\n              </List>\n            </div>\n          </Grid>\n        </Grid>\n      </ExpansionPanelDetails>\n    </ExpansionPanel>\n  )\n}\n\nexport default CoursesDropdownComponent;\n","import React, { useState } from 'react';\nimport './MyCourses.css';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport { Button } from '@material-ui/core';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Link } from 'react-router-dom'\n\nimport EditIcon from '@material-ui/icons/Edit';\nimport { IconButton } from '@material-ui/core';\n\nimport CoursesDropdownComponent from '../CoursesDropdown/CoursesDropdown.component';\n\n\n\n/**\n * \n * http://localhost:3000/courseOverview/rlfxOavBn4nPZLNTRMkL\n * http://localhost:3000/courseOverview/rlfxOavBn4nPZLNTRMkL\n */\n\n\nfunction generate(element) {\n  return React.cloneElement(element, {\n    key: element,\n  })\n}\n\nfunction CurrentCoursesComponent(props) {\n  let numberOfCourses = props.currentCourses.length;\n\n  return (\n    <div>\n      <h2> Current Courses </h2>\n      <CoursesDropdownComponent courses={props.currentCourses}></CoursesDropdownComponent>\n    </div>\n  )\n}\n\n\nfunction PastCoursesComponent(props) {\n  return (\n    <div>\n      <h2> Past Courses </h2>\n      <CoursesDropdownComponent courses={props.pastCourses}></CoursesDropdownComponent>\n    </div>\n  )\n}\n\nfunction SavedCoursesComponent(props) {\n  return (\n    <div>\n      <h2> Favorited Courses </h2>\n      <CoursesDropdownComponent courses={props.savedCourses}></CoursesDropdownComponent>\n    </div>\n  )\n}\n\nfunction CreatedCoursesComponent(props) {\n  return (\n    <div>\n      <h2> Created Courses </h2>\n      <CoursesDropdownComponent courses={props.createdCourses} includeEditIcon={true}></CoursesDropdownComponent>\n    </div>\n  )\n}\n\n\n\nfunction MyCourses(props) {\n\n  const [user, setUser] = useState();\n  props.routeClicked(\"My Courses\");\n\n\n  React.useEffect(() => {\n    setUser(props.user);\n  }, [props]);\n\n\n  if (user) {\n    const courseComponentList = []\n    let hasCourses = false;\n\n\n    if (user.currentCourses && user.currentCourses.length > 0) {\n      const element = <CurrentCoursesComponent currentCourses={user.currentCourses}></CurrentCoursesComponent>\n      courseComponentList.push(element);\n      hasCourses = true;\n    }\n\n    if (user.pastCourses && user.pastCourse.length > 0) {\n      const element = <PastCoursesComponent pastCourses={user.pastCourses}></PastCoursesComponent>\n      courseComponentList.push(element);\n      hasCourses = true;\n\n    }\n\n    if (user.favoritedCourses && user.favoritedCourses.length > 0) {\n      const element = <SavedCoursesComponent savedCourses={user.favoritedCourses}></SavedCoursesComponent>\n      courseComponentList.push(element);\n      hasCourses = true;\n\n    }\n\n    if (user.createdCourses && user.createdCourses.length > 0) {\n      const element = <CreatedCoursesComponent createdCourses={user.createdCourses}></CreatedCoursesComponent>\n      courseComponentList.push(element);\n      hasCourses = true;\n\n    }\n    if (hasCourses) {\n      return (\n        <div className=\"MyCourses\">\n          <CssBaseline />\n          <Container maxWidth=\"lg\">\n            <Paper className=\"paper\">\n              {\n                courseComponentList.map(element => element)\n              }\n            </Paper>\n          </Container>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"MyCourses\">\n          <CssBaseline />\n          <Container maxWidth=\"lg\">\n            <Paper className=\"paper\">\n              <h4>You don't have any courses saved yet!</h4>\n            </Paper>\n          </Container>\n        </div>\n      )\n    }\n\n\n  } else {\n    return (\n      <div>\n        Loading..\n        <CircularProgress></CircularProgress>\n      </div>\n    )\n  }\n\n}\n\nexport default MyCourses;\n","import React from 'react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Button } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\n\nfunction EditDialog(props) {\n  return (\n    <div>\n      <Dialog open={props.isOpen} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">{props.field}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Edit the Field below to update your {props.field}\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label={props.field}\n            value={props.value}\n            onChange={props.onChange}\n            type=\"email\"\n            color=\"secondary\"\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.handleClose} color=\"secondary\">\n            Cancel\n            </Button>\n          <Button onClick={props.handleSubmit} color=\"secondary\">\n            Submit\n            </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n\nexport default EditDialog","import React from 'react';\n\n\nimport Typography from '@material-ui/core/Typography';\nimport { IconButton } from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport EditDialog from '../EditDialog/EditDialog.component';\n\nconst userKeyToDisplayMap = {\n    \"displayName\": \"Display Name\",\n    \"email\": \"Email Address\",\n    \"password\": \"Password\"\n  }\n\nfunction UserProfileSection(props){\n    function getEditIconIfNecessary(){\n      return props.isEditable ? \n        <IconButton className=\"menu-button\" color=\"inherit\" aria-label=\"menu\">\n          <EditIcon onClick={props.openDialog}/>\n        </IconButton>\n        :\n        <div></div>\n    }\n\n\n    return (\n      <div>\n        <Typography align=\"center\" variant=\"h6\" component=\"h6\">\n          <strong>{props.displayValue}</strong>\n        </Typography>\n        <Typography align=\"center\" variant=\"body1\" component=\"body1\">\n          <span>\n            {props.value}\n            {getEditIconIfNecessary()}\n          </span>\n        </Typography>\n        <EditDialog \n          isOpen={props.isDialogOpen}\n          handleClose={props.handleClose}\n          handleSubmit={props.handleSubmit}\n          field={userKeyToDisplayMap[props.displayKey]}\n          value={props.value}\n          onChange={props.onChange}\n        />\n      </div>\n    )\n}\n\nexport default UserProfileSection\n  ","import React, { useState } from 'react';\nimport './UserProfile.css';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport Divider from '@material-ui/core/Divider';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport UserProfileSection from './UserProfileSection/UserProfileSection.component';\nimport { Button } from '@material-ui/core';\nimport { withRouter } from \"react-router-dom\";\nimport * as FirebaseService from '../../service/firebase.service';\n\nconst passwordValue = \"*******\";\n\nfunction UserProfile(props) {\n\n\n  const [displayName, setDisplayName] = useState(null);\n  const [oldDisplayName, setOldDiplayName] = useState(null);\n  const [error, setError] = useState();\n  const [isDisplayNameDialogOpen, setIsDisplayNameDialogOpen] = useState(false)\n  const [userInterests, setUserInterests] = useState(null);\n  const [oldUserInterests, setOldUserInterests] = useState(null);\n  const [isUserInterestsDialogOpen, setIsUserInterestsDialogOpen] = useState(false);\n\n  props.routeClicked(\"User Profile\");\n\n\n\n  function handleDisplayNameClose() {\n    setDisplayName(oldDisplayName)\n    setIsDisplayNameDialogOpen(false)\n  }\n\n  function handleDisplayNameSubmit() {\n    FirebaseService.updateUser(props.user.id, {\n      displayName\n    }).then(result => {\n      setIsDisplayNameDialogOpen(false)\n      setOldDiplayName(displayName)\n      props.updateUser(props.user.id);\n\n    })\n      .catch(err => {\n        console.log(err);\n      })\n  }\n\n  function openDisplayNameDialog() {\n    setOldDiplayName(displayName)\n    setIsDisplayNameDialogOpen(true)\n  }\n\n  function onDisplayNameChange(e) {\n    setDisplayName(e.target.value);\n  }\n\n  /**\n   * Begin User Interests\n   */\n  function handleUserInterestsDialogClose() {\n    setUserInterests(oldUserInterests)\n    setIsUserInterestsDialogOpen(false)\n  }\n\n  function openUserInterestDialog() {\n    setOldUserInterests(userInterests)\n    setIsUserInterestsDialogOpen(true)\n  }\n\n  function onUserInterestsChange(e) {\n    setUserInterests(e.target.value);\n  }\n\n  function handleUserInterestSubmit() {\n    FirebaseService.updateUser(props.user.id, {\n      interests: userInterests\n    }).then(result => {\n      setIsUserInterestsDialogOpen(false)\n      setUserInterests(userInterests)\n      props.updateUser(props.user.id);\n    })\n      .catch(err => {\n        console.log(err);\n      })\n  }\n\n  async function signOut() {\n    await FirebaseService.signOut().then((res) => {\n      if (res) {\n        props.history.push(\"/\");\n        props.updateUser(undefined);\n      }\n      // TODO(jessi) handle error\n    });\n  }\n\n  async function deleteAccount() {\n    await FirebaseService.deleteUser().then((res) => {\n      if (res) {\n        props.history.push(\"/\");\n        props.updateUser(undefined);\n      }\n      // TODO(jessi) handle error\n    });\n  }\n\n  if (props.user && displayName === null && userInterests === null) {\n    setDisplayName(props.user.displayName)\n    setUserInterests(props.user.interests)\n  }\n\n  if (props.user) {\n    return (\n      <div className=\"userProfile\">\n        <CssBaseline />\n        <Container className=\"userProfile-bottom-padding\" maxWidth=\"lg\">\n          <Paper className=\"paper\">\n\n            <UserProfileSection\n              isEditable={true}\n              displayValue=\"User Interests\"\n              value={userInterests}\n              handleClose={handleUserInterestsDialogClose}\n              handleSubmit={handleUserInterestSubmit}\n              isDialogOpen={isUserInterestsDialogOpen}\n              openDialog={openUserInterestDialog}\n              onChange={onUserInterestsChange}\n              isEditable={true}\n            ></UserProfileSection>\n\n          </Paper>\n        </Container>\n        <Divider />\n\n\n        <Container maxWidth=\"lg\">\n          <Paper className=\"paper\">\n\n            <UserProfileSection\n              isEditable={true}\n              displayValue=\"Display Name\"\n              value={displayName}\n              handleClose={handleDisplayNameClose}\n              handleSubmit={handleDisplayNameSubmit}\n              isDialogOpen={isDisplayNameDialogOpen}\n              openDialog={openDisplayNameDialog}\n              onChange={onDisplayNameChange}\n            />\n            <Divider />\n            <UserProfileSection\n              isEditable={false}\n              displayValue=\"Email\"\n              value={props.user.email}\n            />\n            <Divider />\n            <div className=\"logout-btns\">\n              <Button color=\"inherit\" className=\"menu-button\" onClick={signOut}>\n                Sign out\n              </Button>\n              <Button color=\"inherit\" className=\"menu-button\" onClick={deleteAccount}>\n                Delete account\n              </Button>\n            </div>\n          </Paper>\n        </Container>\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        Loading..\n        <CircularProgress></CircularProgress>\n      </div>\n    )\n  }\n\n}\n\nexport default withRouter(UserProfile);\n","import React, { useState, useEffect } from 'react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Input from '@material-ui/core/Input';\nimport { Button, Divider } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport { Editor } from 'react-draft-wysiwyg';\nimport { EditorState, convertFromRaw, convertToRaw, RichUtils } from 'draft-js';\nimport '../../../../node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport './CreateCourseDialog.css'\n\n\nfunction CreateCourseDialog(props) {\n  const [description, setDescription] = useState(props.course?.description);\n  const [title, setTitle] = useState(props.course?.title);\n  const [editorState, setEditorState] = useState();\n  const [overview, setOverview] = useState(props.course?.overview);\n  const [isTitleError, setIsTitleError] = useState(false);\n  const [isDescriptionError, setIsDescriptionError] = useState(false);\n  const [thumbnailFile, setThumbnailFile] = useState();\n\n\n\n  function onCourseTitleChange(e) {\n    setTitle(e.target.value);\n  }\n\n  function onCourseDescriptionChange(e) {\n    setDescription(e.target.value);\n\n  }\n\n  function onEditorStateChange(editorState) {\n    setEditorState(editorState);\n  };\n\n  function onFileUploadChange({ target }) {\n    console.log(\"Upload happened\");\n    // const fileReader = new FileReader();\n    // const name = target.accept.includes('image') ? 'images' : 'videos';\n    const file = target.files[0];\n    setThumbnailFile(file);\n  }\n\n\n  function handleKeyCommand(command) {\n    const newState = RichUtils.handleKeyCommand(editorState, command);\n    if (newState) {\n      setEditorState(newState);\n      setOverview(convertToRaw(newState.getCurrentContent()));\n\n      return 'handled';\n    }\n    return 'not-handled';\n  };\n\n  function isValidTitle() {\n    if (title && title.length > 0) {\n      setIsTitleError(false)\n      return true;\n    } else {\n      setIsTitleError(true);\n      return false;\n    }\n\n  }\n\n  function isValidDescription() {\n    if (description && description.length > 0) {\n      setIsDescriptionError(false)\n      return true;\n    } else {\n      setIsDescriptionError(true);\n      return false;\n    }\n  }\n\n  function handleSubmit() {\n\n    const titleIsGood = isValidTitle();\n    const descriptionIsGood = isValidDescription();\n\n    if (titleIsGood && descriptionIsGood) {\n      const currentContentState = editorState.getCurrentContent();\n      setOverview(convertToRaw(currentContentState));\n\n      const courseDetails = {\n        title,\n        description,\n        overview: convertToRaw(currentContentState),\n        thumbnailFile\n      }\n      props.handleSubmit(courseDetails);\n    }\n  }\n\n  function handleClose() {\n    setIsTitleError(false)\n    setIsDescriptionError(false)\n    setDescription(props.course?.description)\n    setTitle(props.course?.title)\n    setOverview(props.course?.overview)\n    props.handleClose();\n  }\n\n  useEffect(() => {\n    if (overview) {\n      setEditorState(EditorState.createWithContent(convertFromRaw(JSON.parse(overview))));\n    }\n    else {\n      setEditorState(EditorState.createEmpty());\n    }\n  }, []);\n\n  return (\n    <div>\n      <Dialog open={props.isOpen} onClose={handleClose} aria-labelledby=\"form-dialog-title\" maxWidth=\"md\">\n        <DialogTitle id=\"form-dialog-title\">\n          {\n            props.course ? \"Edit Course\" : \"Create A New Course\"\n          }\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            {\n              props.course ?\n                \"Edit the existing course's title, display card, or overview.\"\n                :\n                \"Create a new course. Start by entering at least the title and description below.\"\n            }\n          </DialogContentText>\n          <TextField\n            autoFocus\n            required\n            error={isTitleError}\n            margin=\"normal\"\n            id=\"title\"\n            label=\"Course Title\"\n            onChange={onCourseTitleChange}\n            type=\"text\"\n            color=\"secondary\"\n            value={title}\n            fullWidth\n          />\n\n          <Divider />\n\n          <h3 class=\"section-heading\">Course Card</h3>\n          <span id=\"thumbnail-span\">\n            <p id=\"thumbnail-text\">Course Thumbnail</p>\n            <Input\n              label=\"Upload Course Thumbnail\"\n              type=\"file\"\n              onChange={onFileUploadChange}\n            >\n            </Input>\n          </span>\n          <TextField\n            margin=\"normal\"\n            id=\"description\"\n            error={isDescriptionError}\n            label=\"Course Description\"\n            required\n            onChange={onCourseDescriptionChange}\n            helperText=\"This field is shown under the thumbnail\"\n            type=\"text\"\n            color=\"secondary\"\n            value={description}\n            fullWidth\n          />\n\n          <Divider />\n\n          <h3 class=\"section-heading\">Course Overview</h3>\n          <div className=\"course-overview-section\">\n            <Editor\n              editorState={editorState}\n              editorClassName=\"editor-textbox\"\n              handleKeyCommand={handleKeyCommand}\n              onEditorStateChange={onEditorStateChange}\n              label=\"Course Overview\"\n            />\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"secondary\">\n            Cancel\n            </Button>\n          <Button onClick={handleSubmit} color=\"secondary\">\n            Submit\n            </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n\nexport default CreateCourseDialog","import React, { useState } from 'react';\nimport './CreateCourse.css';\nimport { Button } from '@material-ui/core';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport Divider from '@material-ui/core/Divider';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { withRouter } from \"react-router-dom\";\nimport * as FirebaseService from '../../service/firebase.service';\nimport CreateCourseDialog from './CreateCourseDialog/CreateCourseDialog.component';\nimport CoursesDropdownComponent from '../CoursesDropdown/CoursesDropdown.component';\nimport { useHistory } from \"react-router-dom\";\n\n\nfunction CreatedCoursesComponent(props) {\n\n  return (\n    <div className=\"courses-section\">\n      <h2> Courses You've Created </h2>\n      <CoursesDropdownComponent courses={props.createdCourses} includeEditIcon={true}></CoursesDropdownComponent>\n    </div>\n  )\n}\n\nfunction CreateCourse(props) {\n  const [isCreateCourseDialogOpen, setIsCreateCourseDialogOpen] = useState(false);\n  const history = useHistory();\n\n  props.routeClicked(\"Create Course\");\n\n\n  function handleCreateCourseDialogClose() {\n    setIsCreateCourseDialogOpen(false);\n  }\n\n  function openCreateCourseDialog() {\n    setIsCreateCourseDialogOpen(true);\n\n  }\n\n  async function handleSubmit(courseInfo) {\n    courseInfo.owner = props.user.id;\n\n    courseInfo.chapters = []\n\n    const response = await FirebaseService.createCourse(props.user, courseInfo)\n    setIsCreateCourseDialogOpen(false);\n    await props.updateCourses();\n    await props.updateUser(props.user.id);\n    // Navigate to Edit Course page\n    history.push(`/editCourse/${props.user.createdCoursesRefs[props.user.createdCoursesRefs.length - 1].id}`)\n  }\n\n  const hasCurrentCourses = false\n  let currnetCoursesSection = null;\n  if (props.user && props.user.createdCourses && props.user.createdCourses.length > 0) {\n    currnetCoursesSection = <CreatedCoursesComponent createdCourses={props.user.createdCourses}></CreatedCoursesComponent>\n  } else {\n    currnetCoursesSection = <h3>You have not created any courses</h3>\n  }\n\n\n  return (\n    <div className=\"CreateCourse\">\n      <CssBaseline />\n      <Container className=\"userProfile-bottom-padding\" maxWidth=\"lg\">\n        <Paper className=\"paper\">\n          {\n            currnetCoursesSection\n          }\n          <span>\n            <Button variant=\"contained\" color=\"secondary\" onClick={openCreateCourseDialog}>\n              Create New Course\n              </Button>\n          </span>\n        </Paper>\n      </Container>\n\n      <CreateCourseDialog\n        isOpen={isCreateCourseDialogOpen}\n        handleClose={handleCreateCourseDialogClose}\n        handleSubmit={handleSubmit}\n        user={props.user}\n      />\n\n\n    </div>\n  );\n}\n\nexport default CreateCourse;\n","import React, { useState, useEffect } from 'react';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { Button } from '@material-ui/core';\n\n\nimport './CourseChapterPanel.css';\n\nfunction CourseChapterPanel(props) {\n\n    function listItemClicked(lesson) {\n        props.setChapterInContext(props.chapter);\n        props.setActiveLesson(lesson);\n    }\n\n    let lessonItems = []\n\n    const lessonsLength = props.chapter?.lessons?.length;\n    if (lessonsLength > 0) {\n        lessonItems = props.chapter.lessons.map(lesson => {\n            const isActiveLesson = (lesson === props.activeLesson);\n\n            return (\n                <span>\n                    <ListItem selected={isActiveLesson} onClick={() => listItemClicked(lesson)} id={lesson.id} button>\n                        <ListItemText primary={lesson.title} />\n                    </ListItem>\n                </span>\n            )\n        });\n    } else {\n        lessonItems[0] = <ListItem> <ListItemText primary=\"No Lessons Added\" /> </ListItem>\n    }\n\n\n    function openLessonModal() {\n        props.setChapterInContext(props.chapter);\n        props.openLessonModal(/**addLesson=*/true);\n    }\n\n    let addNewLessonButton;\n\n    if (props.editable) {\n        addNewLessonButton = <Button variant=\"contained\" onClick={openLessonModal} color=\"secondary\" id=\"add-lesson\">Add New Lesson</Button>\n    }\n\n\n    return (\n        <ExpansionPanel\n            defaultExpanded={props.chapter === props.chapterInContext}\n        >\n            <ExpansionPanelSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"panel1a-content\"\n                id=\"panel1a-header\"\n            >\n                <Typography variant=\"subtitle2\">{props.chapter.title}</Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n\n                <List dense=\"true\" className=\"lessons-list\">\n                    {lessonItems}\n                    {addNewLessonButton}\n                </List>\n\n            </ExpansionPanelDetails>\n        </ExpansionPanel>\n    )\n}\n\nexport default CourseChapterPanel;","import React from 'react';\nimport './CourseNavigationPane.css';\nimport Paper from '@material-ui/core/Paper';\nimport { IconButton, Button } from '@material-ui/core';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\n\n\nimport CourseChapterPanel from './CourseChapterPanel/CourseChapterPanel.component';\n\n\n/**\n * Generate multiple function\n */\n\n\nfunction generate(element) {\n  return [0, 1, 2].map(value =>\n    React.cloneElement(element, {\n      key: value,\n    }),\n  );\n}\n\n\n\n\nfunction CourseNavigationPane(props) {\n\n  function setChapterInContext(chapter) {\n    props.setChapterInContext(chapter);\n  }\n\n  const courseOverviewClicked = () => {\n    props.setActiveLesson(undefined);\n    props.setChapterInContext(undefined);\n  }\n\n  const openDeleteDialog = (e) => {\n    props.openDeleteDialog(\"Course\", props.course);\n  }\n\n  let courseNavigationPanels = []\n  const chaptersLength = props.course?.chapters?.length;\n\n  if (chaptersLength > 0) {\n    courseNavigationPanels = props.course.chapters.map(chapter =>\n      <CourseChapterPanel editable={props.editable} setActiveLesson={props.setActiveLesson} activeLesson={props.activeLesson} openLessonModal={props.openLessonModal} chapterInContext={props.chapterInContext} setChapterInContext={setChapterInContext} chapter={chapter} />\n    )\n  }\n\n  let addNewChapterButton;\n  let deleteCourseButton;\n  if (props.editable) {\n    addNewChapterButton = <Button id=\"new-chapter\" variant=\"contained\" onClick={props.openCreateChapterDialog} color=\"secondary\"> Add New Chapter </Button>\n    deleteCourseButton = <IconButton id=\"delete-button\" onClick={openDeleteDialog}> <DeleteForeverIcon /> </IconButton>\n  }\n\n\n  return (\n    <Paper className=\"paper\">\n      <span>\n        <Button id=\"course-overview\" size=\"medium\"\n          onClick={courseOverviewClicked}>\n          {props.course.title}\n        </Button>\n        {deleteCourseButton}\n        <br />\n      </span>\n      {courseNavigationPanels}\n      {addNewChapterButton}\n    </Paper>\n  )\n}\n\nexport default CourseNavigationPane;","import React, { useState } from 'react';\nimport YouTube from 'react-youtube';\nimport { IconButton, Button, Typography } from '@material-ui/core';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport { Editor } from 'react-draft-wysiwyg';\nimport { EditorState, convertFromRaw, ContentState } from \"draft-js\";\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport './CourseLesson.css';\n\n// Youtube Constants\n\nconst YoutubeComponentConfig = {\n    opts: {\n        height: '390',\n        width: '640',\n        playerVars: {\n            autoplay: 0,\n        },\n    },\n    videoId: \"BKorP55Aqvg\"\n\n}\n\n\nfunction EditCourseLesson(props) {\n\n    let hasYoutubeVideo = false;\n\n    function _onReady(event) {\n        // access to player in all event handlers via event.target\n        event.target.pauseVideo();\n    }\n\n\n    function openDeleteDialog(e) {\n        props.openDeleteDialog(\"Lesson\", props.lesson);\n    }\n\n\n    function goToPreviousLesson() {\n        props.navigateToPreviousLesson(props.lesson);\n    }\n\n    function goToNextLesson() {\n        props.navigateToNextLesson(props.lesson);\n    }\n\n    function getButtonDiv() {\n        if (props.isFirstLesson && props.isLastLesson) {\n            return '';\n        }\n\n        let leftButton, rightButton;\n\n        if (props.nextLesson || props.nextChapter) {\n            leftButton =\n                <Button variant=\"contained\" onClick={goToNextLesson} className=\"next-button\" color=\"secondary\" endIcon={<ArrowForwardIosIcon />}>\n                    {props.nextLesson ? \"Next Lesson\" : \"Next Chapter\"}\n                </Button>\n        }\n\n        if (props.prevLesson || props.prevChapter) {\n            rightButton =\n                <Button variant=\"contained\" onClick={goToPreviousLesson} className=\"previous-button\" color=\"secondary\" startIcon={<ArrowBackIosIcon />}>\n                    {props.prevLesson ? \"Previous Lesson\" : \"Previous Chapter\"}\n                </Button>\n        }\n\n        return (\n            <div className=\"button-div\">\n                {leftButton}\n                {rightButton}\n            </div>\n        )\n    }\n\n    function getVideoConfig() {\n        const youtubeConfig = { ...YoutubeComponentConfig };\n        const url = props.lesson?.video;\n        if (url && url.includes(\"youtube\") && (url.includes(\"v=\"))) {\n            const myParamters = url.split(\"?\");\n            var searchParams = new URLSearchParams(myParamters[1]);\n            youtubeConfig.videoId = searchParams.get('v');\n            hasYoutubeVideo = true;\n        }\n        return youtubeConfig;\n    }\n\n    function isJson(str) {\n        try {\n            JSON.parse(str);\n        } catch (e) {\n            return false;\n        }\n        return true;\n    }\n\n    let content = undefined;\n    if (props.lesson?.description && isJson(props.lesson.description)) {\n        const contentStateObj = JSON.parse(props.lesson.description);\n        const editorState = EditorState.createWithContent(convertFromRaw(contentStateObj));\n        content = <Editor\n            toolbarHidden\n            editorState={editorState}\n            readOnly={true}\n        />\n    }\n    else {\n        const text = props.lesson?.description ? props.lesson.description : \"No text entered.\";\n        content = <Editor\n            toolbarHidden\n            editorState={EditorState.createWithContent(ContentState.createFromText(text))}\n            readOnly={true}\n        />\n    }\n\n    if (props.lesson) {\n        const youtubeConfig = getVideoConfig();\n\n        return (\n            <div>\n                <div id=\"lesson-header\">\n                    <p id=\"class-title\"> {props.lesson.title} </p>\n                    {props.editable ?\n                        <IconButton id=\"delete-lesson\" onClick={openDeleteDialog}>\n                            <DeleteForeverIcon />\n                        </IconButton>\n                        :\n                        ''\n                    }\n                </div>\n                <div id=\"content\">\n                    {\n                        hasYoutubeVideo\n                            ?\n                            <YouTube videoId={youtubeConfig.videoId} opts={youtubeConfig.opts} onReady={_onReady} />\n                            :\n                            \"\"\n                    }\n                    {content}\n                    {getButtonDiv()}\n                </div>\n            </div>\n        )\n    } else {\n        return (\n            <div>\n                <h5> No Lesson Details </h5>\n            </div>\n        )\n    }\n}\n\nexport default EditCourseLesson;","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport CourseLesson from './CourseLesson/CourseLesson.component';\nimport { Button, IconButton } from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { Editor } from 'react-draft-wysiwyg';\nimport { EditorState, convertFromRaw, ContentState } from \"draft-js\";\n\nimport './CourseOverviewPane.css';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\n\nfunction CourseOverviewPane(props) {\n\n    let lessonArray = [];\n    for (let i = 0; i < props.course.chapters.length; i++) {\n        for (let j = 0; j < props.course.chapters[i].lessons?.length; j++) {\n            lessonArray.push(props.course.chapters[i].lessons[j]);\n        }\n    }\n\n    function navigateToNextLesson(lesson) {\n        const indexOfCurrentLesson = props.activeChapter.lessons.indexOf(lesson);\n        if (indexOfCurrentLesson !== props.activeChapter.lessons.length - 1) {\n            props.setActiveLesson(props.activeChapter.lessons[indexOfCurrentLesson + 1]);\n            return;\n        } else {\n            const activeChapterIndex = props.course.chapters.indexOf(props.activeChapter);\n            const nextChapter = props.course.chapters[activeChapterIndex + 1];\n            props.setChapterInContext(nextChapter);\n            props.setActiveLesson(nextChapter.lessons[0]);\n        }\n    }\n\n    function navigateToPreviousLesson(lesson) {\n        const indexOfCurrentLesson = props.activeChapter.lessons.indexOf(lesson);\n\n        if (indexOfCurrentLesson !== 0) {\n            props.setActiveLesson(props.activeChapter.lessons[indexOfCurrentLesson - 1]);\n            return;\n        } else {\n            const activeChapterIndex = props.course.chapters.indexOf(props.activeChapter);\n            const prevChapter = props.course.chapters[activeChapterIndex - 1];\n            props.setChapterInContext(prevChapter);\n            props.setActiveLesson(prevChapter.lessons[prevChapter.lessons.length - 1]);\n        }\n\n    }\n\n    function openLessonModal() {\n        props.openLessonModal(/**addLesson=*/false);\n    }\n\n\n    let openEditCourseOverviewDialogButton;\n    let editLessonButton;\n    if (props.editable) {\n        openEditCourseOverviewDialogButton = <Button onClick={props.openEditCourseOverviewDialog} color=\"secondary\" variant=\"contained\"> Edit Course Information </Button>\n        editLessonButton = <IconButton variant=\"contained\" onClick={openLessonModal} color=\"secondary\" id=\"edit-lesson\"> <EditIcon /> </IconButton>\n    }\n\n    let content = undefined;\n    if (props.course.overview) {\n        const contentStateObj = JSON.parse(props.course.overview);\n        const editorState = EditorState.createWithContent(convertFromRaw(contentStateObj));\n        content = <Editor\n            toolbarHidden\n            editorState={editorState}\n            readOnly={true}\n        />\n    }\n    else {\n        content = <Editor\n            toolbarHidden\n            editorState={EditorState.createWithContent(ContentState.createFromText(\"No text entered.\"))}\n            readOnly={true}\n        />\n    }\n\n    function getLessonInformation() {\n        let prevLesson, nextLesson, prevChapter, nextChapter = false;\n\n        if (props.activeLesson) {\n            const currentLessonIndex = lessonArray.indexOf(props.activeLesson);\n            const currentLessonIndexInChapter = props.activeChapter.lessons.indexOf(props.activeLesson);\n            const numLessonsInChapter = props.activeChapter.lessons.length;\n            const numChapters = props.course.chapters.length;\n            const activeChapterIndex = props.course.chapters.indexOf(props.activeChapter);\n\n            prevLesson = currentLessonIndexInChapter > 0;\n            nextLesson = currentLessonIndexInChapter < numLessonsInChapter - 1;\n            prevChapter = currentLessonIndexInChapter === 0 && currentLessonIndex > 0\n            nextChapter = currentLessonIndexInChapter === numLessonsInChapter - 1\n                && currentLessonIndex < lessonArray.length - 1\n                && activeChapterIndex !== numChapters - 1;\n        }\n\n        return [prevLesson, nextLesson, prevChapter, nextChapter]\n    }\n\n\n    let prevLesson, nextLesson, prevChapter, nextChapter = false;\n    if (props.activeLesson) {\n        [prevLesson, nextLesson, prevChapter, nextChapter] = getLessonInformation();\n    }\n\n    return (\n        <Paper className=\"paper\">\n            {props.activeChapter ?\n                <div>\n                    {editLessonButton}\n                    <CourseLesson\n                        navigateToNextLesson={navigateToNextLesson}\n                        navigateToPreviousLesson={navigateToPreviousLesson}\n                        prevLesson={prevLesson}\n                        nextLesson={nextLesson}\n                        prevChapter={prevChapter}\n                        nextChapter={nextChapter}\n                        lesson={props.activeLesson}\n                        editable={props.editable}\n                        openDeleteDialog={props.openDeleteDialog}\n                    />\n                </div> :\n                <div>\n                    {content}\n                    {openEditCourseOverviewDialogButton}\n                </div>\n            }\n        </Paper>\n    )\n}\n\nexport default CourseOverviewPane;","import React, { useState } from 'react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Button } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\n\nfunction CreateChapterDialog(props) {\n  const [description, setDescription] = useState();\n  const [title, setTitle] = useState();\n\n  function onCourseTitleChange(e) {\n    setTitle(e.target.value);\n  }\n\n  function onCourseDescriptionChange(e) {\n    setDescription(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    const chapterInfo = {\n      title,\n      description,\n    }\n\n    props.handleSubmit(chapterInfo);\n  }\n\n\n  return (\n    <div>\n      <Dialog open={props.isOpen} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Create New Chapter</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Create a new chapter within your course. Enter a title and description below.\n            </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"title\"\n            label=\"Chapter Title\"\n            onChange={onCourseTitleChange}\n            type=\"text\"\n            color=\"secondary\"\n            fullWidth\n          />\n          <TextField\n            margin=\"dense\"\n            id=\"description\"\n            label=\"Chapter Description\"\n            onChange={onCourseDescriptionChange}\n            type=\"text\"\n            color=\"secondary\"\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.handleClose} color=\"secondary\">\n            Cancel\n            </Button>\n          <Button onClick={handleSubmit} color=\"secondary\">\n            Submit\n            </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n\nexport default CreateChapterDialog","import React, { useState, useEffect } from 'react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Button } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport { Editor } from 'react-draft-wysiwyg';\nimport { EditorState, convertFromRaw, ContentState, convertToRaw, RichUtils } from \"draft-js\";\n\n// import './CreateLessonDialog.css';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\n\nfunction CreateLessonDialog(props) {\n  const [description, setDescription] = useState();\n  const [title, setTitle] = useState();\n  const [video, setVideo] = useState();\n  const [isDescriptionError, setIsDescriptionError] = useState(false);\n  const [isTitleError, setIsTitleError] = useState(false);\n  const [isYoutubeError, setIsYoutubeError] = useState(false);\n  const [editorState, setEditorState] = useState();\n\n  function onEditorStateChange(editorState) {\n    setEditorState(editorState);\n    const currentContentState = editorState.getCurrentContent();\n    setDescription(JSON.stringify(convertToRaw(currentContentState)));\n  };\n\n  function handleKeyCommand(command) {\n    const newState = RichUtils.handleKeyCommand(editorState, command);\n    if (newState) {\n      setEditorState(newState);\n      return 'handled';\n    }\n    return 'not-handled';\n  };\n\n  function onCourseTitleChange(e) {\n    setTitle(e.target.value);\n  }\n\n  function onVideoUrlChange(e) {\n    setVideo(e.target.value);\n  }\n\n  function isValidTitle() {\n    if (title && title.length > 0) {\n      setIsTitleError(false)\n      return true;\n    } else {\n      setIsTitleError(true);\n      return false;\n    }\n\n  }\n\n  function isValidDescription() {\n    if (description && (isJson(description) || description.length > 0)) {\n      setIsDescriptionError(false)\n      return true;\n    } else {\n      setIsDescriptionError(true);\n      return false;\n    }\n  }\n\n  function isValidYoutubeURL() {\n    if (video === undefined || video.length === 0) {\n      setIsYoutubeError(false);\n      return true;\n    } else if (video && video.includes(\"youtube\") && (video.includes(\"v=\"))) {\n      setIsYoutubeError(false);\n      return true;\n    } else {\n      setIsYoutubeError(true);\n      return false;\n    }\n  }\n\n  function handleSubmit(e) {\n    const id = props.lesson?.id ? props.lesson.id : undefined;\n\n    const currentContentState = editorState.getCurrentContent();\n    const descriptionJSON = JSON.stringify(convertToRaw(currentContentState));\n    setDescription(descriptionJSON);\n\n    let tempVideo = \"\";\n    if (isValidTitle() && isValidDescription() && isValidYoutubeURL()) {\n      if (video === undefined || video.length === 0) {\n        setVideo(\"\"); // So firebase won't die with undefined.\n      } else {\n        tempVideo = video;\n      }\n      const lessonInfo = {\n        id,\n        title,\n        description: descriptionJSON,\n        video: tempVideo,\n      }\n      props.updateLesson(lessonInfo, props.add);\n    }\n  }\n\n  function handleClose() {\n    // Reset State\n    setTitle();\n    setVideo();\n    setDescription();\n    setIsTitleError(false);\n    setIsDescriptionError(false);\n    setIsYoutubeError(false);\n    setEditorState(EditorState.createEmpty());\n    props.handleClose();\n  }\n\n  function isJson(str) {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n\n  useEffect(() => {\n    if (!props.add && props.lesson) {\n      setTitle(props.lesson.title);\n      setDescription(props.lesson.description);\n      setVideo(props.lesson.video);\n      if (props.lesson.description) {\n        if (isJson(props.lesson.description)) {\n          setEditorState(EditorState.createWithContent(convertFromRaw(JSON.parse(props.lesson.description))));\n        } else {\n          // For backwards compatibility\n          setEditorState(EditorState.createWithContent(ContentState.createFromText(props.lesson.description)));\n        }\n      }\n      else {\n        setEditorState(EditorState.createEmpty());\n      }\n    } else {\n      setTitle()\n      setDescription()\n      setVideo()\n      setEditorState(EditorState.createEmpty());\n    }\n\n  }, [props]);\n\n  return (\n    <div>\n      <Dialog open={props.isOpen} onClose={handleClose} aria-labelledby=\"form-dialog-title\" maxWidth=\"md\">\n        <DialogTitle id=\"form-dialog-title\">{props.add ? \"Create New\" : \"Edit\"} Lesson</DialogTitle>\n        <DialogContent>\n          {props.add ?\n            <DialogContentText>\n              Add a new lesson to your course\n            </DialogContentText>\n            :\n            <DialogContentText>\n              Edit existing lesson\n            </DialogContentText>\n          }\n\n          <TextField\n            autoFocus\n            required\n            margin=\"normal\"\n            error={isTitleError}\n            id=\"title\"\n            label=\"Lesson Title\"\n            onChange={onCourseTitleChange}\n            type=\"text\"\n            color=\"secondary\"\n            value={title}\n            helperText={isTitleError ? \"Title is a required field\" : \"\"}\n            fullWidth\n          />\n          <TextField\n            margin=\"normal\"\n            error={isYoutubeError}\n            id=\"video\"\n            label=\"Video URL (optional)\"\n            onChange={onVideoUrlChange}\n            type=\"text\"\n            color=\"secondary\"\n            value={video}\n            helperText={isYoutubeError ? \"Youtube URL is malformed. It must have the form: https://www.youtube.com?v=<SomeCharacterString>\" : \"\"}\n            fullWidth\n          />\n          <Editor\n            editorState={editorState}\n            wrapperClassName=\"editor-wrapper\"\n            editorClassName=\"editor-textbox\"\n            handleKeyCommand={handleKeyCommand}\n            onEditorStateChange={onEditorStateChange}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.handleClose} color=\"secondary\">\n            Cancel\n            </Button>\n          <Button onClick={handleSubmit} color=\"secondary\">\n            Submit\n            </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n\nexport default CreateLessonDialog","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default function DeleteDialog(props) {\n\n  const handleSubmit = () => {\n    props.handleSubmit();\n  }\n\n\n  return (\n    <div>\n      <Dialog\n        open={props.isOpen}\n        onClose={props.handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{`Delete ${props.deleteType}?`}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Are you sure you want to delete this {props.deleteType?.toLowerCase()}?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.handleClose} color=\"secondary\" autoFocus>\n            Cancel\n          </Button>\n          <Button onClick={handleSubmit} color=\"secondary\" >\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React, { useEffect, useState } from 'react';\nimport './CourseOverview.css';\nimport {\n    Link as RouterLink,\n    useParams,\n    useHistory\n} from \"react-router-dom\";\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { withRouter } from \"react-router-dom\";\nimport { Button } from '@material-ui/core';\nimport * as FirebaseService from '../../service/firebase.service';\nimport CourseNavigationPane from './CourseNavigationPane/CourseNavigationPane.component';\n\nimport CourseOverviewPane from './CourseOverviewPane/CourseOverviewPane.component';\nimport CreateChapterDialog from './Dialogs/CreateChapterDialog/CreateChapterDialog.component';\nimport CreateLessonDialog from './Dialogs/CreateLessonDialog/CreateLessonDialog.component';\nimport EditCourseOverviewDialog from './Dialogs/EditCourseOverviewDialog/EditCourseOverviewDialog.component';\nimport CreateCourseDialog from '../CreateCourse/CreateCourseDialog/CreateCourseDialog.component';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport DeleteDialog from './Dialogs/DeleteDialog/DeleteDialog.component';\n\n\n\n\nfunction CourseOverview(props) {\n    // Get ID from Route Params\n    let { id } = useParams();\n    // Create State Variables\n    const [course, setCourse] = useState();\n    const [error, setError] = useState();\n    const [isCreateChapterDialogOpen, setIsCreateChapterDialogOpen] = useState(false);\n    const [isCreateLessonDialogOpen, setIsCreateLessonDialogOpen] = useState(false);\n    const [isEditCourseOverviewDialogOpen, setIsEditCourseOverviewDialogOpen] = useState(false);\n    const [isDeleteDialogOpen, setIsDeleteDialogOpen] = useState(false);\n    const [chapterInContext, setChapterInContext] = useState();\n    const [activeLesson, setActiveLesson] = useState();\n    const [addLesson, setAddLesson] = useState();\n    const [deleteType, setDeleteType] = useState();\n    const [objToDelete, setObjToDelete] = useState();\n    const [isDeleting, setIsDeleting] = useState(false);\n    const history = useHistory();\n\n\n    props.routeClicked(\"Course Overview\");\n\n\n\n    function handleCreateChapterClose() {\n        setIsCreateChapterDialogOpen(false);\n    }\n\n    function openCreateChapterDialog() {\n        setIsCreateChapterDialogOpen(true);\n    }\n\n    function handleCreateLessonDialogClose() {\n        setIsCreateLessonDialogOpen(false);\n    }\n\n    function openCreateLessonDialog(addLesson) {\n        setAddLesson(addLesson);\n        setIsCreateLessonDialogOpen(true);\n    }\n\n    function handleEditCourseOverviewDialogClose() {\n        setIsEditCourseOverviewDialogOpen(false);\n    }\n\n    function openEditCourseOverviewDialog() {\n        setIsEditCourseOverviewDialogOpen(true);\n    }\n\n    function viewPublished() {\n        props.history.push(`/courseOverview/${course.id}`);\n    }\n\n    function openDeleteDialog(deleteType, objToDelete) {\n        setIsDeleteDialogOpen(true);\n        setDeleteType(deleteType);\n        setObjToDelete(objToDelete)\n    }\n\n    function handleCloseDeleteDialog() {\n        setIsDeleteDialogOpen(false);\n    }\n\n    async function handleDeleteSubmit() {\n\n        props.setDeletingCourse(true)\n\n        if (deleteType === 'Course') {\n            await FirebaseService.deleteCourse(objToDelete);\n            await props.updateCourses()\n            await props.updateUser(props.user.id);\n            history.push('/courseLibrary');\n\n        } else if (deleteType === 'Lesson') {\n\n            await FirebaseService.deleteLesson(course, chapterInContext, objToDelete);\n            setActiveLesson();\n            setChapterInContext();\n            await props.updateCourses();\n            await props.updateUser(props.user.id);\n        }\n\n        props.setDeletingCourse(false);\n\n    }\n\n    async function updateLesson(lessonInfo, add) {\n\n        await FirebaseService.updateLesson(course, chapterInContext, lessonInfo, add).then(() => {\n            getCourseById(id);\n            setAddLesson(add);\n            setIsCreateLessonDialogOpen(false);\n        }).catch((err) => { console.log(err) });\n    }\n\n    async function updateCourse(courseInfo) {\n        setIsEditCourseOverviewDialogOpen(false);\n        if (courseInfo.thumbnailFile === undefined) {\n            courseInfo.thumbnailFile = \"\";\n        }\n        await FirebaseService.updateCourse(course.id, courseInfo);\n        props.updateCourses();\n        getCourseById(id);\n    }\n\n    async function addNewChapter(chapterInfo) {\n        await FirebaseService.addNewChapter(course, chapterInfo);\n        getCourseById(id);\n        setIsCreateChapterDialogOpen(false);\n    }\n\n\n    async function resolveLessons(chapter) {\n        const lessonsRefLength = chapter.lessonsRef?.length;\n        if (lessonsRefLength > 0) {\n            return Promise.all(\n                chapter.lessonsRef.map(async lessonRef => {\n                    const lesson = await FirebaseService.getDocFromDocRef(lessonRef)\n                    return lesson;\n                })\n            ).then(results => {\n                chapter.lessons = results;\n                return chapter;\n            });\n\n        } else {\n            return Promise.resolve(chapter);\n        }\n    }\n\n    async function resolveChapters(chapters) {\n        return Promise.all(chapters.map(chapter => resolveLessons(chapter)))\n    }\n\n    async function getCourseById(id) {\n        const course = await FirebaseService.getCourseById(id);\n        course.chapters = await resolveChapters(course.chapters);\n        if (chapterInContext) {\n            const chapter = course.chapters.find(chapter => chapter.id === chapterInContext.id);\n            setChapterInContext(chapter);\n        }\n        setCourse(course);\n    }\n\n    useEffect(() => {\n        if (id && !props.isDeletingCourse) {\n            getCourseById(id);\n        }\n    }, []);\n\n    useEffect(() => {\n        // after adding/editing a lesson, ensure we navigate to the freshest version\n        if (course && chapterInContext) {\n            if (!addLesson) {\n                const updatedLesson = course.chapters[chapterInContext.id].lessons.find(lesson => {\n                    if (lesson.id === activeLesson.id) {\n                        return lesson;\n                    }\n                });\n                if (updatedLesson) {\n                    setActiveLesson(updatedLesson);\n                }\n            } else {\n                const lessons = course.chapters[chapterInContext.id].lessons;\n                setActiveLesson(lessons[lessons.length - 1]);\n            }\n        }\n    }, [course]);\n\n    let dialogs;\n    let viewPublishedCourseButton;\n    if (props.editable) {\n        dialogs = <div>\n            <CreateChapterDialog isOpen={isCreateChapterDialogOpen} handleSubmit={addNewChapter} handleClose={handleCreateChapterClose} />\n            <CreateLessonDialog\n                isOpen={isCreateLessonDialogOpen}\n                add={addLesson}\n                lesson={activeLesson}\n                updateLesson={updateLesson}\n                handleClose={handleCreateLessonDialogClose} />\n\n            <CreateCourseDialog\n                isOpen={isEditCourseOverviewDialogOpen}\n                handleClose={handleEditCourseOverviewDialogClose}\n                course={course}\n                handleSubmit={updateCourse}\n            />\n            <DeleteDialog\n                isOpen={isDeleteDialogOpen}\n                handleClose={handleCloseDeleteDialog}\n                handleSubmit={handleDeleteSubmit}\n                deleteType={deleteType}\n                objToDelete={objToDelete}\n            />\n        </div>\n\n        viewPublishedCourseButton = <Button variant=\"contained\" color=\"secondary\" id=\"view-published\" onClick={viewPublished}> View Published Course </Button>\n    }\n\n\n\n    if (course) {\n        return (\n            <div className=\"edit-course\">\n                <Grid container spacing={6}>\n                    <Grid item xs={3}>\n                        <CourseNavigationPane\n                            editable={props.editable}\n                            activeLesson={activeLesson}\n                            setActiveLesson={setActiveLesson}\n                            openLessonModal={openCreateLessonDialog}\n                            chapterInContext={chapterInContext}\n                            setChapterInContext={setChapterInContext}\n                            course={course}\n                            openCreateChapterDialog={openCreateChapterDialog}\n                            openDeleteDialog={openDeleteDialog}\n                        />\n                        {viewPublishedCourseButton}\n                    </Grid>\n                    <Grid item xs={9}>\n                        <CourseOverviewPane\n                            setActiveLesson={setActiveLesson}\n                            setChapterInContext={setChapterInContext}\n                            editable={props.editable}\n                            activeChapter={chapterInContext}\n                            activeLesson={activeLesson}\n                            course={course}\n                            openEditCourseOverviewDialog={openEditCourseOverviewDialog}\n                            openLessonModal={openCreateLessonDialog}\n                            openDeleteDialog={openDeleteDialog}\n                        />\n                    </Grid>\n                </Grid>\n                {dialogs}\n            </div>\n        );\n    } else {\n        return (\n            <div>\n                Loading...\n                <CircularProgress></CircularProgress>\n            </div>\n        )\n    }\n\n\n}\n\nexport default withRouter(CourseOverview);","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { AppBar, Toolbar, IconButton, Typography, Button, } from '@material-ui/core';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link as RouterLink,\n  Redirect,\n  withRouter,\n  browserHistory\n} from \"react-router-dom\";\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport CourseLibrary from './components/CourseLibrary/CourseLibrary';\nimport Login from './components/Login/Login';\nimport MyCourses from './components/MyCourses/MyCourses';\nimport UserProfile from './components/UserProfile/UserProfile';\nimport CreateCourse from './components/CreateCourse/CreateCourse.component';\nimport CourseOverview from './components/CourseOverview/CourseOverview.component';\nimport { MuiThemeProvider, ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nimport * as FirebaseService from '../src/service/firebase.service'\n\nconst buttonTheme = createMuiTheme({\n  palette: {\n    primary: { // peaches\n      main: '#87618c',\n    },\n    secondary: {  // purples\n      main: '#442b4a',\n    },\n  },\n  typography: {\n    useNextVariants: true\n  },\n  overrides: {\n    MuiButton: {\n      root: {\n        textTransform: 'none',\n      },\n    },\n  },\n});\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: { // peaches\n      light: '#f44336',\n      main: '#f6eee7',\n      dark: '#dbbca1',\n    },\n    secondary: {  // purples\n      light: '#a17da5',\n      main: '#87618c',\n      dark: '#442b4a',\n    },\n  },\n  typography: {\n    useNextVariants: true\n  },\n  overrides: {\n    MuiButton: {\n      root: {\n        textTransform: 'none',\n      },\n    },\n  },\n})\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      courses: [],\n      users: [],\n      currentUser: undefined,\n      loadingUser: true,\n      myCourseSelected: false,\n      allCoursesSelected: false,\n      createCourseSelected: false,\n      isDeletingCourse: false\n    };\n    this.fetchCourses = this.fetchCourses.bind(this);\n    this.fetchUsers = this.fetchUsers.bind(this);\n    this.render = this.render.bind(this);\n    this.updateUser = this.updateUser.bind(this);\n    this.setUser = this.setUser.bind(this);\n    this.getUserOnLoad = this.getUserOnLoad.bind(this);\n    this.routeClicked = this.routeClicked.bind(this);\n    this.deletingCourse = this.deletingCourse.bind(this);\n    this.fetchCourses().then(() => {\n      this.getUserOnLoad();\n    });\n  }\n\n  async updateUser(userId) {\n    if (!userId) {\n      this.setState({ currentUser: undefined });\n      this.setState({ loadingUser: false });\n      return;\n    }\n    await FirebaseService.getUserById(userId)\n      .then(result => {\n        const user = result.data();\n\n        if (user.createdCoursesRefs && user.createdCoursesRefs.length > 0) {\n\n          const newCourses = user.createdCoursesRefs\n            .map(courseRef => this.state.courses.find(course => course.id === courseRef.id));\n\n          user.createdCourses = user.createdCoursesRefs\n            .map(courseRef => this.state.courses.find(course => course.id === courseRef.id));\n        }\n\n        if (user.pastCoursesRefs && user.pastCoursesRefs.length > 0) {\n          user.pastCourses = user.pastCoursesRefs\n            .map(courseRef => this.state.courses.find(course => course.id === courseRef.id));\n        }\n\n        if (user.favoritedCoursesRefs && user.favoritedCoursesRefs.length > 0) {\n          user.favoritedCourses = user.favoritedCoursesRefs\n            .map(courseRef => this.state.courses.find(course => course.id === courseRef.id));\n        }\n\n        this.setState({ currentUser: user });\n        this.setState({ loadingUser: false });\n\n      })\n  }\n\n  deletingCourse(value) {\n    this.setState({\n      isDeletingCourse: value\n    }\n    )\n  }\n\n  getUserOnLoad() {\n    let user = FirebaseService.getCurrentUser();\n    if (user) {\n      this.updateUser(user.uid);\n    } else if (document.cookie.split(';').some((item) => item.trim().startsWith('userid='))) {\n      var cookieValue = document.cookie.replace(/(?:(?:^|.*;\\s*)userid\\s*\\=\\s*([^;]*).*$)|^.*$/, \"$1\");\n      this.updateUser(cookieValue);\n    } else {\n      this.updateUser(undefined);\n    }\n  }\n\n  setUser(user) {\n    this.updateUser(user.id);\n    document.cookie = `userid=${user.id}`;\n  }\n\n  async fetchCourses() {\n    let courses = [];\n    await FirebaseService.getAllCourses().then((queryResults) => {\n      queryResults.forEach((doc) => {\n        const course = doc.data();\n        const courseId = doc.id;\n        course.owner.get().then(user => {\n          course.owner = user.data();\n        })\n        course.id = courseId\n        courses.push(course);\n        this.setState({ courses: courses });\n      });\n    });\n  }\n\n  async fetchUsers() {\n    let users = [];\n    await FirebaseService.getAllUsers()\n      .then((queryResults) => {\n        queryResults.forEach((doc) => {\n          const user = doc.data();\n          user.id = doc.id;\n          users.push(user);\n          this.setState({\n            users\n          })\n        })\n      })\n  }\n\n  routeClicked(location) {\n    console.log(\"New Location: \", location);\n    if (location === \"Course Library\" && !this.state.allCoursesSelected) {\n      this.setState({\n        allCoursesSelected: true,\n        myCourseSelected: false,\n        createCourseSelected: false,\n      })\n    } else if (location === \"My Courses\" && !this.state.myCourseSelected) {\n      this.setState({\n        allCoursesSelected: false,\n        myCourseSelected: true,\n        createCourseSelected: false,\n      })\n    } else if (location === \"Create Course\" && !this.state.createCourseSelected) {\n      this.setState({\n        allCoursesSelected: false,\n        myCourseSelected: false,\n        createCourseSelected: true,\n      })\n    } else if ((location !== \"Course Library\" && location !== \"My Courses\" && location !== \"Create Course\")\n      && (this.state.allCoursesSelected || this.state.myCourseSelected || this.state.createCourseSelected)) {\n      this.setState({\n        allCoursesSelected: false,\n        myCourseSelected: false,\n        createCourseSelected: false,\n      })\n    }\n\n  }\n\n  render() {\n\n    // If not logged in redirect to the login page with redirect info. Url will\n    // briefly flash to login while we figure out if we have a user.\n    const PrivateRoute = ({ isLoggedIn, ...props }) =>\n      this.state.currentUser\n        ? <Route {...props} />\n        : <Redirect to={{\n          pathname: '/login',\n          state: { from: props.location }\n        }} />\n\n    return (\n      <MuiThemeProvider theme={theme}>\n        <Router onChange={this.browserRouteChanged}>\n          <div>\n            <nav hidden={!this.state.currentUser}>\n              <AppBar position=\"static\">\n                <Toolbar>\n                  <MuiThemeProvider theme={buttonTheme}>\n                    <Button variant=\"contained\" color={this.state.allCoursesSelected ? \"secondary\" : \"primary\"} className=\"menu-button main\" component={RouterLink} to=\"/courseLibrary\">All Courses</Button>\n                    <Button variant=\"contained\" color={this.state.myCourseSelected ? \"secondary\" : \"primary\"} className=\"menu-button main\" component={RouterLink} to=\"/myCourses\">My Courses</Button>\n                    <Button variant=\"outlined\" color={this.state.createCourseSelected ? \"secondary\" : \"primary\"} className=\"menu-button align-left\" component={RouterLink} to=\"/createCourse\">Create a Course</Button>\n                  </MuiThemeProvider>\n                  <IconButton className=\"menu-button profile-icon\" component={RouterLink} to=\"/profile\" color=\"inherit\" aria-label=\"menu\">\n                    <AccountCircleIcon />\n                  </IconButton>\n                </Toolbar>\n              </AppBar>\n            </nav>\n\n            {/* A <Switch> looks through its children <Route>s and\n                renders the first one that matches the current URL. */}\n            <Switch>\n              <Route exact path=\"/login\">\n                <Login routeClicked={this.routeClicked} completeLogin={this.setUser} user={this.state.currentUser} loadingUser={this.state.loadingUser} />\n              </Route>\n              <PrivateRoute path=\"/(courseLibrary|)\">\n                <CourseLibrary routeClicked={this.routeClicked} courses={this.state.courses} user={this.state.currentUser} updateUser={this.updateUser} />\n              </PrivateRoute>\n              <PrivateRoute path=\"/courseOverview/:id\">\n                <CourseOverview routeClicked={this.routeClicked} editable={false} user={this.state.currentUser}></CourseOverview>\n              </PrivateRoute>\n              <PrivateRoute path=\"/myCourses\">\n                <MyCourses routeClicked={this.routeClicked} user={this.state.currentUser}></MyCourses>\n              </PrivateRoute>\n              <PrivateRoute path=\"/profile\">\n                <UserProfile routeClicked={this.routeClicked} user={this.state.currentUser} updateUser={this.updateUser}></UserProfile>\n              </PrivateRoute>\n              <PrivateRoute path=\"/createCourse\">\n                <CreateCourse routeClicked={this.routeClicked} user={this.state.currentUser} updateUser={this.updateUser} updateCourses={this.fetchCourses}></CreateCourse>\n              </PrivateRoute>\n              <PrivateRoute path=\"/editCourse/:id\">\n                <CourseOverview setDeletingCourse={this.deletingCourse} isDeletingCourse={this.state.isDeletingCourse} routeClicked={this.routeClicked} editable={true} user={this.state.currentUser} updateUser={this.updateUser} updateCourses={this.fetchCourses}></CourseOverview>\n              </PrivateRoute>\n            </Switch>\n          </div>\n        </Router>\n      </MuiThemeProvider>\n    )\n  }\n};\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}