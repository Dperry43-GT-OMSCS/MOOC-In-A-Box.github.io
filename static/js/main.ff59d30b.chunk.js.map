{"version":3,"sources":["components/CourseCard/CourseCard.js","config/firebase.js","components/CourseLibrary/CourseLibrary.js","components/CourseOverview/CourseOverview.js","components/Home/Home.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["useStyles","makeStyles","theme","root","maxWidth","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","CourseCard","props","classes","React","useState","expanded","setExpanded","console","log","Card","className","CardHeader","title","course","subheader","owner","displayName","CardMedia","image","CardContent","Typography","variant","color","component","description","CardActions","disableSpacing","IconButton","aria-label","clsx","onClick","aria-expanded","Collapse","in","timeout","unmountOnExit","paragraph","firebaseInstance","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","CourseLibrary","this","courses","map","item","Component","generate","element","value","cloneElement","key","CourseOverviewNavigationPane","Paper","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","id","ExpansionPanelDetails","Grid","container","spacing","xs","md","List","dense","ListItem","ListItemText","primary","CourseOverviewCoursePane","CourseOverview","App","state","fetchCourses","bind","render","firestore","collection","get","then","queryResults","forEach","doc","data","db","user","chapter","lessons","lesson","push","setState","AppBar","position","Toolbar","edge","Button","RouterLink","to","exact","path","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.ff59d30b.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n}));\n\nexport default function CourseCard(props) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n  console.log(props)\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n        // avatar={\n        //   <Avatar aria-label=\"recipe\" className={classes.avatar}>\n        //     R\n        //   </Avatar>\n        // }\n        // action={\n        //   <IconButton aria-label=\"settings\">\n        //     <MoreVertIcon />\n        //   </IconButton>\n        // }\n        title={props.course.title}\n        subheader={props.course.owner.displayName}\n      />\n      <CardMedia\n        className={classes.media}\n        image=\"/static/images/cards/paella.jpg\"\n        title=\"Paella dish\"\n      />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {props.course.description}\n        </Typography> \n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {props.course.owner.displayName}\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n        <IconButton aria-label=\"add to favorites\">\n          <FavoriteIcon />\n        </IconButton>\n        <IconButton aria-label=\"share\">\n          <ShareIcon />\n        </IconButton>\n        <IconButton\n          className={clsx(classes.expand, {\n            [classes.expandOpen]: expanded,\n          })}\n          onClick={handleExpandClick}\n          aria-expanded={expanded}\n          aria-label=\"show more\"\n        >\n          <ExpandMoreIcon />\n        </IconButton>\n      </CardActions>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n          <Typography paragraph>Method:</Typography>\n          <Typography paragraph>\n            Heat 1/2 cup of the broth in a pot until simmering, add saffron and set aside for 10\n            minutes.\n          </Typography>\n          <Typography paragraph>\n            Heat oil in a (14- to 16-inch) paella pan or a large, deep skillet over medium-high\n            heat. Add chicken, shrimp and chorizo, and cook, stirring occasionally until lightly\n            browned, 6 to 8 minutes. Transfer shrimp to a large plate and set aside, leaving chicken\n            and chorizo in the pan. Add pimentón, bay leaves, garlic, tomatoes, onion, salt and\n            pepper, and cook, stirring often until thickened and fragrant, about 10 minutes. Add\n            saffron broth and remaining 4 1/2 cups chicken broth; bring to a boil.\n          </Typography>\n          <Typography paragraph>\n            Add rice and stir very gently to distribute. Top with artichokes and peppers, and cook\n            without stirring, until most of the liquid is absorbed, 15 to 18 minutes. Reduce heat to\n            medium-low, add reserved shrimp and mussels, tucking them down into the rice, and cook\n            again without stirring, until mussels have opened and rice is just tender, 5 to 7\n            minutes more. (Discard any mussels that don’t open.)\n          </Typography>\n          <Typography>\n            Set aside off of the heat to let rest for 10 minutes, and then serve.\n          </Typography>\n        </CardContent>\n      </Collapse>\n    </Card>\n  );\n}","import firebase from 'firebase'\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyA8tAHYGUiNkFHq6452W4Qr79eibVmtRZA\",\n    authDomain: \"mooc-in-a-box.firebaseapp.com\",\n    databaseURL: \"https://mooc-in-a-box.firebaseio.com\",\n    projectId: \"mooc-in-a-box\",\n    storageBucket: \"mooc-in-a-box.appspot.com\",\n    messagingSenderId: \"594314585164\",\n    appId: \"1:594314585164:web:3ae152452d1c238af100e9\",\n    measurementId: \"G-LXH34JCXZS\"\n  };\nconst firebaseInstance = firebase.initializeApp(firebaseConfig);\n\nexport default firebaseInstance;","import React from 'react';\nimport './CourseLibrary.css';\nimport {Button} from '@material-ui/core';\nimport CourseCard from '../CourseCard/CourseCard';\nimport firebaseInstance from '../../config/firebase';\nimport { render } from '@testing-library/react';\n\nclass CourseLibrary extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  \n\n  render() {\n    let listItems = this.props.courses.map(function(item) {\n      return (\n        <div className=\"CurrentCourse\">\n          <CourseCard course={item}\n          ></CourseCard>\n        </div>\n      );\n    });\n    \n    return (listItems);\n  }\n}\n\nexport default CourseLibrary;\n","import React from 'react';\nimport './CourseOverview.css';\n\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\n\n\n\nfunction generate(element) {\n    return [0, 1, 2].map(value =>\n      React.cloneElement(element, {\n        key: value,\n      }),\n    );\n  }\n\n\n \nfunction CourseOverviewNavigationPane() {\n    return (\n        <Paper className=\"paper\">\n\n        <ExpansionPanel>\n            <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n            >\n            <Typography variant=\"subtitle2\">Topic 1</Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n            <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                    <div>\n                        <List dense=\"true\">\n                        {generate(\n                            <ListItem>\n                                <ListItemText\n                                    primary=\"SubTopic\"\n                                />\n                            </ListItem>,\n                        )}\n                        </List>\n                    </div>\n                    </Grid>\n                </Grid>\n            </ExpansionPanelDetails>\n        </ExpansionPanel>\n        <ExpansionPanel>\n            <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel2a-content\"\n            id=\"panel2a-header\"\n            >\n            <Typography variant=\"subtitle2\">Topic 2</Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n            <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                    <div>\n                        <List dense=\"true\">\n                        {generate(\n                            <ListItem>\n                                <ListItemText\n                                    primary=\"SubTopic2\"\n                                />\n                            </ListItem>,\n                        )}\n                        </List>\n                    </div>\n                    </Grid>\n                </Grid>\n            </ExpansionPanelDetails>\n        </ExpansionPanel>\n\n    </Paper>\n    )\n}  \n\n\nfunction CourseOverviewCoursePane() {\n    return (\n        <Paper className=\"paper\">Course Pane</Paper>\n    )\n}\n\n\n\nfunction CourseOverview() {\n    return (\n      <div className=\"courseOverview\">\n        <Typography className=\"center\" variant=\"h3\" component=\"h3\">\n            Course Overview\n        </Typography>\n        <Grid container spacing={3}>\n            <Grid item xs={4}>\n                <CourseOverviewNavigationPane />\n            </Grid>\n            <Grid item xs={8}>\n                 <CourseOverviewCoursePane />\n            </Grid>\n        </Grid>\n      </div>\n    );\n  }\n  \n  export default CourseOverview;","import React from 'react';\nimport './Home.css';\nimport {Button} from '@material-ui/core';\n\nfunction CourseLibrary() {\n  return (\n    <div className=\"Home\">\n      <h1>This Is MOOC IN A BOX</h1>\n    </div>\n  );\n}\n\nexport default CourseLibrary;\n","import React, { useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {AppBar, Toolbar, IconButton, Typography, Button, } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport CourseLibrary from './components/CourseLibrary/CourseLibrary';\nimport CourseOverview from './components/CourseOverview/CourseOverview';\nimport firebaseInstance from './config/firebase';\nimport Home from './components/Home/Home';\nimport { render } from '@testing-library/react';\n\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {courses: []};\n    this.fetchCourses = this.fetchCourses.bind(this);\n    this.render = this.render.bind(this);\n    this.fetchCourses();\n  }\n\n  useEffect() {\n    // Update the document title using the browser API\n    console.log(\"Helloooo world!\");\n    const db  = firebaseInstance.firestore();\n    db.collection(\"Users\").get().then( (queryResults) => {\n        queryResults.forEach((doc) => {\n          console.log(`${doc.id} => ${doc.data()}`);\n          console.log(doc.data());\n        });\n      })\n    }\n    \n    async fetchCourses() {\n      const db  = firebaseInstance.firestore();\n      let courses = [];\n      await db.collection(\"Course\").get().then( (queryResults) => {\n        queryResults.forEach((doc) => {\n          const course = doc.data();\n          course.owner.get().then(user => {\n            course.owner = user.data();\n          })\n          course.chapter.lessons.get().then(lesson => {\n            course.chapter.lessons = lesson.data();\n          })\n          courses.push(course);\n          this.setState({courses: courses});\n        });\n      });\n      console.log(courses)\n    }\n\n  render() {\n    return (\n      <Router>\n        <div>\n          <nav>\n          <AppBar position=\"static\">\n            <Toolbar>\n              <IconButton edge=\"start\" className=\"menu-button\" color=\"inherit\" aria-label=\"menu\">\n                <MenuIcon />\n              </IconButton>\n              <Button color=\"inherit\" className=\"menu-button\" component={RouterLink} to=\"/\">MOOC-In-A-Box</Button>\n              <Button color=\"inherit\" className=\"menu-button\" component={RouterLink} to=\"/courseOverview\">Course Overview</Button>\n              <Button color=\"inherit\" className=\"menu-button\" component={RouterLink} to=\"/courseLibrary\">Course Library</Button>\n            </Toolbar>\n          </AppBar>\n          </nav>\n\n          {/* A <Switch> looks through its children <Route>s and\n              renders the first one that matches the current URL. */}\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route path=\"/courseLibrary\">\n              <CourseLibrary courses={this.state.courses}/>\n            </Route>\n            <Route path=\"/courseOverview\">\n              <CourseOverview />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    )\n  }\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}