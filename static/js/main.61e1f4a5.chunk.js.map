{"version":3,"sources":["logo.svg","components/CourseCard/CourseCard.js","components/CourseLibrary/CourseLibraryToolbar/SearchBar/SearchBar.component.js","components/CourseLibrary/CourseLibraryToolbar/CourseLibraryToolbarMenu/CourseLibraryToolbarMenuItem/CourseLibraryToolbarMenuItem.component.js","components/CourseLibrary/CourseLibraryToolbar/CourseLibraryToolbarMenu/CourseLibraryToolbarMenu.component.js","components/CourseLibrary/CourseLibraryToolbar/CourseLibraryToolbar.component.js","components/CourseLibrary/CourseLibrary.js","service/firebase.service.js","components/CourseOverview/CourseOverview.js","components/Login/Login.js","components/MyCourses/MyCourses.js","components/UserProfile/EditDialog/EditDialog.component.js","components/UserProfile/UserProfileSection/UserProfileSection.component.js","components/UserProfile/UserProfile.js","components/CreateCourse/CreateCourseDialog/CreateCourseDialog.component.js","components/CreateCourse/CreateCourse.component.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","maxWidth","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","CourseCard","props","classes","React","useState","console","log","Card","className","CardHeader","title","course","subheader","owner","displayName","CardMedia","image","CardContent","Typography","variant","color","component","description","CardActions","disableSpacing","IconButton","aria-label","Button","Link","to","id","SearchBar","TextField","value","searchValue","onChange","type","onClick","onSearchClicked","CourseLibraryToolbarMenuItem","FormControlLabel","control","Radio","label","CourseLibraryToolbarMenu","menuItems","options","map","option","handleClick","associatedClickFunction","display","Menu","menuId","anchorEl","element","keepMounted","open","Boolean","onClose","closeFunction","MenuItem","FormControl","FormLabel","menuLabel","RadioGroup","name","radioGroupName","menuValue","event","target","CourseLibraryToolbar","menuButtons","menuItem","clickedFunction","buttonText","menus","menuOptions","AppBar","position","Toolbar","searchInfo","CourseLibrary","sortByClicked","setState","sortByElement","currentTarget","sortByHandleClose","sortFilterValue","topicClicked","topicElement","topicHandleClose","topicFilterValue","organizationClicked","organizationElement","organizationHandleClosed","organizationFilterValue","buildMenuItems","state","handleSearchChange","bind","handleSearchClicked","e","this","listItems","courses","item","class","Component","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","getUserById","userId","collection","doc","get","getCourseById","courseId","getAllCourses","getAllUsers","updateUser","updates","set","merge","createUser","userAuth","a","uid","photoURL","email","getCurrentUser","user","auth","currentUser","logUserInUser","isGoog","provider","GoogleAuthProvider","FacebookAuthProvider","users","undefined","authUser","then","queryResults","forEach","data","push","signInWithPopup","result","u","catch","error","signOut","deleteUser","delete","createCourse","courseInfo","storage","userDocRef","lessonRef","chapter","lessons","add","courseDoc","usersCreatedCourses","createdCourses","length","courseRef","updateObject","userResult","generate","cloneElement","key","CourseOverviewNavigationPane","Paper","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","Grid","container","spacing","xs","md","List","dense","ListItem","ListItemText","primary","CourseOverviewCoursePane","CourseOverview","setCourse","setError","useParams","useEffect","FirebaseService","courseResult","exists","CircularProgress","LoginPage","loginGoogle","loginFacebook","completeLogin","history","withRouter","CoursesDropdownComponent","numberOfCourses","button","courseTitle","CurrentCoursesComponent","currentCourses","PastCoursesComponent","pastCourses","SavedCoursesComponent","savedCourses","CreatedCoursesComponent","MyCourses","courseComponentList","favoritedCourses","hasCourses","CssBaseline","Container","EditDialog","Dialog","isOpen","handleClose","aria-labelledby","DialogTitle","field","DialogContent","DialogContentText","autoFocus","margin","fullWidth","DialogActions","handleSubmit","userKeyToDisplayMap","UserProfileSection","align","displayValue","openDialog","isDialogOpen","displayKey","setDisplayName","oldDisplayName","setOldDiplayName","isDisplayNameDialogOpen","setIsDisplayNameDialogOpen","userInterests","setUserInterests","oldUserInterests","setOldUserInterests","isUserInterestsDialogOpen","setIsUserInterestsDialogOpen","res","interests","err","Divider","CreateCourseDialog","setDescription","setTitle","courseDetails","CreateCourse","isCreateCourseDialogOpen","setIsCreateCourseDialogOpen","sectionTitle","updateCourses","currnetCoursesSection","App","setUser","fetchCourses","fetchUsers","render","lesson","RouterLink","exact","path","service","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.61e1f4a5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { Button } from '@material-ui/core';\nimport {Link} from 'react-router-dom'\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n}));\n\nexport default function CourseCard(props) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n  console.log(props)\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n        title={props.course.title}\n        subheader={props.course.owner.displayName}\n      />\n      <CardMedia\n        className={classes.media}\n        image=\"/static/images/cards/paella.jpg\"\n        title=\"Paella dish\"\n      />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {props.course.description}\n        </Typography> \n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {props.course.owner.displayName}\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n        <IconButton aria-label=\"add to favorites\">\n          <FavoriteIcon />\n        </IconButton>\n        <Button \n          variant=\"contained\" \n          color=\"primary\"\n          component={Link}\n          to={`/courseOverview/${props.course.id}`}\n          >\n            Overview\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}","import React from 'react';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport { IconButton  } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\n\nimport './SearchBar.css';\n\nfunction SearchBar(props) {\n    return(\n      <div className=\"search-bar\">\n          <TextField value={props.searchValue} onChange={props.onChange} id=\"outlined-search\" type=\"search\" variant=\"outlined\"  color=\"white\"/>\n          <IconButton className=\"menu-button\" onClick={props.onSearchClicked}>\n            <SearchIcon className=\"search-bar-icon\" />\n          </IconButton>\n      </div>\n    )\n  }\n\n  export default SearchBar\n  \n\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Radio from '@material-ui/core/Radio';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\n\nfunction CourseLibraryToolbarMenuItem(props){\n    return (\n      <FormControlLabel value={props.value} control={<Radio />} label={props.value} />\n    )\n  }\n\n  export default CourseLibraryToolbarMenuItem","import React from 'react';\n\nimport Menu from '@material-ui/core/Menu';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport CourseLibraryToolbarMenuItem from './CourseLibraryToolbarMenuItem/CourseLibraryToolbarMenuItem.component';\n\n\n\nfunction CourseLibraryToolbarMenu(props){\n\n  let menuItems = props.options.map( option => {\n    return (\n      <CourseLibraryToolbarMenuItem\n        handleClick={option.associatedClickFunction}\n        value={option.display}>\n      </CourseLibraryToolbarMenuItem>\n    )\n  })\n\n  const onChangeFunction = (event) => {\n    props.closeFunction(event.target.value)\n  }\n\n    return (\n      <Menu\n          id={props.menuId}\n          anchorEl={props.element}\n          keepMounted\n          open={Boolean(props.element)}\n          onClose={props.closeFunction}\n        >\n          <MenuItem>\n            <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">{props.menuLabel}</FormLabel>\n            <RadioGroup aria-label=\"gender\" name={props.radioGroupName} value={props.menuValue} onChange={onChangeFunction}>\n              {menuItems}\n            </RadioGroup>\n            </FormControl>\n          </MenuItem>\n      </Menu>\n    )\n  }\n\n  export default CourseLibraryToolbarMenu","import React from 'react';\n\nimport {AppBar, Toolbar, IconButton, Typography } from '@material-ui/core';\nimport {Button} from '@material-ui/core';\n\nimport SearchBar from './SearchBar/SearchBar.component';\nimport CourseLibraryToolbarMenu from './CourseLibraryToolbarMenu/CourseLibraryToolbarMenu.component'\n\n\n//<CourseLibraryMenu handleClose={this.handleClose} sortByElement={props.state.sortByElement}></CourseLibraryMenu>\n\n\nfunction CourseLibraryToolbar(props){\n\n    let menuButtons = props.menuItems.map(menuItem => {\n        return (\n            <Button\n                color=\"inherit\" \n                className=\"menu-button\"\n                onClick={menuItem.clickedFunction}\n            >\n                {menuItem.buttonText}\n            </Button>\n        )\n    })\n\n    let menus = props.menuItems.map(menuItem => {\n        return(\n            <CourseLibraryToolbarMenu\n                element={menuItem.element}\n                closeFunction = {menuItem.closeFunction}\n                options={menuItem.menuOptions}\n                menuId={menuItem.menuId}\n                menuLabel={menuItem.buttonText}\n            >\n            </CourseLibraryToolbarMenu>\n        )\n    })\n\n    return(\n        <AppBar position=\"static\" className=\"course-library-app-bar\">\n            <Toolbar>\n                {menuButtons}\n                <SearchBar searchValue={props.searchInfo.value} onChange={props.searchInfo.onChange} onSearchClicked={props.searchInfo.onClick}></SearchBar>\n            </Toolbar>\n            {menus}\n      </AppBar>\n    )\n}\n\nexport default CourseLibraryToolbar","import React from 'react';\nimport './CourseLibrary.css';\nimport {Button} from '@material-ui/core';\nimport CourseCard from '../CourseCard/CourseCard';\nimport { render } from '@testing-library/react';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport {AppBar, Toolbar, IconButton, Typography } from '@material-ui/core';\nimport SearchBar from './CourseLibraryToolbar/SearchBar/SearchBar.component';\nimport CourseLibraryMenu from './CourseLibraryToolbar/CourseLibraryToolbarMenu/CourseLibraryToolbarMenu.component'\n\nimport CourseLibraryToolbar from './CourseLibraryToolbar/CourseLibraryToolbar.component'\n\nclass CourseLibrary extends React.Component {\n  constructor(props) {\n    super(props);\n    // Bind Search\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n    this.handleSearchClicked = this.handleSearchClicked.bind(this);\n    // Bind Sort By\n    this.sortByClicked = this.sortByClicked.bind(this);\n    this.sortByHandleClose = this.sortByHandleClose.bind(this);\n    // Bind Topic\n    this.topicClicked = this.topicClicked.bind(this);\n    this.topicHandleClose = this.topicHandleClose.bind(this);\n    // Bind Organization\n    this.organizationClicked = this.organizationClicked.bind(this);\n    this.organizationHandleClosed = this.organizationHandleClosed.bind(this);\n\n    this.buildMenuItems = this.buildMenuItems.bind(this);\n\n    this.state = {\n      searchValue: \"\",\n      sortByElement: null,\n      topicElement: null,\n      organizationElement: null,\n      sortFilterValue: null,\n      topicFilterValue: null,\n      organizationFilterValue:null\n\n    }\n  }\n\n  /** Search Function */\n  handleSearchChange(e){\n    console.log(\"Key Entered!\")\n    this.setState({\n      searchValue: e.target.value\n    })\n  }\n\n  handleSearchClicked(e){\n    console.log(\"Search button clicked!\")\n    console.log(this.state.searchValue);\n  }\n\n  /** Sort By Functions */\n  sortByClicked = event => {\n    this.setState({\n      sortByElement: event.currentTarget\n    });\n  };\n\n  sortByHandleClose = (value) => {\n    console.log(value);\n    this.setState({\n      sortByElement: null,\n      sortFilterValue: value\n    });\n  };\n\n\n  /** Topic Functions */\n  topicClicked = event => {\n    this.setState({\n      topicElement: event.currentTarget\n    });\n  };\n\n  topicHandleClose = (value) => {\n    this.setState({\n      topicElement: null,\n      topicFilterValue: value\n    });\n  };\n\n  /** Organization functions */\n  organizationClicked = event => {\n    this.setState({\n      organizationElement: event.currentTarget\n    });\n  };\n\n  organizationHandleClosed = (value) => {\n    this.setState({\n      organizationElement: null,\n      organizationFilterValue: value\n    });\n  };\n\n  buildMenuItems = () => {\n    const sortByInfo = {\n      buttonText: \"Sort By\",\n      menuId: \"menu-sort-by\",\n      clickedFunction: this.sortByClicked,\n      closeFunction: this.sortByHandleClose,\n      element: this.state.sortByElement,\n      radioGroupName: \"menuRadio\",\n      menuValue: this.state.sortFilterValue,\n      menuOptions: [\n        {\n          display: \"Newest\",\n          associatedClickFunction:  this.sortByHandleClose\n        },\n        {\n          display: \"Recommended\",\n          associatedClickFunction:  this.sortByHandleClose\n        },\n        {\n          display: \"Trending\",\n          associatedClickFunction:  this.sortByHandleClose\n        }\n      ]\n    }\n\n    const topicInfo = {\n      buttonText: \"Topic\",\n      menuId: \"menu-topic\",\n      clickedFunction: this.topicClicked,\n      element: this.state.topicElement,\n      closeFunction: this.topicHandleClose,\n      radioGroupName: \"topicRadio\",\n      menuValue: this.state.topicFilterValue,\n      menuOptions: [\n        {\n          display: \"Science\",\n          associatedClickFunction:  this.topicHandleClose\n        },\n        {\n          display: \"Technology\",\n          associatedClickFunction:  this.topicHandleClose\n        },\n        {\n          display: \"History\",\n          associatedClickFunction:  this.topicHandleClose\n        },\n        {\n          display: \"Arts\",\n          associatedClickFunction:  this.topicHandleClose\n        }\n      ]\n    }\n\n    const organizationInfo = {\n      buttonText: \"Organization\",\n      menuId: \"menu-organization\",\n      clickedFunction: this.organizationClicked,\n      element: this.state.organizationElement,\n      closeFunction: this.organizationHandleClosed,\n      radioGroupName: \"organizationRadio\",\n      menuValue: this.state.organizationFilterValue,\n      menuOptions: [\n        {\n          display: \"Required\",\n          associatedClickFunction:  this.organizationHandleClosed\n        },\n        {\n          display: \"Recommended\",\n          associatedClickFunction:  this.organizationHandleClosed\n        },\n        {\n          display: \"All Courses\",\n          associatedClickFunction:  this.organizationHandleClosed\n        }\n      ]\n    }\n\n    return [sortByInfo, topicInfo, organizationInfo];\n  }\n\n\n\n  render() {\n    // Mappings\n    console.log(this.state);\n\n    const menuItems = this.buildMenuItems();\n    const searchInfo = {\n      value: this.state.searchValue,\n      onChange: this.handleSearchChange,\n      onClick: this.handleSearchClicked\n    }\n\n    let listItems = this.props.courses.map(function(item) {\n      return (\n        <div className=\"CurrentCourse\">\n          <CourseCard course={item}\n          ></CourseCard>\n        </div>\n      );\n    });\n    \n    return (\n      <div class=\"course-library\">\n        <CourseLibraryToolbar menuItems={menuItems} searchInfo={searchInfo}></CourseLibraryToolbar>\n          <div className=\"course-list\">\n            {listItems}\n          </div>\n      </div>\n\n      );\n  }\n}\n\nexport default CourseLibrary;\n","// import * as firebase from \"firebase/app\";\n// import \"firebase/firestore\";\n// import \"firebase/auth\";\nimport firebase from 'firebase'\nimport { useRadioGroup } from '@material-ui/core';\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyA8tAHYGUiNkFHq6452W4Qr79eibVmtRZA\",\n    authDomain: \"mooc-in-a-box.firebaseapp.com\",\n    databaseURL: \"https://mooc-in-a-box.firebaseio.com\",\n    projectId: \"mooc-in-a-box\",\n    storageBucket: \"mooc-in-a-box.appspot.com\",\n    messagingSenderId: \"594314585164\",\n    appId: \"1:594314585164:web:3ae152452d1c238af100e9\",\n    measurementId: \"G-LXH34JCXZS\"\n  };\n\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\n\n\nexport const getUserById = userId => {\n    return db.collection('Users').doc(userId).get();\n}\n\nexport const getCourseById = courseId => {\n    return db.collection('Course')\n        .doc(courseId)\n        .get();\n};\n\nexport const getAllCourses = () => {\n    return db.collection('Course').get();\n}\n\nexport const getAllUsers = () => {\n    return db.collection('Users').get();\n}\n\nexport const updateUser = (userId, updates) => {\n    console.log(\"Update User Called\");\n    return db.collection('Users')\n                .doc(userId)\n                .set(updates, { merge: true })\n}\n\nexport const createUser = async (userAuth) => {\n    return db.collection('Users')\n                .doc(userAuth.uid)\n                .set({\n                    id: userAuth.uid,\n                    name: userAuth.displayName,\n                    photoURL: userAuth.photoURL,\n                    email: userAuth.email,\n                },\n                    { merge: true }\n                )\n}\n\nexport const getCurrentUser = () => {\n    var user = firebase.auth().currentUser;\n    if (user) {\n        return user;\n    } else {\n        return undefined;\n    }\n}\n\nexport const logUserInUser = async (isGoog) => {\n    let provider;\n    isGoog ? provider = new firebase.auth.GoogleAuthProvider() :\n             provider = new firebase.auth.FacebookAuthProvider();\n    let users = [];\n    let currentUser = undefined;\n    let authUser = undefined;\n    // Get all users so we can see if the logged in one is one of ours.\n    // TODO(jessi): store this data so we don't need to fetch it, or directly ask for the user\n    // once they log in and if no user exists create one. Sounds like work.\n    await getAllUsers()\n        .then( (queryResults) => {\n          queryResults.forEach( (doc) => {\n            const user = doc.data();\n            user.id = doc.id;\n            users.push(user);\n          })\n        });\n\n    return await firebase.auth().signInWithPopup(provider).then(async function(result) {\n        authUser = result.user;\n        users.forEach(u => {\n            if (u.id === authUser.uid) {\n                currentUser = u;\n            }\n        });\n        // Didn't find an existing user.\n        if (currentUser === undefined) {\n             // Create new user\n            await createUser(authUser).then(async () => {\n                // Get the new user to return\n                return getCurrentUser();\n            }).catch( error => {\n                console.log(error);\n            });\n        }\n        return currentUser;\n    }).catch(function(error) {\n        console.log(error);\n    });\n}\n\nexport const signOut = async () => {\n    return await firebase.auth().signOut().then(function() {\n        return true;\n    }).catch(function(error) {\n        console.log(error);\n        return false;\n    });\n}\n\nexport const deleteUser = async () => {\n    var user = firebase.auth().currentUser;\n\n   return await user.delete().then(function() {\n      return true;\n    }).catch(function(error) {\n        console.log(error);\n        return false;\n    });\n}\n\n\nexport const createCourse = async (user, courseInfo) => {\n    var storage = firebase.storage();\n    const userDocRef = db.doc(`Users/${user.id}`)\n    const lessonRef = db.doc(courseInfo.chapter.lessons);\n    courseInfo.chapter.lessons = lessonRef;\n    return db.collection('Course').add({\n        owner:  userDocRef,\n        title: courseInfo.title,\n        description: courseInfo.description,\n        chapter: courseInfo.chapter\n    })\n    .then( courseDoc => {\n        let usersCreatedCourses;\n        if (user.createdCourses && user.createdCourses.length > 0 ) {\n           usersCreatedCourses = user.createdCourses;\n        } else {\n          usersCreatedCourses = []\n        }\n        \n        const courseRef = db.doc(`Course/${courseDoc.id}`)\n        usersCreatedCourses.push(courseRef);\n        const updateObject = {\n            createdCourses: usersCreatedCourses\n          }\n\n        return updateUser(user.id, updateObject)\n          .then(userResult => {\n              console.log(\"Result from update User:\", userResult);\n              return userResult;\n          })\n    })\n}","import React, { useState, useEffect } from 'react';\nimport './CourseOverview.css';\n\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport * as FirebaseService from '../../service/firebase.service';\n\nimport { useParams } from \"react-router-dom\";\n\n\n\nfunction generate(element) {\n    return [0, 1, 2].map(value =>\n      React.cloneElement(element, {\n        key: value,\n      }),\n    );\n  }\n\n\n \nfunction CourseOverviewNavigationPane() {\n    return (\n        <Paper className=\"paper\">\n\n        <ExpansionPanel>\n            <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n            >\n            <Typography variant=\"subtitle2\">Topic 1</Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n            <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                    <div>\n                        <List dense=\"true\">\n                        {generate(\n                            <ListItem>\n                                <ListItemText\n                                    primary=\"SubTopic\"\n                                />\n                            </ListItem>,\n                        )}\n                        </List>\n                    </div>\n                    </Grid>\n                </Grid>\n            </ExpansionPanelDetails>\n        </ExpansionPanel>\n        <ExpansionPanel>\n            <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel2a-content\"\n            id=\"panel2a-header\"\n            >\n            <Typography variant=\"subtitle2\">Topic 2</Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n            <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                    <div>\n                        <List dense=\"true\">\n                        {generate(\n                            <ListItem>\n                                <ListItemText\n                                    primary=\"SubTopic2\"\n                                />\n                            </ListItem>,\n                        )}\n                        </List>\n                    </div>\n                    </Grid>\n                </Grid>\n            </ExpansionPanelDetails>\n        </ExpansionPanel>\n\n    </Paper>\n    )\n}  \n\n\nfunction CourseOverviewCoursePane(props) {\n    return (\n        <Paper className=\"paper\">{props.course.title}</Paper>\n    )\n}\n\nfunction CourseOverview(props) {\n\n    const [course, setCourse] = useState();\n    const [error, setError] = useState();\n    let { id } = useParams();\n\n    useEffect(() => {\n        if (id) {\n            console.log(`ID: ${id}`);\n            FirebaseService.getCourseById(id)\n                .then(courseResult => {\n                    console.log(courseResult.exists)\n                    if (courseResult.exists) {\n                        setError(null);\n                        setCourse(courseResult.data());\n                    } else {\n                        setError('Course Not Found');\n                        setCourse();\n                    }\n                })\n                .catch(() => setError('Course Get Fail'));\n      }\n    }, [id]);\n\n    console.log(`Course Overiew: ${course}`)\n    if (course){\n        return (\n            <div className=\"courseOverview\">\n              <Typography className=\"center\" variant=\"h3\" component=\"h3\">\n                  Course Overview\n              </Typography>\n              <Grid container spacing={3}>\n                  <Grid item xs={4}>\n                      <CourseOverviewNavigationPane />\n                  </Grid>\n                  <Grid item xs={8}>\n                       <CourseOverviewCoursePane course={course} />\n                  </Grid>\n              </Grid>\n            </div>\n          );\n    } else {\n        return (\n            <div>\n                Loading...\n                <CircularProgress></CircularProgress>\n            </div>\n        )\n    }\n\n  }\n  \n  export default CourseOverview;","import React from 'react';\nimport './Login.css';\nimport {Button} from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport { withRouter } from \"react-router-dom\";\nimport * as FirebaseService from '../../service/firebase.service';\n\nclass LoginPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {user: undefined};\n    this.loginGoogle = this.loginGoogle.bind(this);\n    this.loginFacebook = this.loginFacebook.bind(this);\n\n  }\n\n  async loginGoogle(event) {\n    // TODO(jessi): set a loading state\n    let user;\n    await FirebaseService.logUserInUser(/* isGoog= */ true).then(u => {\n      user = u;     \n      this.props.completeLogin(user);\n      this.props.history.push(\"/myCourses\");\n    }); \n    // TODO(jessi): unset loading state\n  }\n\n  async loginFacebook(event) {\n    // TODO(jessi): set a loading state\n    await FirebaseService.logUserInUser(/* isGoog= */ false).then(u => {     \n      this.props.completeLogin(u);\n      this.props.history.push(\"/myCourses\");\n    }); \n    // TODO(jessi): unset loading state\n  }\n  \n  render() {\n    // TODO(jessi): style these buttons, remove this page from nav\n    return (\n      <div className=\"login\">\n      <h1>Sign into Mooc in a Box</h1>\n      <Button color=\"inherit\" className=\"menu-button\" onClick={this.loginFacebook}>\n        Sign in with Facebook\n      </Button>\n      <Button color=\"inherit\" className=\"menu-button\" onClick={this.loginGoogle}>\n        Sign in with Google\n      </Button>\n    </div>\n    );\n  }\n}\n\nexport default withRouter(LoginPage);\n","import React from 'react';\nimport './MyCourses.css';\nimport {Button} from '@material-ui/core';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {Link} from 'react-router-dom'\n\n\n/**\n * \n * http://localhost:3000/courseOverview/rlfxOavBn4nPZLNTRMkL\n * http://localhost:3000/courseOverview/rlfxOavBn4nPZLNTRMkL\n */\n\n /**\n  * \n  * \n  */\n\n\n\nfunction generate(element) {\n  return React.cloneElement(element, {\n      key: element,\n    })\n}\n\n\nfunction CoursesDropdownComponent(props) {\n  let numberOfCourses = props.courses.length;\n  console.log(numberOfCourses);\n  return (\n    <ExpansionPanel>\n            <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n            >\n            <Typography variant=\"subtitle2\">{numberOfCourses} Course(s)</Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n            <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                    <div>\n                        <List dense=\"true\">\n                        {\n                          props.courses.map( course => {\n                            return (\n                              <ListItem \n                                button\n                                component={Link}\n                                to={`/courseOverview/${course.courseId}`}\n                              >\n                                  <ListItemText\n                                      primary={course.courseTitle}\n                                  />\n                              </ListItem>\n                            )\n                          })\n                        }\n                        </List>\n                    </div>\n                    </Grid>\n                </Grid>\n            </ExpansionPanelDetails>\n        </ExpansionPanel>\n  )\n}\n\n\n\n\nfunction CurrentCoursesComponent(props){\n  console.log(`Current Courses Component Props`, props);\n  let numberOfCourses = props.currentCourses.length;\n  console.log(numberOfCourses);\n  return (\n    <div>\n      <h1> Current Courses </h1>\n      <CoursesDropdownComponent courses={props.currentCourses}></CoursesDropdownComponent>\n    </div>\n  )\n}\n\n\nfunction PastCoursesComponent(props){\n  console.log(`Past Courses Component Props: ${props}`);\n  return (\n    <div>\n      <h1> Past Courses </h1>\n      <CoursesDropdownComponent courses={props.pastCourses}></CoursesDropdownComponent>\n    </div>\n  )\n}\n\nfunction SavedCoursesComponent(props){\n  console.log(`Saved Courses Component Props: ${props}`);\n  return (\n    <div>\n      <h1> Saved Courses </h1>\n      <CoursesDropdownComponent courses={props.savedCourses}></CoursesDropdownComponent>\n    </div>\n  )\n}\n\nfunction CreatedCoursesComponent(props){\n  console.log(`Created Courses Component Props: ${props}`);\n  return (\n    <div>\n      <h1> Saved Courses </h1>\n      <CoursesDropdownComponent courses={props.createdCourses}></CoursesDropdownComponent>\n    </div>\n  )\n}\n\n\n\nfunction MyCourses(props) {\n  console.log(\"My Courses Component: \", props.user);\n  if (props.user) {\n    const courseComponentList = []\n    console.log(props.user.favoritedCourses);\n    let hasCourses = false;\n\n    \n    if (props.user.currentCourses && props.user.currentCourses.length > 0){\n      const element = <CurrentCoursesComponent currentCourses={props.user.currentCourses}></CurrentCoursesComponent>\n      courseComponentList.push(element);\n      hasCourses = true;\n    }\n\n    if (props.user.pastCourses && props.user.currentCourses.pastCourses > 0){\n      const element = <PastCoursesComponent pastCourses={props.user.pastCourses}></PastCoursesComponent>\n      courseComponentList.push(element);\n      hasCourses = true;\n\n    }\n\n    if (props.user.favoritedCourses && props.user.favoritedCourses.length > 0){\n      const element = <SavedCoursesComponent savedCourses={props.user.favoritedCourses}></SavedCoursesComponent>\n      courseComponentList.push(element);\n      hasCourses = true;\n\n    }\n\n    if (props.user.createdCourses && props.user.createdCourses.length > 0){\n      const element = <CreatedCoursesComponent createdCourses={props.user.createdCourses}></CreatedCoursesComponent>\n      courseComponentList.push(element);\n      hasCourses = true;\n\n    }\n    if (hasCourses) {\n      return (\n        <div className=\"MyCourses\">\n          <CssBaseline />\n          <Typography className=\"center\" variant=\"h3\" component=\"h3\">\n              My Courses\n          </Typography>\n          <Container maxWidth=\"lg\">\n            <Paper className=\"paper\">\n              {\n                courseComponentList.map( element => element)\n              }\n            </Paper>\n          </Container>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"MyCourses\">\n        <CssBaseline />\n            <Typography className=\"center\" variant=\"h3\" component=\"h3\">\n                My Courses\n            </Typography>\n            <Container maxWidth=\"lg\">\n              <Paper className=\"paper\">\n                <h4>You don't have any courses saved yet!</h4>\n              </Paper>\n            </Container>\n          </div>\n        )\n    }\n\n\n  } else {\n    return (\n      <div>\n        Loading..\n        <CircularProgress></CircularProgress>\n      </div>\n    )\n  }\n\n}\n\nexport default MyCourses;\n","import React from 'react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {Button} from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\n\nfunction EditDialog(props){\n    return (\n      <div>\n        <Dialog open={props.isOpen} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n          <DialogTitle id=\"form-dialog-title\">{props.field}</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              Edit the Field below to update your {props.field}\n            </DialogContentText>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"name\"\n              label={props.field}\n              value={props.value}\n              onChange={props.onChange}\n              type=\"email\"\n              fullWidth\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={props.handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={props.handleSubmit} color=\"primary\">\n              Submit\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    )\n  }\n\n  export default EditDialog","import React from 'react';\n\n\nimport Typography from '@material-ui/core/Typography';\nimport { IconButton } from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport EditDialog from '../EditDialog/EditDialog.component';\n\nconst userKeyToDisplayMap = {\n    \"displayName\": \"Display Name\",\n    \"email\": \"Email Address\",\n    \"password\": \"Password\"\n  }\n\nfunction UserProfileSection(props){\n    return (\n      <div>\n        <Typography align=\"center\" variant=\"h6\" component=\"h6\">\n          <strong>{props.displayValue}</strong>\n        </Typography>\n        <Typography align=\"center\" variant=\"body1\" component=\"body1\">\n          <span>\n          {props.value}\n            <IconButton className=\"menu-button\" color=\"inherit\" aria-label=\"menu\">\n              <EditIcon onClick={props.openDialog}/>\n            </IconButton>\n          </span>\n        </Typography>\n        <EditDialog \n          isOpen={props.isDialogOpen}\n          handleClose={props.handleClose}\n          handleSubmit={props.handleSubmit}\n          field={userKeyToDisplayMap[props.displayKey]}\n          value={props.value}\n          onChange={props.onChange}\n        />\n      </div>\n    )\n}\n\nexport default UserProfileSection\n  ","import React, { useState } from 'react';\nimport './UserProfile.css';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport Divider from '@material-ui/core/Divider';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport UserProfileSection from './UserProfileSection/UserProfileSection.component';\nimport {Button} from '@material-ui/core';\nimport { withRouter } from \"react-router-dom\";\nimport * as FirebaseService from '../../service/firebase.service';\n\nconst passwordValue = \"*******\";\n\nfunction UserProfile(props) {\n\n  console.log(props);\n\n  const [displayName, setDisplayName] = useState(null);\n  const [oldDisplayName, setOldDiplayName] = useState(null);\n  const [error, setError] = useState();\n  const [isDisplayNameDialogOpen, setIsDisplayNameDialogOpen] = useState(false)\n  const [userInterests, setUserInterests] = useState(null);\n  const [oldUserInterests, setOldUserInterests] = useState(null);\n  const [isUserInterestsDialogOpen, setIsUserInterestsDialogOpen] = useState(false);\n\n\n\n function  handleDisplayNameClose(){\n    setDisplayName(oldDisplayName)\n    setIsDisplayNameDialogOpen(false)\n  }\n\n  function handleDisplayNameSubmit(){\n    FirebaseService.updateUser(props.user.id, {\n      displayName\n    }).then( result => {\n        setIsDisplayNameDialogOpen(false)\n        setOldDiplayName(displayName)\n        props.updateUser();\n\n      })\n      .catch( err => {\n        console.log(err);\n      })\n  }\n \n  function openDisplayNameDialog(){\n    setOldDiplayName(displayName)\n    setIsDisplayNameDialogOpen(true)\n  }\n\n  function onDisplayNameChange(e){\n    setDisplayName(e.target.value);\n  }\n\n  /**\n   * Begin User Interests\n   */\n  function handleUserInterestsDialogClose(){\n    setUserInterests(oldUserInterests)\n    setIsUserInterestsDialogOpen(false)\n  }\n\n  function openUserInterestDialog(){\n    setOldUserInterests(userInterests)\n    setIsUserInterestsDialogOpen(true)\n  }\n\n  function onUserInterestsChange(e){\n    setUserInterests(e.target.value);\n  }\n\n  function handleUserInterestSubmit(){\n    FirebaseService.updateUser(props.user.id, {\n      interests: userInterests\n    }).then( result => {\n        setIsUserInterestsDialogOpen(false)\n        setUserInterests(userInterests)\n        props.updateUser();\n      })\n      .catch( err => {\n        console.log(err);\n      })\n  }\n\n  async function signOut(){\n    await FirebaseService.signOut().then((res) => {\n      if (res) {\n        props.history.push(\"/\");\n      }\n      // TODO(jessi) handle error\n    });\n  }\n\n  async function deleteAccount(){\n    await FirebaseService.deleteUser().then((res) => {\n      if (res) {\n        props.history.push(\"/\");\n      }\n      // TODO(jessi) handle error\n    });\n  }\n\n  if (props.user && displayName === null && userInterests === null){\n    setDisplayName(props.user.displayName)\n    setUserInterests(props.user.interests)\n  }\n\n  if (props.user){\n    return (\n      <div className=\"userProfile\">\n        <CssBaseline />\n        <Typography className=\"center\" variant=\"h3\" component=\"h3\">\n            User Profile\n        </Typography>\n        <Container className=\"userProfile-bottom-padding\" maxWidth=\"lg\">\n          <Paper className=\"paper\">\n\n            <UserProfileSection \n              displayValue=\"User Interests\" \n              value={userInterests}\n              handleClose={handleUserInterestsDialogClose}\n              handleSubmit={handleUserInterestSubmit}  \n              isDialogOpen={isUserInterestsDialogOpen} \n              openDialog={openUserInterestDialog}  \n              onChange={onUserInterestsChange}\n            ></UserProfileSection>\n\n          </Paper>\n        </Container>\n        <Divider />\n\n\n        <Container maxWidth=\"lg\">\n          <Paper className=\"paper\">\n  \n            <UserProfileSection \n              displayValue=\"Display Name\" \n              value={displayName}\n              handleClose={handleDisplayNameClose}\n              handleSubmit={handleDisplayNameSubmit}  \n              isDialogOpen={isDisplayNameDialogOpen} \n              openDialog={openDisplayNameDialog}  \n              onChange={onDisplayNameChange}\n            ></UserProfileSection>\n            <Divider />\n            <UserProfileSection displayValue=\"Email\" value={props.user.email}></UserProfileSection>\n            <Divider />\n            <UserProfileSection displayValue=\"Password\" value={passwordValue}></UserProfileSection>\n            <Button color=\"inherit\" className=\"menu-button\" onClick={signOut}>\n              Sign out\n            </Button>\n            <Button color=\"inherit\" className=\"menu-button\" onClick={deleteAccount}>\n              Delete account\n            </Button>\n          </Paper>\n        </Container>\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        Loading..\n        <CircularProgress></CircularProgress>\n      </div>\n    )\n  }\n\n}\n\nexport default withRouter(UserProfile);\n","import React, { useState } from 'react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {Button} from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\n\nfunction CreateCourseDialog(props){\n  const [description, setDescription] = useState();\n  const [title, setTitle] = useState();\n\n  \n  function onCourseTitleChange(e){\n    setTitle(e.target.value);\n  }\n\n  function onCourseDescriptionChange(e){\n    setDescription(e.target.value);\n\n  }\n\n  function handleSubmit(){\n      console.log(`Title: ${title}`);\n      console.log(`Description: ${description}`);\n      const courseDetails = {\n          title,\n          description\n      }\n\n      props.handleSubmit(courseDetails);\n  }\n\n\n    return (\n      <div>\n        <Dialog open={props.isOpen} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n          <DialogTitle id=\"form-dialog-title\">Create A New Course</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n                Create a new course. Start by entering a title and description below!\n            </DialogContentText>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"title\"\n              label=\"Course Title\"\n              onChange={onCourseTitleChange}\n              type=\"text\"\n              fullWidth\n            />\n             <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"description\"\n              label=\"Course Description\"\n              onChange={onCourseDescriptionChange}\n              type=\"text\"\n              fullWidth\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={props.handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={handleSubmit} color=\"primary\">\n              Submit\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    )\n  }\n\n  export default CreateCourseDialog","import React, { useState } from 'react';\nimport './CreateCourse.css';\nimport {Button} from '@material-ui/core';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport Divider from '@material-ui/core/Divider';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { withRouter } from \"react-router-dom\";\nimport * as FirebaseService from '../../service/firebase.service';\nimport CreateCourseDialog from './CreateCourseDialog/CreateCourseDialog.component';\n\n\nfunction CreateCourse(props) {\n  console.log(props.user);\n  const [isCreateCourseDialogOpen, setIsCreateCourseDialogOpen] = useState(false);\n\n\nfunction handleCreateCourseDialogClose(){\n  setIsCreateCourseDialogOpen(false);\n}\n\nfunction openCreateCourseDialog(){\n  setIsCreateCourseDialogOpen(true);\n\n}\n\nfunction updateUser(user) {\n  console.log(user);\n}\n\nasync function handleSubmit(courseInfo){\n  console.log(props.user.id);\n  courseInfo.owner = props.user.id;\n\n  courseInfo.chapter = {\n    id: 0,\n    lessons: \"Course/rlfxOavBn4nPZLNTRMkL/Lessons/kL5CwNARpoUhexocK7P4\",\n    sectionTitle: `${courseInfo.title} - Section`\n  }\n\n  const result = await FirebaseService.createCourse(props.user, courseInfo)\n  setIsCreateCourseDialogOpen(false);\n  props.updateUser();  \n  props.updateCourses();\n}\n\n  const hasCurrentCourses = false\n  let currnetCoursesSection = null;\n  if (props.user && props.user.createdCourses && props.user.createdCourses.length > 0 ) {\n    currnetCoursesSection = <h3>You created some courses!</h3>\n  } else {\n    currnetCoursesSection = <h3>You have not created any courses</h3>\n  }\n\n\n  return (\n    <div className=\"Home\">\n      <CssBaseline />\n        <Typography className=\"center\" variant=\"h3\" component=\"h3\">\n          Classes You've Created\n        </Typography>\n        <Container className=\"userProfile-bottom-padding\" maxWidth=\"lg\">\n          <Paper className=\"paper\">\n            {\n              currnetCoursesSection     \n            }\n            <span>\n              <Button variant=\"contained\" color=\"primary\" onClick={openCreateCourseDialog}>\n                Create New Course\n              </Button>\n            </span>\n          </Paper>\n        </Container>\n        <Divider />\n\n        <CreateCourseDialog \n          isOpen={isCreateCourseDialogOpen}\n          handleClose={handleCreateCourseDialogClose}\n          handleSubmit={handleSubmit}\n          user={props.user}\n        />\n\n\n    </div>\n  );\n}\n\nexport default CreateCourse;\n","import React, { useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {AppBar, Toolbar, IconButton, Typography, Button, } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\n\n\n\n\nimport CourseLibrary from './components/CourseLibrary/CourseLibrary';\nimport CourseOverview from './components/CourseOverview/CourseOverview';\nimport Login from './components/Login/Login';\nimport MyCourses from './components/MyCourses/MyCourses';\nimport UserProfile from './components/UserProfile/UserProfile';\nimport CreateCourse from './components/CreateCourse/CreateCourse.component';\n\n\nimport * as FirebaseService from '../src/service/firebase.service'\nimport { render } from '@testing-library/react';\n\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      courses: [],\n      users: [],\n      currentUser: undefined,\n    };\n    this.fetchCourses = this.fetchCourses.bind(this);\n    this.fetchUsers = this.fetchUsers.bind(this);\n    this.render = this.render.bind(this);\n    this.updateUser = this.updateUser.bind(this);\n    // this.fetchUsers();\n  }\n\n  updateUser(){\n    console.log(this.state);\n    FirebaseService.getUserById(this.state.currentUser.id)\n      .then( result => {\n        const user = result.data();\n        this.setState({currentUser: user}) \n      })\n  }\n\n  setUser = (user) => {\n    console.log(\"USER:\", user);\n    this.setState({currentUser: user})\n  }\n\n  useEffect() {\n    // Update the document title using the browser API\n    FirebaseService.getAllCourses().then( (queryResults) => {\n        queryResults.forEach((doc) => {\n          console.log(`${doc.id} => ${doc.data()}`);\n          console.log(doc.data());\n        });\n      })\n    }\n    \n    async fetchCourses() {\n      let courses = [];\n      await FirebaseService.getAllCourses().then( (queryResults) => {\n        queryResults.forEach((doc) => {\n          const course = doc.data();\n          const courseId = doc.id;\n          course.owner.get().then(user => {\n            course.owner = user.data();\n          })\n          course.chapter.lessons.get().then(lesson => {\n            course.chapter.lessons = lesson.data();\n          })\n          course.id = courseId\n          courses.push(course);\n          this.setState({courses: courses});\n        });\n      });\n    }\n\n    async fetchUsers(){\n      let users = [];\n      await FirebaseService.getAllUsers()\n        .then( (queryResults) => {\n          queryResults.forEach( (doc) => {\n            const user = doc.data();\n            user.id = doc.id;\n            users.push(user);\n            this.setState({\n              users\n            })\n          })\n        })\n    }\n\n\n  render() {\n    return (\n      <Router>\n        <div>\n          <nav>\n          <AppBar position=\"static\">\n            <Toolbar>\n              <Button color=\"inherit\" className=\"menu-button\" component={RouterLink} to=\"/\">MOOC-In-A-Box</Button>\n              <Button color=\"inherit\" className=\"menu-button\" component={RouterLink} to=\"/myCourses\">My Courses</Button>\n              <Button color=\"inherit\" className=\"menu-button\" component={RouterLink} to=\"/courseLibrary\">All Courses</Button>\n              <Button color=\"inherit\" className=\"menu-button align-left\" component={RouterLink} to=\"/createCourse\">Create a Course</Button>\n              <IconButton className=\"menu-button profile-icon\" component={RouterLink} to=\"/profile\" color=\"inherit\" aria-label=\"menu\">\n                <AccountCircleIcon />\n              </IconButton>\n              <span>{this.props.user?.name}</span>\n            </Toolbar>\n          </AppBar>\n          </nav>\n\n          {/* A <Switch> looks through its children <Route>s and\n              renders the first one that matches the current URL. */}\n          <Switch>\n            <Route exact path=\"/\">\n              <Login completeLogin={this.setUser}/>\n            </Route>\n            <Route path=\"/courseLibrary\">\n              <CourseLibrary courses={this.state.courses}/>\n            </Route>\n            <Route path=\"/courseOverview/:id\">\n              <CourseOverview service={FirebaseService}></CourseOverview>\n            </Route>\n            <Route path=\"/myCourses\">\n              <MyCourses user={this.state.currentUser}></MyCourses>\n            </Route>\n            <Route path=\"/profile\">\n              <UserProfile user={this.state.currentUser} updateUser={this.updateUser}></UserProfile>\n            </Route>\n            <Route path=\"/createCourse\">\n              <CreateCourse user={this.state.currentUser} updateUser={this.updateUser} updateCourses={this.fetchCourses}></CreateCourse>\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    )\n  }\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}