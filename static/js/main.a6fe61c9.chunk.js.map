{"version":3,"sources":["components/CourseCard/CourseCard.js","components/CourseLibrary/CourseLibraryToolbar/SearchBar/SearchBar.component.js","components/CourseLibrary/CourseLibraryToolbar/CourseLibraryToolbarMenu/CourseLibraryToolbarMenuItem/CourseLibraryToolbarMenuItem.component.js","components/CourseLibrary/CourseLibraryToolbar/CourseLibraryToolbarMenu/CourseLibraryToolbarMenu.component.js","components/CourseLibrary/CourseLibraryToolbar/CourseLibraryToolbar.component.js","service/firebase.service.js","components/CourseLibrary/CourseLibrary.js","components/CourseOverview/CourseOverviewNavigationPane/CourseOverviewNavigationPane.component.js","components/CourseOverview/CourseOverviewCoursePane/CourseOverviewCoursePane.component.js","components/CourseOverview/CourseOverview.js","components/Login/Login.js","components/CoursesDropdown/CoursesDropdown.component.js","components/MyCourses/MyCourses.js","components/UserProfile/EditDialog/EditDialog.component.js","components/UserProfile/UserProfileSection/UserProfileSection.component.js","components/UserProfile/UserProfile.js","components/CreateCourse/CreateCourseDialog/CreateCourseDialog.component.js","components/CreateCourse/CreateCourse.component.js","components/EditCourse/EditCourseNavigationPane/EditCourseNavigationPane.component.js","components/EditCourse/EditCoursePane/EditCoursePane.component.js","components/EditCourse/EditCourse.component.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","maxWidth","minWidth","maxHeight","minHeight","position","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","actionsRow","bottom","left","content","paddingBottom","CourseCard","props","classes","React","useState","isFavorited","setIsFavorited","isCourseAFavorite","Card","variant","className","CardHeader","title","course","subheader","owner","displayName","action","IconButton","aria-label","onClick","console","log","removeFavoriteClicked","favoriteClicked","CardMedia","image","CardContent","Typography","color","component","description","CardActions","disableSpacing","Button","Link","to","id","SearchBar","TextField","value","searchValue","onChange","type","onSearchClicked","CourseLibraryToolbarMenuItem","FormControlLabel","control","Radio","label","CourseLibraryToolbarMenu","menuItems","options","map","option","handleClick","associatedClickFunction","display","Menu","menuId","anchorEl","element","keepMounted","open","Boolean","onClose","closeFunction","MenuItem","FormControl","FormLabel","menuLabel","RadioGroup","name","radioGroupName","menuValue","event","target","CourseLibraryToolbar","menuButtons","menuItem","clickedFunction","buttonText","menus","menuOptions","AppBar","Toolbar","searchInfo","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","getUserById","userId","collection","doc","get","getCourseById","courseId","getAllCourses","getAllUsers","updateUser","updates","a","set","merge","createUser","userAuth","uid","photoURL","email","getCurrentUser","user","auth","currentUser","logUserInUser","isGoog","provider","GoogleAuthProvider","FacebookAuthProvider","users","undefined","authUser","then","queryResults","forEach","data","push","signInWithPopup","result","u","catch","error","signOut","document","cookie","deleteUser","delete","createCourse","courseInfo","storage","userDocRef","lessonRef","chapter","lessons","add","courseDoc","usersCreatedCourses","createdCoursesRefs","length","courseRef","updateObject","favoriteCourse","favoritedCourses","favoritedCoursesRefs","removeFavoriteCourse","splice","CourseLibrary","sortByClicked","setState","sortByElement","currentTarget","sortByHandleClose","sortFilterValue","topicClicked","topicElement","topicHandleClose","topicFilterValue","organizationClicked","organizationElement","organizationHandleClosed","organizationFilterValue","buildMenuItems","state","find","favoritedCourse","handleSearchChange","bind","handleSearchClicked","e","this","FirebaseService","listItems","courses","item","Grid","s","class","container","spacing","Component","generate","cloneElement","key","CourseOverviewNavigationPane","Paper","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","xs","md","List","dense","ListItem","ListItemText","primary","CourseOverviewCoursePane","CourseOverview","setCourse","setError","useParams","useEffect","courseResult","exists","CircularProgress","LoginPage","loginGoogle","loginFacebook","completeLogin","history","withRouter","CoursesDropdownComponent","RouterLink","includeEditIcon","CurrentCoursesComponent","numberOfCourses","currentCourses","PastCoursesComponent","pastCourses","SavedCoursesComponent","savedCourses","CreatedCoursesComponent","createdCourses","MyCourses","setUser","courseComponentList","hasCourses","pastCourse","CssBaseline","Container","EditDialog","Dialog","isOpen","handleClose","aria-labelledby","DialogTitle","field","DialogContent","DialogContentText","autoFocus","margin","fullWidth","DialogActions","handleSubmit","userKeyToDisplayMap","UserProfileSection","align","displayValue","openDialog","isDialogOpen","displayKey","setDisplayName","oldDisplayName","setOldDiplayName","isDisplayNameDialogOpen","setIsDisplayNameDialogOpen","userInterests","setUserInterests","oldUserInterests","setOldUserInterests","isUserInterestsDialogOpen","setIsUserInterestsDialogOpen","res","interests","err","Divider","CreateCourseDialog","setDescription","setTitle","courseDetails","CreateCourse","isCreateCourseDialogOpen","setIsCreateCourseDialogOpen","sectionTitle","updateCourses","currnetCoursesSection","EditCourseNavigationPane","EditCoursePane","EditCourse","App","fetchCourses","fetchUsers","render","getUserOnLoad","newCourses","pastCoursesRefs","split","some","trim","startsWith","cookieValue","replace","lesson","hidden","exact","path","service","window","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.a6fe61c9.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { Button } from '@material-ui/core';\nimport {Link} from 'react-router-dom'\nimport FavoriteBorderOutlinedIcon from '@material-ui/icons/FavoriteBorderOutlined';\n\n\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: 345,\n    minWidth: 345,\n    maxHeight: 400,\n    minHeight: 400,\n    position: 'relative',\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n  actionsRow: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0\n  }, \n  content: {\n    paddingBottom: '1rem'\n  }\n}));\n\nexport default function CourseCard(props) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n  const [isFavorited, setIsFavorited] = React.useState(false)\n\n\n  if ( props.isCourseAFavorite != isFavorited){\n    setIsFavorited(props.isCourseAFavorite);\n  }\n\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  const favoriteButtonClicked = () => {\n    console.log(props.course);\n    if (isFavorited) {\n      setIsFavorited(false);\n      props.removeFavoriteClicked(props.course);\n    } else {\n      setIsFavorited(true);\n      props.favoriteClicked(props.course);\n    }\n   \n  }\n\n  return (\n    <Card variant=\"outlined\" className={classes.root}>\n      <CardHeader\n        title={props.course.title}\n        subheader={props.course.owner.displayName}\n        action={\n          <IconButton aria-label=\"add to favorites\" onClick={favoriteButtonClicked}>\n           { isFavorited ? <FavoriteIcon /> : <FavoriteBorderOutlinedIcon />  } \n          </IconButton>\n        }\n      />\n      <CardMedia\n        className={classes.media}\n        image=\"/static/images/cards/paella.jpg\"\n        title=\"Paella dish\"\n      />\n      <CardContent className={classes.content}>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {props.course.description}\n        </Typography> \n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {props.course.owner.displayName}\n        </Typography>\n      </CardContent>\n      <CardActions className={classes.actionsRow} disableSpacing>\n        <Button \n          variant=\"contained\" \n          color=\"primary\"\n          component={Link}\n          to={`/courseOverview/${props.course.id}`}\n          >\n            Overview\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}","import React from 'react';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport { IconButton  } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\n\nimport './SearchBar.css';\n\nfunction SearchBar(props) {\n    return(\n      <div className=\"search-bar\">\n          <TextField value={props.searchValue} onChange={props.onChange} id=\"outlined-search\" type=\"search\" variant=\"outlined\"  color=\"white\"/>\n          <IconButton className=\"menu-button\" onClick={props.onSearchClicked}>\n            <SearchIcon className=\"search-bar-icon\" />\n          </IconButton>\n      </div>\n    )\n  }\n\n  export default SearchBar\n  \n\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Radio from '@material-ui/core/Radio';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\n\nfunction CourseLibraryToolbarMenuItem(props){\n    return (\n      <FormControlLabel value={props.value} control={<Radio />} label={props.value} />\n    )\n  }\n\n  export default CourseLibraryToolbarMenuItem","import React from 'react';\n\nimport Menu from '@material-ui/core/Menu';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport CourseLibraryToolbarMenuItem from './CourseLibraryToolbarMenuItem/CourseLibraryToolbarMenuItem.component';\n\n\n\nfunction CourseLibraryToolbarMenu(props){\n\n  let menuItems = props.options.map( option => {\n    return (\n      <CourseLibraryToolbarMenuItem\n        handleClick={option.associatedClickFunction}\n        value={option.display}>\n      </CourseLibraryToolbarMenuItem>\n    )\n  })\n\n  const onChangeFunction = (event) => {\n    props.closeFunction(event.target.value)\n  }\n\n    return (\n      <Menu\n          id={props.menuId}\n          anchorEl={props.element}\n          keepMounted\n          open={Boolean(props.element)}\n          onClose={props.closeFunction}\n        >\n          <MenuItem>\n            <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">{props.menuLabel}</FormLabel>\n            <RadioGroup aria-label=\"gender\" name={props.radioGroupName} value={props.menuValue} onChange={onChangeFunction}>\n              {menuItems}\n            </RadioGroup>\n            </FormControl>\n          </MenuItem>\n      </Menu>\n    )\n  }\n\n  export default CourseLibraryToolbarMenu","import React from 'react';\n\nimport {AppBar, Toolbar, IconButton, Typography } from '@material-ui/core';\nimport {Button} from '@material-ui/core';\n\nimport SearchBar from './SearchBar/SearchBar.component';\nimport CourseLibraryToolbarMenu from './CourseLibraryToolbarMenu/CourseLibraryToolbarMenu.component'\n\n\n//<CourseLibraryMenu handleClose={this.handleClose} sortByElement={props.state.sortByElement}></CourseLibraryMenu>\n\n\nfunction CourseLibraryToolbar(props){\n\n    let menuButtons = props.menuItems.map(menuItem => {\n        return (\n            <Button\n                color=\"inherit\" \n                className=\"menu-button\"\n                onClick={menuItem.clickedFunction}\n            >\n                {menuItem.buttonText}\n            </Button>\n        )\n    })\n\n    let menus = props.menuItems.map(menuItem => {\n        return(\n            <CourseLibraryToolbarMenu\n                element={menuItem.element}\n                closeFunction = {menuItem.closeFunction}\n                options={menuItem.menuOptions}\n                menuId={menuItem.menuId}\n                menuLabel={menuItem.buttonText}\n            >\n            </CourseLibraryToolbarMenu>\n        )\n    })\n\n    return(\n        <AppBar position=\"static\" className=\"course-library-app-bar\">\n            <Toolbar>\n                {menuButtons}\n                <SearchBar searchValue={props.searchInfo.value} onChange={props.searchInfo.onChange} onSearchClicked={props.searchInfo.onClick}></SearchBar>\n            </Toolbar>\n            {menus}\n      </AppBar>\n    )\n}\n\nexport default CourseLibraryToolbar","// import * as firebase from \"firebase/app\";\n// import \"firebase/firestore\";\n// import \"firebase/auth\";\nimport firebase from 'firebase'\nimport { useRadioGroup } from '@material-ui/core';\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyA8tAHYGUiNkFHq6452W4Qr79eibVmtRZA\",\n    authDomain: \"mooc-in-a-box.firebaseapp.com\",\n    databaseURL: \"https://mooc-in-a-box.firebaseio.com\",\n    projectId: \"mooc-in-a-box\",\n    storageBucket: \"mooc-in-a-box.appspot.com\",\n    messagingSenderId: \"594314585164\",\n    appId: \"1:594314585164:web:3ae152452d1c238af100e9\",\n    measurementId: \"G-LXH34JCXZS\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\n\n\nexport const getUserById = userId => {\n    return db.collection('Users').doc(userId).get();\n}\n\n\nexport const getCourseById = courseId => {\n    return db.collection('Course')\n        .doc(courseId)\n        .get();\n};\n\nexport const getAllCourses = () => {\n    return db.collection('Course').get();\n}\n\nexport const getAllUsers = () => {\n    return db.collection('Users').get();\n}\n\nexport const updateUser = async (userId, updates) => {\n    console.log(\"Update User Called\");\n    return db.collection('Users')\n        .doc(userId)\n        .set(updates, { merge: true })\n}\n\nexport const createUser = async (userAuth) => {\n    return db.collection('Users')\n        .doc(userAuth.uid)\n        .set({\n            id: userAuth.uid,\n            name: userAuth.displayName,\n            photoURL: userAuth.photoURL,\n            email: userAuth.email,\n        },\n            { merge: true }\n        )\n}\n\nexport const getCurrentUser = () => {\n    var user = firebase.auth().currentUser;\n    if (user) {\n        return user;\n    } else {\n        return undefined;\n    }\n}\n\nexport const logUserInUser = async (isGoog) => {\n    let provider;\n    isGoog ? provider = new firebase.auth.GoogleAuthProvider() :\n        provider = new firebase.auth.FacebookAuthProvider();\n    let users = [];\n    let currentUser = undefined;\n    let authUser = undefined;\n    // Get all users so we can see if the logged in one is one of ours.\n    // TODO(jessi): store this data so we don't need to fetch it, or directly ask for the user\n    // once they log in and if no user exists create one. Sounds like work.\n    await getAllUsers()\n        .then((queryResults) => {\n            queryResults.forEach((doc) => {\n                const user = doc.data();\n                user.id = doc.id;\n                users.push(user);\n            })\n        });\n\n    return await firebase.auth().signInWithPopup(provider).then(async function (result) {\n        authUser = result.user;\n        users.forEach(u => {\n            if (u.id === authUser.uid) {\n                currentUser = u;\n            }\n        });\n        // Didn't find an existing user.\n        if (currentUser === undefined) {\n            // Create new user\n            await createUser(authUser).then(async () => {\n                // Get the new user to return\n                return getCurrentUser();\n            }).catch(error => {\n                console.log(error);\n            });\n        }\n        return currentUser;\n    }).catch(function (error) {\n        console.log(error);\n    });\n}\n\nexport const signOut = async () => {\n    return await firebase.auth().signOut().then(function () {\n        document.cookie = 'userid=; expires=Thu, 01 Jan 1970 00:00:01 GMT;';\n        return true;\n    }).catch(function (error) {\n        console.log(error);\n        return false;\n    });\n}\n\nexport const deleteUser = async () => {\n    var user = firebase.auth().currentUser;\n\n    return await user.delete().then(function () {\n        document.cookie = 'userid=; expires=Thu, 01 Jan 1970 00:00:01 GMT;';\n        return true;\n    }).catch(function (error) {\n        console.log(error);\n        return false;\n    });\n}\n\n\nexport const createCourse = async (user, courseInfo) => {\n    var storage = firebase.storage();\n    const userDocRef = db.doc(`Users/${user.id}`)\n    const lessonRef = db.doc(courseInfo.chapter.lessons);\n    courseInfo.chapter.lessons = lessonRef;\n    return await db.collection('Course').add({\n        owner: userDocRef,\n        title: courseInfo.title,\n        description: courseInfo.description,\n        chapter: courseInfo.chapter\n    })\n        .then(async courseDoc => {\n            let usersCreatedCourses;\n            if (user.createdCoursesRefs && user.createdCoursesRefs.length > 0) {\n                usersCreatedCourses = user.createdCoursesRefs;\n            } else {\n                usersCreatedCourses = []\n            }\n\n            const courseRef = db.doc(`Course/${courseDoc.id}`)\n            usersCreatedCourses.push(courseRef);\n            const updateObject = {\n                createdCoursesRefs: usersCreatedCourses\n            }\n\n            return await updateUser(user.id, updateObject);\n        })\n}\n\nexport const favoriteCourse = async (user, courseInfo) => {\n    const courseRef = db.doc(`Course/${courseInfo.id}`)\n    let favoritedCourses;\n\n    if (user.favoritedCoursesRefs && user.favoritedCoursesRefs.length > 0 ){\n        favoritedCourses = user.favoritedCoursesRefs;\n    } else {\n        favoritedCourses = []\n    }\n\n    favoritedCourses.push(courseRef);\n\n    const updateObject = {\n        favoritedCoursesRefs: favoritedCourses\n    }\n\n    return await updateUser(user.id, updateObject);\n}\n\nexport const removeFavoriteCourse = async (user, courseInfo) => {\n    const courseRef = db.doc(`Course/${courseInfo.id}`)\n    const favoritedCourses = user.favoritedCoursesRefs;\n    favoritedCourses.splice(courseRef, 1);\n    \n    const updateObject = {\n        favoritedCoursesRefs: favoritedCourses\n    }\n\n    return await updateUser(user.id, updateObject);\n\n}","import React from 'react';\nimport './CourseLibrary.css';\nimport {Button} from '@material-ui/core';\nimport CourseCard from '../CourseCard/CourseCard';\nimport { render } from '@testing-library/react';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Grid from '@material-ui/core/Grid';\nimport {AppBar, Toolbar, IconButton, Typography } from '@material-ui/core';\nimport SearchBar from './CourseLibraryToolbar/SearchBar/SearchBar.component';\nimport CourseLibraryMenu from './CourseLibraryToolbar/CourseLibraryToolbarMenu/CourseLibraryToolbarMenu.component'\nimport CourseLibraryToolbar from './CourseLibraryToolbar/CourseLibraryToolbar.component'\n\nimport * as FirebaseService from '../../service/firebase.service';\n\n\nclass CourseLibrary extends React.Component {\n  constructor(props) {\n    super(props);\n    // Bind Search\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n    this.handleSearchClicked = this.handleSearchClicked.bind(this);\n    // Bind Sort By\n    this.sortByClicked = this.sortByClicked.bind(this);\n    this.sortByHandleClose = this.sortByHandleClose.bind(this);\n    // Bind Topic\n    this.topicClicked = this.topicClicked.bind(this);\n    this.topicHandleClose = this.topicHandleClose.bind(this);\n    // Bind Organization\n    this.organizationClicked = this.organizationClicked.bind(this);\n    this.organizationHandleClosed = this.organizationHandleClosed.bind(this);\n\n    this.buildMenuItems = this.buildMenuItems.bind(this);\n    this.favoriteClicked = this.favoriteClicked.bind(this);\n    this.removeFavoriteClicked = this.removeFavoriteClicked.bind(this);\n\n    this.state = {\n      searchValue: \"\",\n      sortByElement: null,\n      topicElement: null,\n      organizationElement: null,\n      sortFilterValue: null,\n      topicFilterValue: null,\n      organizationFilterValue:null\n\n    }\n  }\n\n  /** Search Function */\n  handleSearchChange(e){\n    this.setState({\n      searchValue: e.target.value\n    })\n  }\n\n  handleSearchClicked(e){\n  }\n\n  /** Sort By Functions */\n  sortByClicked = event => {\n    this.setState({\n      sortByElement: event.currentTarget\n    });\n  };\n\n  sortByHandleClose = (value) => {\n    this.setState({\n      sortByElement: null,\n      sortFilterValue: value\n    });\n  };\n\n\n  /** Topic Functions */\n  topicClicked = event => {\n    this.setState({\n      topicElement: event.currentTarget\n    });\n  };\n\n  topicHandleClose = (value) => {\n    this.setState({\n      topicElement: null,\n      topicFilterValue: value\n    });\n  };\n\n  /** Organization functions */\n  organizationClicked = event => {\n    this.setState({\n      organizationElement: event.currentTarget\n    });\n  };\n\n  organizationHandleClosed = (value) => {\n    this.setState({\n      organizationElement: null,\n      organizationFilterValue: value\n    });\n  };\n\n  async favoriteClicked(course) {\n    console.log(\"You favorited...\", course);\n    await FirebaseService.favoriteCourse(this.props.user, course);\n    this.props.updateUser(this.props.user.id)\n  }\n\n  async removeFavoriteClicked(course){\n    console.log(\"You unfavorited...\", course);\n    await FirebaseService.removeFavoriteCourse(this.props.user, course);\n    this.props.updateUser(this.props.user.id)\n\n  }\n\n  buildMenuItems = () => {\n    const sortByInfo = {\n      buttonText: \"Sort By\",\n      menuId: \"menu-sort-by\",\n      clickedFunction: this.sortByClicked,\n      closeFunction: this.sortByHandleClose,\n      element: this.state.sortByElement,\n      radioGroupName: \"menuRadio\",\n      menuValue: this.state.sortFilterValue,\n      menuOptions: [\n        {\n          display: \"Newest\",\n          associatedClickFunction:  this.sortByHandleClose\n        },\n        {\n          display: \"Recommended\",\n          associatedClickFunction:  this.sortByHandleClose\n        },\n        {\n          display: \"Trending\",\n          associatedClickFunction:  this.sortByHandleClose\n        }\n      ]\n    }\n\n    const topicInfo = {\n      buttonText: \"Topic\",\n      menuId: \"menu-topic\",\n      clickedFunction: this.topicClicked,\n      element: this.state.topicElement,\n      closeFunction: this.topicHandleClose,\n      radioGroupName: \"topicRadio\",\n      menuValue: this.state.topicFilterValue,\n      menuOptions: [\n        {\n          display: \"Science\",\n          associatedClickFunction:  this.topicHandleClose\n        },\n        {\n          display: \"Technology\",\n          associatedClickFunction:  this.topicHandleClose\n        },\n        {\n          display: \"History\",\n          associatedClickFunction:  this.topicHandleClose\n        },\n        {\n          display: \"Arts\",\n          associatedClickFunction:  this.topicHandleClose\n        }\n      ]\n    }\n\n    const organizationInfo = {\n      buttonText: \"Organization\",\n      menuId: \"menu-organization\",\n      clickedFunction: this.organizationClicked,\n      element: this.state.organizationElement,\n      closeFunction: this.organizationHandleClosed,\n      radioGroupName: \"organizationRadio\",\n      menuValue: this.state.organizationFilterValue,\n      menuOptions: [\n        {\n          display: \"Required\",\n          associatedClickFunction:  this.organizationHandleClosed\n        },\n        {\n          display: \"Recommended\",\n          associatedClickFunction:  this.organizationHandleClosed\n        },\n        {\n          display: \"All Courses\",\n          associatedClickFunction:  this.organizationHandleClosed\n        }\n      ]\n    }\n\n    return [sortByInfo, topicInfo, organizationInfo];\n  }\n\n  isCourseAFavorite = (user, course) => {\n    \n    if( user.favoritedCourses && user.favoritedCourses.length > 0 ){\n      return user.favoritedCourses\n        .find(favoritedCourse => favoritedCourse.id === course.id);\n    }\n    return false;\n  }\n\n\n  render() {\n    // Mappings\n    const menuItems = this.buildMenuItems();\n    const favoriteClicked = this.favoriteClicked;\n    const isCourseAFavorite = this.isCourseAFavorite;\n    const removeFavoriteClicked = this.removeFavoriteClicked\n\n    const user = this.props.user;\n    const searchInfo = {\n      value: this.state.searchValue,\n      onChange: this.handleSearchChange,\n      onClick: this.handleSearchClicked\n    }\n    let listItems = []\n    if (user) {\n      listItems = this.props.courses.map(function(item) {\n        return (\n            <Grid item s={4}>\n              <CourseCard course={item} favoriteClicked={favoriteClicked} removeFavoriteClicked={removeFavoriteClicked} isCourseAFavorite={isCourseAFavorite(user, item)}></CourseCard>\n            </Grid>\n        );\n      });\n    }\n    \n    return (\n      <div class=\"course-library\">\n        <CourseLibraryToolbar menuItems={menuItems} searchInfo={searchInfo}></CourseLibraryToolbar>\n          <div className=\"course-list\">\n          <Grid container spacing={3}>\n            {listItems}\n          </Grid>\n          </div>\n      </div>\n\n      );\n  }\n}\n\nexport default CourseLibrary;\n","import React, { useState, useEffect } from 'react';\nimport './CourseOverviewNavigationPane.css';\n\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\n\n\n/**\n * Generate multiple function\n */\n\n\nfunction generate(element) {\n    return [0, 1, 2].map(value =>\n      React.cloneElement(element, {\n        key: value,\n      }),\n    );\n  }\n\n  \n\n\nfunction CourseOverviewNavigationPane() {\n    return (\n        <Paper className=\"paper\">\n\n        <ExpansionPanel>\n            <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n            >\n            <Typography variant=\"subtitle2\">Topic 1</Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n            <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                    <div>\n                        <List dense=\"true\">\n                        {generate(\n                            <ListItem>\n                                <ListItemText\n                                    primary=\"SubTopic\"\n                                />\n                            </ListItem>,\n                        )}\n                        </List>\n                    </div>\n                    </Grid>\n                </Grid>\n            </ExpansionPanelDetails>\n        </ExpansionPanel>\n        <ExpansionPanel>\n            <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel2a-content\"\n            id=\"panel2a-header\"\n            >\n            <Typography variant=\"subtitle2\">Topic 2</Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n            <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                    <div>\n                        <List dense=\"true\">\n                        {generate(\n                            <ListItem>\n                                <ListItemText\n                                    primary=\"SubTopic2\"\n                                />\n                            </ListItem>,\n                        )}\n                        </List>\n                    </div>\n                    </Grid>\n                </Grid>\n            </ExpansionPanelDetails>\n        </ExpansionPanel>\n\n    </Paper>\n    )\n}\n\nexport default CourseOverviewNavigationPane;","import React, { useState, useEffect } from 'react';\nimport Paper from '@material-ui/core/Paper';\n\n\nfunction CourseOverviewCoursePane(props) {\n    return (\n        <Paper className=\"paper\">{props.course.title}</Paper>\n    )\n}\n\nexport default CourseOverviewCoursePane;","import React, { useState, useEffect } from 'react';\nimport './CourseOverview.css';\n\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport * as FirebaseService from '../../service/firebase.service';\nimport { useParams } from \"react-router-dom\";\n\nimport CourseOverviewNavigationPane from './CourseOverviewNavigationPane/CourseOverviewNavigationPane.component';\nimport CourseOverviewCoursePane from './CourseOverviewCoursePane/CourseOverviewCoursePane.component';\n\n\nfunction CourseOverview(props) {\n\n    const [course, setCourse] = useState();\n    const [error, setError] = useState();\n    let { id } = useParams();\n\n    useEffect(() => {\n        if (id) {\n            console.log(`ID: ${id}`);\n            FirebaseService.getCourseById(id)\n                .then(courseResult => {\n                    console.log(courseResult.exists)\n                    if (courseResult.exists) {\n                        setError(null);\n                        setCourse(courseResult.data());\n                    } else {\n                        setError('Course Not Found');\n                        setCourse();\n                    }\n                })\n                .catch(() => setError('Course Get Fail'));\n      }\n    }, [id]);\n\n    console.log(`Course Overiew: ${course}`)\n    if (course){\n        return (\n            <div className=\"courseOverview\">\n              <Typography className=\"center\" variant=\"h3\" component=\"h3\">\n                  Course Overview\n              </Typography>\n              <Grid container spacing={3}>\n                  <Grid item xs={4}>\n                      <CourseOverviewNavigationPane />\n                  </Grid>\n                  <Grid item xs={8}>\n                       <CourseOverviewCoursePane course={course} />\n                  </Grid>\n              </Grid>\n            </div>\n          );\n    } else {\n        return (\n            <div>\n                Loading...\n                <CircularProgress></CircularProgress>\n            </div>\n        )\n    }\n\n  }\n  \n  export default CourseOverview;","import React from 'react';\nimport './Login.css';\nimport { Button } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport { withRouter } from \"react-router-dom\";\nimport * as FirebaseService from '../../service/firebase.service';\n\nclass LoginPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { user: undefined };\n    this.loginGoogle = this.loginGoogle.bind(this);\n    this.loginFacebook = this.loginFacebook.bind(this);\n\n  }\n\n  async loginGoogle(event) {\n    // TODO(jessi): set a loading state\n    await FirebaseService.logUserInUser(/* isGoog= */ true).then(u => {\n      this.props.completeLogin(u);\n      this.props.history.push(\"/myCourses\");\n    });\n    // TODO(jessi): unset loading state\n  }\n\n  async loginFacebook(event) {\n    // TODO(jessi): set a loading state\n    await FirebaseService.logUserInUser(/* isGoog= */ false).then(u => {\n      this.props.completeLogin(u);\n      this.props.history.push(\"/myCourses\");\n    });\n    // TODO(jessi): unset loading state\n  }\n\n  render() {\n    // TODO(jessi): style these buttons, remove this page from nav\n    return (\n      <div className=\"login\">\n        <h1>Sign into Mooc in a Box</h1>\n        <Button color=\"inherit\" className=\"menu-button\" onClick={this.loginFacebook}>\n          Sign in with Facebook\n      </Button>\n        <Button color=\"inherit\" className=\"menu-button\" onClick={this.loginGoogle}>\n          Sign in with Google\n      </Button>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(LoginPage);\n","import React, { useState } from 'react';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport {Button} from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\n\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Grid from '@material-ui/core/Grid';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { IconButton } from '@material-ui/core';\n\nfunction CoursesDropdownComponent(props) {\n    return (\n      <ExpansionPanel>\n              <ExpansionPanelSummary\n              expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel1a-content\"\n              id=\"panel1a-header\"\n              >\n              <Typography variant=\"subtitle2\">{props.courses.length} Course(s)</Typography>\n              </ExpansionPanelSummary>\n              <ExpansionPanelDetails>\n              <Grid container spacing={2}>\n                  <Grid item xs={12} md={6}>\n                      <div>\n                          <List dense=\"true\">\n                          {\n                            props.courses.map( course => {\n                              return (\n                                <span>\n                                  <ListItem \n                                  >\n                                    <Button\n                                      component={RouterLink} \n                                      to={`/courseOverview/${course.id}`}\n                                    >\n                                      {course.title}\n                                    </Button>\n                                    { props.includeEditIcon && \n                                      <IconButton \n                                        className=\"menu-button\" \n                                        color=\"inherit\" \n                                        aria-label=\"menu\"\n                                        component={RouterLink}\n                                        to={`/editCourse/${course.id}`}\n                                      >\n                                        <EditIcon/>\n                                      </IconButton>\n                                    }\n                                  </ListItem>\n                                </span>\n                                \n                              )\n                            })\n                          }\n                          </List>\n                      </div>\n                      </Grid>\n                  </Grid>\n              </ExpansionPanelDetails>\n          </ExpansionPanel>\n    )\n  }\n\n  export default CoursesDropdownComponent;\n","import React, { useState } from 'react';\nimport './MyCourses.css';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport { Button } from '@material-ui/core';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Link } from 'react-router-dom'\n\nimport EditIcon from '@material-ui/icons/Edit';\nimport { IconButton } from '@material-ui/core';\n\nimport CoursesDropdownComponent from '../CoursesDropdown/CoursesDropdown.component';\n\n\n\n/**\n * \n * http://localhost:3000/courseOverview/rlfxOavBn4nPZLNTRMkL\n * http://localhost:3000/courseOverview/rlfxOavBn4nPZLNTRMkL\n */\n\n/**\n * \n * \n */\n\n\n\nfunction generate(element) {\n  return React.cloneElement(element, {\n    key: element,\n  })\n}\n\nfunction CurrentCoursesComponent(props) {\n  console.log(`Current Courses Component Props`, props);\n  let numberOfCourses = props.currentCourses.length;\n  console.log(numberOfCourses);\n  return (\n    <div>\n      <h1> Current Courses </h1>\n      <CoursesDropdownComponent courses={props.currentCourses}></CoursesDropdownComponent>\n    </div>\n  )\n}\n\n\nfunction PastCoursesComponent(props) {\n  console.log(`Past Courses Component Props: ${props}`);\n  return (\n    <div>\n      <h1> Past Courses </h1>\n      <CoursesDropdownComponent courses={props.pastCourses}></CoursesDropdownComponent>\n    </div>\n  )\n}\n\nfunction SavedCoursesComponent(props) {\n  console.log(`Saved Courses Component Props: ${props}`);\n  return (\n    <div>\n      <h1> Favorited Courses </h1>\n      <CoursesDropdownComponent courses={props.savedCourses}></CoursesDropdownComponent>\n    </div>\n  )\n}\n\nfunction CreatedCoursesComponent(props) {\n  console.log(\"Created Courses Component Props: \", props);\n  return (\n    <div>\n      <h1> Created Courses </h1>\n      <CoursesDropdownComponent courses={props.createdCourses} includeEditIcon={true}></CoursesDropdownComponent>\n    </div>\n  )\n}\n\n\n\nfunction MyCourses(props) {\n  console.log(\"My Courses Component: \", props);\n\n  const [user, setUser] = useState();\n\n\n  React.useEffect(() => {\n    console.log(\"My Courses - Resetting State\");\n    setUser(props.user);\n  }, [props]);\n\n\n  if (user) {\n    console.log(\"My Courses - My User ===\", user);\n    const courseComponentList = []\n    console.log(user.favoritedCourses);\n    let hasCourses = false;\n\n\n    if (user.currentCourses && user.currentCourses.length > 0) {\n      const element = <CurrentCoursesComponent currentCourses={user.currentCourses}></CurrentCoursesComponent>\n      courseComponentList.push(element);\n      hasCourses = true;\n    }\n\n    if (user.pastCourses && user.pastCourse.length > 0) {\n      const element = <PastCoursesComponent pastCourses={user.pastCourses}></PastCoursesComponent>\n      courseComponentList.push(element);\n      hasCourses = true;\n\n    }\n\n    if (user.favoritedCourses && user.favoritedCourses.length > 0) {\n      const element = <SavedCoursesComponent savedCourses={user.favoritedCourses}></SavedCoursesComponent>\n      courseComponentList.push(element);\n      hasCourses = true;\n\n    }\n\n    if (user.createdCourses && user.createdCourses.length > 0) {\n      const element = <CreatedCoursesComponent createdCourses={user.createdCourses}></CreatedCoursesComponent>\n      courseComponentList.push(element);\n      hasCourses = true;\n\n    }\n    if (hasCourses) {\n      return (\n        <div className=\"MyCourses\">\n          <CssBaseline />\n          <Typography className=\"center\" variant=\"h3\" component=\"h3\">\n            My Courses\n          </Typography>\n          <Container maxWidth=\"lg\">\n            <Paper className=\"paper\">\n              {\n                courseComponentList.map(element => element)\n              }\n            </Paper>\n          </Container>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"MyCourses\">\n          <CssBaseline />\n          <Typography className=\"center\" variant=\"h3\" component=\"h3\">\n            My Courses\n            </Typography>\n          <Container maxWidth=\"lg\">\n            <Paper className=\"paper\">\n              <h4>You don't have any courses saved yet!</h4>\n            </Paper>\n          </Container>\n        </div>\n      )\n    }\n\n\n  } else {\n    return (\n      <div>\n        Loading..\n        <CircularProgress></CircularProgress>\n      </div>\n    )\n  }\n\n}\n\nexport default MyCourses;\n","import React from 'react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {Button} from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\n\nfunction EditDialog(props){\n    return (\n      <div>\n        <Dialog open={props.isOpen} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n          <DialogTitle id=\"form-dialog-title\">{props.field}</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              Edit the Field below to update your {props.field}\n            </DialogContentText>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"name\"\n              label={props.field}\n              value={props.value}\n              onChange={props.onChange}\n              type=\"email\"\n              fullWidth\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={props.handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={props.handleSubmit} color=\"primary\">\n              Submit\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    )\n  }\n\n  export default EditDialog","import React from 'react';\n\n\nimport Typography from '@material-ui/core/Typography';\nimport { IconButton } from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport EditDialog from '../EditDialog/EditDialog.component';\n\nconst userKeyToDisplayMap = {\n    \"displayName\": \"Display Name\",\n    \"email\": \"Email Address\",\n    \"password\": \"Password\"\n  }\n\nfunction UserProfileSection(props){\n    return (\n      <div>\n        <Typography align=\"center\" variant=\"h6\" component=\"h6\">\n          <strong>{props.displayValue}</strong>\n        </Typography>\n        <Typography align=\"center\" variant=\"body1\" component=\"body1\">\n          <span>\n          {props.value}\n            <IconButton className=\"menu-button\" color=\"inherit\" aria-label=\"menu\">\n              <EditIcon onClick={props.openDialog}/>\n            </IconButton>\n          </span>\n        </Typography>\n        <EditDialog \n          isOpen={props.isDialogOpen}\n          handleClose={props.handleClose}\n          handleSubmit={props.handleSubmit}\n          field={userKeyToDisplayMap[props.displayKey]}\n          value={props.value}\n          onChange={props.onChange}\n        />\n      </div>\n    )\n}\n\nexport default UserProfileSection\n  ","import React, { useState } from 'react';\nimport './UserProfile.css';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport Divider from '@material-ui/core/Divider';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport UserProfileSection from './UserProfileSection/UserProfileSection.component';\nimport { Button } from '@material-ui/core';\nimport { withRouter } from \"react-router-dom\";\nimport * as FirebaseService from '../../service/firebase.service';\n\nconst passwordValue = \"*******\";\n\nfunction UserProfile(props) {\n\n  console.log(props);\n\n  const [displayName, setDisplayName] = useState(null);\n  const [oldDisplayName, setOldDiplayName] = useState(null);\n  const [error, setError] = useState();\n  const [isDisplayNameDialogOpen, setIsDisplayNameDialogOpen] = useState(false)\n  const [userInterests, setUserInterests] = useState(null);\n  const [oldUserInterests, setOldUserInterests] = useState(null);\n  const [isUserInterestsDialogOpen, setIsUserInterestsDialogOpen] = useState(false);\n\n\n\n  function handleDisplayNameClose() {\n    setDisplayName(oldDisplayName)\n    setIsDisplayNameDialogOpen(false)\n  }\n\n  function handleDisplayNameSubmit() {\n    FirebaseService.updateUser(props.user.id, {\n      displayName\n    }).then(result => {\n      setIsDisplayNameDialogOpen(false)\n      setOldDiplayName(displayName)\n      props.updateUser();\n\n    })\n      .catch(err => {\n        console.log(err);\n      })\n  }\n\n  function openDisplayNameDialog() {\n    setOldDiplayName(displayName)\n    setIsDisplayNameDialogOpen(true)\n  }\n\n  function onDisplayNameChange(e) {\n    setDisplayName(e.target.value);\n  }\n\n  /**\n   * Begin User Interests\n   */\n  function handleUserInterestsDialogClose() {\n    setUserInterests(oldUserInterests)\n    setIsUserInterestsDialogOpen(false)\n  }\n\n  function openUserInterestDialog() {\n    setOldUserInterests(userInterests)\n    setIsUserInterestsDialogOpen(true)\n  }\n\n  function onUserInterestsChange(e) {\n    setUserInterests(e.target.value);\n  }\n\n  function handleUserInterestSubmit() {\n    FirebaseService.updateUser(props.user.id, {\n      interests: userInterests\n    }).then(result => {\n      setIsUserInterestsDialogOpen(false)\n      setUserInterests(userInterests)\n      props.updateUser(props.user.id);\n    })\n      .catch(err => {\n        console.log(err);\n      })\n  }\n\n  async function signOut() {\n    await FirebaseService.signOut().then((res) => {\n      if (res) {\n        props.history.push(\"/\");\n        props.updateUser(undefined);\n      }\n      // TODO(jessi) handle error\n    });\n  }\n\n  async function deleteAccount() {\n    await FirebaseService.deleteUser().then((res) => {\n      if (res) {\n        props.history.push(\"/\");\n        props.updateUser(undefined);\n      }\n      // TODO(jessi) handle error\n    });\n  }\n\n  if (props.user && displayName === null && userInterests === null) {\n    setDisplayName(props.user.displayName)\n    setUserInterests(props.user.interests)\n  }\n\n  if (props.user) {\n    return (\n      <div className=\"userProfile\">\n        <CssBaseline />\n        <Typography className=\"center\" variant=\"h3\" component=\"h3\">\n          User Profile\n        </Typography>\n        <Container className=\"userProfile-bottom-padding\" maxWidth=\"lg\">\n          <Paper className=\"paper\">\n\n            <UserProfileSection\n              displayValue=\"User Interests\"\n              value={userInterests}\n              handleClose={handleUserInterestsDialogClose}\n              handleSubmit={handleUserInterestSubmit}\n              isDialogOpen={isUserInterestsDialogOpen}\n              openDialog={openUserInterestDialog}\n              onChange={onUserInterestsChange}\n            ></UserProfileSection>\n\n          </Paper>\n        </Container>\n        <Divider />\n\n\n        <Container maxWidth=\"lg\">\n          <Paper className=\"paper\">\n\n            <UserProfileSection\n              displayValue=\"Display Name\"\n              value={displayName}\n              handleClose={handleDisplayNameClose}\n              handleSubmit={handleDisplayNameSubmit}\n              isDialogOpen={isDisplayNameDialogOpen}\n              openDialog={openDisplayNameDialog}\n              onChange={onDisplayNameChange}\n            ></UserProfileSection>\n            <Divider />\n            <UserProfileSection displayValue=\"Email\" value={props.user.email}></UserProfileSection>\n            <Divider />\n            <UserProfileSection displayValue=\"Password\" value={passwordValue}></UserProfileSection>\n            <Button color=\"inherit\" className=\"menu-button\" onClick={signOut}>\n              Sign out\n            </Button>\n            <Button color=\"inherit\" className=\"menu-button\" onClick={deleteAccount}>\n              Delete account\n            </Button>\n          </Paper>\n        </Container>\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        Loading..\n        <CircularProgress></CircularProgress>\n      </div>\n    )\n  }\n\n}\n\nexport default withRouter(UserProfile);\n","import React, { useState } from 'react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {Button} from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\n\nfunction CreateCourseDialog(props){\n  const [description, setDescription] = useState();\n  const [title, setTitle] = useState();\n\n  \n  function onCourseTitleChange(e){\n    setTitle(e.target.value);\n  }\n\n  function onCourseDescriptionChange(e){\n    setDescription(e.target.value);\n\n  }\n\n  function handleSubmit(){\n      console.log(`Title: ${title}`);\n      console.log(`Description: ${description}`);\n      const courseDetails = {\n          title,\n          description\n      }\n\n      props.handleSubmit(courseDetails);\n  }\n\n\n    return (\n      <div>\n        <Dialog open={props.isOpen} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n          <DialogTitle id=\"form-dialog-title\">Create A New Course</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n                Create a new course. Start by entering a title and description below!\n            </DialogContentText>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"title\"\n              label=\"Course Title\"\n              onChange={onCourseTitleChange}\n              type=\"text\"\n              fullWidth\n            />\n             <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"description\"\n              label=\"Course Description\"\n              onChange={onCourseDescriptionChange}\n              type=\"text\"\n              fullWidth\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={props.handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={handleSubmit} color=\"primary\">\n              Submit\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    )\n  }\n\n  export default CreateCourseDialog","import React, { useState } from 'react';\nimport './CreateCourse.css';\nimport { Button } from '@material-ui/core';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport Divider from '@material-ui/core/Divider';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { withRouter } from \"react-router-dom\";\nimport * as FirebaseService from '../../service/firebase.service';\nimport CreateCourseDialog from './CreateCourseDialog/CreateCourseDialog.component';\nimport CoursesDropdownComponent from '../CoursesDropdown/CoursesDropdown.component';\n\n\nfunction CreatedCoursesComponent(props) {\n  console.log(`Created Courses Component Props: ${props}`);\n  return (\n    <div className=\"courses-section\">\n      <h1> Courses You've Created </h1>\n      <CoursesDropdownComponent courses={props.createdCourses} includeEditIcon={true}></CoursesDropdownComponent>\n    </div>\n  )\n}\n\nfunction CreateCourse(props) {\n  console.log(props.user);\n  const [isCreateCourseDialogOpen, setIsCreateCourseDialogOpen] = useState(false);\n\n\n  function handleCreateCourseDialogClose() {\n    setIsCreateCourseDialogOpen(false);\n  }\n\n  function openCreateCourseDialog() {\n    setIsCreateCourseDialogOpen(true);\n\n  }\n\n  function updateUser(user) {\n    console.log(user);\n  }\n\n  async function handleSubmit(courseInfo) {\n    courseInfo.owner = props.user.id;\n\n    courseInfo.chapter = {\n      id: 0,\n      lessons: \"Course/rlfxOavBn4nPZLNTRMkL/Lessons/kL5CwNARpoUhexocK7P4\",\n      sectionTitle: `${courseInfo.title} - Section`\n    }\n\n    await FirebaseService.createCourse(props.user, courseInfo)\n    setIsCreateCourseDialogOpen(false);\n    props.updateCourses();\n    props.updateUser(props.user.id);\n  }\n\n  const hasCurrentCourses = false\n  let currnetCoursesSection = null;\n  if (props.user && props.user.createdCourses && props.user.createdCourses.length > 0) {\n    currnetCoursesSection = <CreatedCoursesComponent createdCourses={props.user.createdCourses}></CreatedCoursesComponent>\n  } else {\n    currnetCoursesSection = <h3>You have not created any courses</h3>\n  }\n\n\n  return (\n    <div className=\"Home\">\n      <CssBaseline />\n      <Typography className=\"center\" variant=\"h3\" component=\"h3\">\n        Create A Course\n        </Typography>\n      <Container className=\"userProfile-bottom-padding\" maxWidth=\"lg\">\n        <Paper className=\"paper\">\n          {\n            currnetCoursesSection\n          }\n          <span>\n            <Button variant=\"contained\" color=\"primary\" onClick={openCreateCourseDialog}>\n              Create New Course\n              </Button>\n          </span>\n        </Paper>\n      </Container>\n      <Divider />\n\n      <CreateCourseDialog\n        isOpen={isCreateCourseDialogOpen}\n        handleClose={handleCreateCourseDialogClose}\n        handleSubmit={handleSubmit}\n        user={props.user}\n      />\n\n\n    </div>\n  );\n}\n\nexport default CreateCourse;\n","import React, { useState, useEffect } from 'react';\nimport './EditCourseNavigationPane.css';\n\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport {Button} from '@material-ui/core';\n\n\n\n/**\n * Generate multiple function\n */\n\n\nfunction generate(element) {\n    return [0, 1, 2].map(value =>\n      React.cloneElement(element, {\n        key: value,\n      }),\n    );\n  }\n\n  \n\n\nfunction EditCourseNavigationPane() {\n    return (\n        <Paper className=\"paper\">\n\n        <ExpansionPanel>\n            <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n            >\n            <Typography variant=\"subtitle2\">Topic 1</Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n            <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                    <div>\n                        <List dense=\"true\">\n                        {generate(\n                            <ListItem>\n                                <ListItemText\n                                    primary=\"SubTopic\"\n                                />\n                            </ListItem>,\n                        )}\n                            <ListItem>\n                                <Button variant=\"contained\" color=\"primary\">\n                                    Add New Content\n                                </Button>\n                            </ListItem>\n                        </List>\n                    </div>\n                    </Grid>\n                </Grid>\n            </ExpansionPanelDetails>\n        </ExpansionPanel>\n        <ExpansionPanel>\n            <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel2a-content\"\n            id=\"panel2a-header\"\n            >\n            <Typography variant=\"subtitle2\">Topic 2</Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n            <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                    <div>\n                        <List dense=\"true\">\n                        {generate(\n                            <ListItem>\n                                <ListItemText\n                                    primary=\"SubTopic2\"\n                                />\n                            </ListItem>,\n                        )}\n                            <ListItem>\n                                <Button variant=\"contained\" color=\"primary\">\n                                    Add New Content\n                                </Button>\n                            </ListItem>\n                        </List>\n                    </div>\n                    </Grid>\n                </Grid>\n            </ExpansionPanelDetails>\n        </ExpansionPanel>\n        <Button variant=\"contained\" color=\"primary\">\n            Add New Lesson\n        </Button>\n\n    </Paper>\n    )\n}\n\nexport default EditCourseNavigationPane;","import React, { useState, useEffect } from 'react';\nimport Paper from '@material-ui/core/Paper';\n\n\nfunction EditCoursePane(props) {\n    return (\n        <Paper className=\"paper\">{props.course.title}</Paper>\n    )\n}\n\nexport default EditCoursePane;","import React, { useEffect, useState } from 'react';\nimport {\n  Link as RouterLink,\n  useParams\n} from \"react-router-dom\";\n\nimport {Button} from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Grid from '@material-ui/core/Grid';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { IconButton } from '@material-ui/core';\nimport EditCourseNavigationPane from './EditCourseNavigationPane/EditCourseNavigationPane.component';\nimport EditCoursePane from './EditCoursePane/EditCoursePane.component';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport * as FirebaseService from '../../service/firebase.service';\n\nfunction EditCourse(props) {\n    // Get ID from Route Params\n    let { id } = useParams();\n    // Create State Variables\n    const [course, setCourse] = useState();\n    const [error, setError] = useState();\n\n\n    useEffect(() => {\n        if (id) {\n            console.log(`ID: ${id}`);\n            FirebaseService.getCourseById(id)\n                .then(courseResult => {\n                    console.log(courseResult.exists)\n                    if (courseResult.exists) {\n                        setError(null);\n                        setCourse(courseResult.data());\n                    } else {\n                        setError('Course Not Found');\n                        setCourse();\n                    }\n                })\n                .catch(() => setError('Course Get Fail'));\n      }\n    }, [id]);\n\n    if (course){\n        return (\n            <div className=\"edit-course\">\n              <Typography className=\"center\" variant=\"h3\" component=\"h3\">\n                  Edit Course\n              </Typography>\n              <Grid container spacing={3}>\n                  <Grid item xs={4}>\n                      <EditCourseNavigationPane />\n                  </Grid>\n                  <Grid item xs={8}>\n                       <EditCoursePane course={course} />\n                  </Grid>\n              </Grid>\n            </div>\n          );\n    } else {\n        return (\n            <div>\n                Loading...\n                <CircularProgress></CircularProgress>\n            </div>\n        )\n    }\n\n\n  }\n\n  export default EditCourse;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { AppBar, Toolbar, IconButton, Typography, Button, } from '@material-ui/core';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport CourseLibrary from './components/CourseLibrary/CourseLibrary';\nimport CourseOverview from './components/CourseOverview/CourseOverview';\nimport Login from './components/Login/Login';\nimport MyCourses from './components/MyCourses/MyCourses';\nimport UserProfile from './components/UserProfile/UserProfile';\nimport CreateCourse from './components/CreateCourse/CreateCourse.component';\nimport EditCourse from './components/EditCourse/EditCourse.component';\n\nimport * as FirebaseService from '../src/service/firebase.service'\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      courses: [],\n      users: [],\n      currentUser: undefined,\n    };\n    this.fetchCourses = this.fetchCourses.bind(this);\n    this.fetchUsers = this.fetchUsers.bind(this);\n    this.render = this.render.bind(this);\n    this.updateUser = this.updateUser.bind(this);\n    this.setUser = this.setUser.bind(this);\n    this.getUserOnLoad = this.getUserOnLoad.bind(this);\n    this.fetchCourses().then(() => {\n      this.getUserOnLoad();\n    });\n  }\n\n  async updateUser(userId) {\n    if (!userId) {\n      this.setState({ currentUser: undefined });\n      return;\n    }\n    await FirebaseService.getUserById(userId)\n      .then(result => {\n        const user = result.data();\n\n        if (user.createdCoursesRefs && user.createdCoursesRefs.length > 0) {\n          console.log(user.createdCoursesRefs)\n          const newCourses = user.createdCoursesRefs\n            .map(courseRef => this.state.courses.find(course => course.id === courseRef.id));\n\n          console.log(newCourses);\n          console.log(this.state.courses);\n          user.createdCourses = user.createdCoursesRefs\n            .map(courseRef => this.state.courses.find(course => course.id === courseRef.id));\n        }\n\n        if (user.pastCoursesRefs && user.pastCoursesRefs.length > 0) {\n          user.pastCourses = user.pastCoursesRefs\n            .map(courseRef => this.state.courses.find(course => course.id === courseRef.id));\n        }\n\n        if (user.favoritedCoursesRefs && user.favoritedCoursesRefs.length > 0) {\n          user.favoritedCourses = user.favoritedCoursesRefs\n            .map(courseRef => this.state.courses.find(course => course.id === courseRef.id));\n        }\n\n        this.setState({ currentUser: user });\n\n      })\n  }\n\n  getUserOnLoad() {\n    let user = FirebaseService.getCurrentUser();\n    if (user) {\n      this.updateUser(user.uid);\n    } else if (document.cookie.split(';').some((item) => item.trim().startsWith('userid='))) {\n      var cookieValue = document.cookie.replace(/(?:(?:^|.*;\\s*)userid\\s*\\=\\s*([^;]*).*$)|^.*$/, \"$1\");\n      this.updateUser(cookieValue);\n    } else {\n      this.updateUser(undefined);\n    }\n    console.log('get current user')\n    console.log(this.state.currentUser)\n    // document.cookie = \"userid=user.id\";\n  }\n\n  setUser(user) {\n    console.log(\"login\", user);\n    this.updateUser(user.id);\n    document.cookie = `userid=${user.id}`;\n  }\n\n  async fetchCourses() {\n    console.log('fetching courses')\n    console.log(this.state.currentUser)\n    let courses = [];\n    await FirebaseService.getAllCourses().then((queryResults) => {\n      queryResults.forEach((doc) => {\n        const course = doc.data();\n        console.log(course);\n        const courseId = doc.id;\n        course.owner.get().then(user => {\n          course.owner = user.data();\n        })\n        course.chapter.lessons.get().then(lesson => {\n          course.chapter.lessons = lesson.data();\n        })\n        course.id = courseId\n        courses.push(course);\n        this.setState({ courses: courses });\n      });\n    });\n  }\n\n  async fetchUsers() {\n    let users = [];\n    await FirebaseService.getAllUsers()\n      .then((queryResults) => {\n        queryResults.forEach((doc) => {\n          const user = doc.data();\n          user.id = doc.id;\n          users.push(user);\n          this.setState({\n            users\n          })\n        })\n      })\n  }\n\n  render() {\n\n    if (this.state.currentUser) {\n      console.log('logged in!')\n    }\n\n    return (\n      <Router>\n        <div>\n          <nav hidden={!this.state.currentUser}>\n            <AppBar position=\"static\">\n              <Toolbar>\n                {/* <Button color=\"inherit\" className=\"menu-button\" component={RouterLink} to=\"/\">MOOC-In-A-Box</Button> */}\n                <Button color=\"inherit\" className=\"menu-button\" component={RouterLink} to=\"/myCourses\">My Courses</Button>\n                <Button color=\"inherit\" className=\"menu-button\" component={RouterLink} to=\"/courseLibrary\">All Courses</Button>\n                <Button color=\"inherit\" className=\"menu-button align-left\" component={RouterLink} to=\"/createCourse\">Create a Course</Button>\n                <IconButton className=\"menu-button profile-icon\" component={RouterLink} to=\"/profile\" color=\"inherit\" aria-label=\"menu\">\n                  <AccountCircleIcon />\n                </IconButton>\n                <span>{this.props.user?.name}</span>\n              </Toolbar>\n            </AppBar>\n          </nav>\n\n          {/* A <Switch> looks through its children <Route>s and\n              renders the first one that matches the current URL. */}\n          <Switch>\n            <Route exact path=\"/\">\n              <Login completeLogin={this.setUser} />\n            </Route>\n            <Route path=\"/courseLibrary\">\n              <CourseLibrary courses={this.state.courses} user={this.state.currentUser} updateUser={this.updateUser}/>\n            </Route>\n            <Route path=\"/courseOverview/:id\">\n              <CourseOverview service={FirebaseService}></CourseOverview>\n            </Route>\n            <Route path=\"/myCourses\">\n              <MyCourses user={this.state.currentUser}></MyCourses>\n            </Route>\n            <Route path=\"/profile\">\n              <UserProfile user={this.state.currentUser} updateUser={this.updateUser}></UserProfile>\n            </Route>\n            <Route path=\"/createCourse\">\n              <CreateCourse user={this.state.currentUser} updateUser={this.updateUser} updateCourses={this.fetchCourses}></CreateCourse>\n            </Route>\n            <Route path=\"/editCourse/:id\">\n              <EditCourse user={this.state.currentUser}></EditCourse>\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    )\n  }\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}