{"version":3,"sources":["components/CourseCard/CourseCard.js","components/CourseLibrary/CourseLibraryToolbar/SearchBar/SearchBar.component.js","components/CourseLibrary/CourseLibraryToolbar/CourseLibraryToolbarMenu/CourseLibraryToolbarMenuItem/CourseLibraryToolbarMenuItem.component.js","components/CourseLibrary/CourseLibraryToolbar/CourseLibraryToolbarMenu/CourseLibraryToolbarMenu.component.js","components/CourseLibrary/CourseLibraryToolbar/CourseLibraryToolbar.component.js","service/firebase.service.js","components/CourseLibrary/CourseLibrary.js","components/Login/Login.js","components/CoursesDropdown/CoursesDropdown.component.js","components/MyCourses/MyCourses.js","components/UserProfile/EditDialog/EditDialog.component.js","components/UserProfile/UserProfileSection/UserProfileSection.component.js","components/UserProfile/UserProfile.js","components/CreateCourse/CreateCourseDialog/CreateCourseDialog.component.js","components/CreateCourse/CreateCourse.component.js","components/CourseOverview/CourseNavigationPane/CourseChapterPanel/CourseChapterPanel.component.js","components/CourseOverview/CourseNavigationPane/CourseNavigationPane.component.js","components/CourseOverview/CourseOverviewPane/CourseLesson/CourseLesson.component.js","components/CourseOverview/CourseOverviewPane/CourseOverviewPane.component.js","components/CourseOverview/Dialogs/CreateChapterDialog/CreateChapterDialog.component.js","components/CourseOverview/Dialogs/CreateLessonDialog/CreateLessonDialog.component.js","components/CourseOverview/Dialogs/EditCourseOverviewDialog/EditCourseOverviewDialog.component.js","components/CourseOverview/CourseOverview.component.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","maxWidth","minWidth","maxHeight","minHeight","position","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","actionsRow","bottom","left","content","paddingBottom","CourseCard","props","classes","React","useState","isFavorited","setIsFavorited","isCourseAFavorite","Card","variant","className","CardHeader","title","course","subheader","owner","displayName","action","IconButton","aria-label","onClick","removeFavoriteClicked","favoriteClicked","CardMedia","image","CardContent","Typography","color","component","description","CardActions","disableSpacing","Button","Link","to","id","SearchBar","TextField","value","searchValue","onChange","type","onSearchClicked","CourseLibraryToolbarMenuItem","FormControlLabel","control","Radio","label","CourseLibraryToolbarMenu","menuItems","options","map","option","handleClick","associatedClickFunction","display","Menu","menuId","anchorEl","element","keepMounted","open","Boolean","onClose","closeFunction","MenuItem","FormControl","FormLabel","menuLabel","RadioGroup","name","radioGroupName","menuValue","event","target","CourseLibraryToolbar","menuButtons","menuItem","clickedFunction","buttonText","menus","menuOptions","AppBar","Toolbar","searchInfo","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","getUserById","userId","collection","doc","get","getAllUsers","updateUser","updates","a","set","merge","createUser","userAuth","uid","photoURL","email","getCurrentUser","user","auth","currentUser","logUserInUser","isGoog","provider","GoogleAuthProvider","FacebookAuthProvider","users","undefined","authUser","then","queryResults","forEach","data","push","signInWithPopup","result","u","catch","error","console","log","signOut","document","cookie","deleteUser","delete","createCourse","courseInfo","storage","userDocRef","lessonRef","chapter","lessons","add","chapters","courseDoc","usersCreatedCourses","createdCoursesRefs","length","courseRef","updateObject","favoriteCourse","favoritedCourses","favoritedCoursesRefs","removeFavoriteCourse","filter","item","updateCourse","courseId","updateCourseOverview","contentJSON","JSON","stringify","overview","addNewChapter","newChapterInfo","lessonsRef","addNewLesson","chapterInfo","lessonInfo","lessonDoc","getCourseByIdEvaluatePromise","courseResult","exists","getDocFromDocRef","docRef","myResult","CourseLibrary","sortByClicked","setState","sortByElement","currentTarget","sortByHandleClose","sortFilterValue","topicClicked","topicElement","topicHandleClose","topicFilterValue","organizationClicked","organizationElement","organizationHandleClosed","organizationFilterValue","buildMenuItems","state","find","favoritedCourse","handleSearchChange","bind","handleSearchClicked","e","this","FirebaseService","listItems","courses","Grid","s","class","container","spacing","Component","LoginPage","loginGoogle","loginFacebook","completeLogin","history","withRouter","CoursesDropdownComponent","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","xs","md","List","dense","ListItem","RouterLink","includeEditIcon","CurrentCoursesComponent","currentCourses","PastCoursesComponent","pastCourses","SavedCoursesComponent","savedCourses","CreatedCoursesComponent","createdCourses","MyCourses","setUser","useEffect","courseComponentList","hasCourses","pastCourse","CssBaseline","Container","Paper","CircularProgress","EditDialog","Dialog","isOpen","handleClose","aria-labelledby","DialogTitle","field","DialogContent","DialogContentText","autoFocus","margin","fullWidth","DialogActions","handleSubmit","userKeyToDisplayMap","UserProfileSection","align","displayValue","openDialog","isDialogOpen","displayKey","setDisplayName","oldDisplayName","setOldDiplayName","isDisplayNameDialogOpen","setIsDisplayNameDialogOpen","userInterests","setUserInterests","oldUserInterests","setOldUserInterests","isUserInterestsDialogOpen","setIsUserInterestsDialogOpen","res","interests","err","Divider","CreateCourseDialog","setDescription","setTitle","courseDetails","CreateCourse","isCreateCourseDialogOpen","setIsCreateCourseDialogOpen","useHistory","sectionTitle","updateCourses","currnetCoursesSection","CourseChapterPanel","addNewLessonButton","lessonItems","lesson","setChapterInContext","setActiveLesson","listItemClicked","button","ListItemText","primary","editable","openLessonModal","CourseNavigationPane","addNewChapterButton","courseNavigationPanels","activeLesson","openCreateChapterDialog","EditCourseLesson","urlValue","url","video","includes","myParamters","split","URLSearchParams","videoId","opts","width","playerVars","autoplay","onReady","pauseVideo","CourseOverviewPane","openEditCourseOverviewDialogButton","openEditCourseOverviewDialog","contentStateObj","parse","editorState","EditorState","createWithContent","convertFromRaw","toolbarHidden","readOnly","ContentState","createFromText","activeChapter","CreateChapterDialog","CreateLessonDialog","setVideo","EditCourseOverviewDialog","contentState","setContentState","setEditorState","createEmpty","editorClassName","handleKeyCommand","command","newState","RichUtils","onEditorStateChange","currentContentState","getCurrentContent","convertToRaw","dialogs","viewPublishedCourseButton","useParams","setCourse","isCreateChapterDialogOpen","setIsCreateChapterDialogOpen","isCreateLessonDialogOpen","setIsCreateLessonDialogOpen","isEditCourseOverviewDialogOpen","setIsEditCourseOverviewDialogOpen","chapterInContext","getCourseById","resolveLessons","Promise","all","results","resolve","resolveChapters","createMuiTheme","palette","light","main","dark","secondary","typography","useNextVariants","overrides","MuiButton","textTransform","App","fetchCourses","fetchUsers","render","getUserOnLoad","pastCoursesRefs","some","trim","startsWith","cookieValue","replace","hidden","exact","path","window","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.f7c59af5.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { Button } from '@material-ui/core';\nimport {Link} from 'react-router-dom'\nimport FavoriteBorderOutlinedIcon from '@material-ui/icons/FavoriteBorderOutlined';\n\n\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: 345,\n    minWidth: 345,\n    maxHeight: 400,\n    minHeight: 400,\n    position: 'relative',\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n  actionsRow: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0\n  }, \n  content: {\n    paddingBottom: '1rem'\n  }\n}));\n\nexport default function CourseCard(props) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n  const [isFavorited, setIsFavorited] = React.useState(false)\n\n\n  if ( props.isCourseAFavorite != isFavorited){\n    setIsFavorited(props.isCourseAFavorite);\n  }\n\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  const favoriteButtonClicked = () => {\n    if (isFavorited) {\n      setIsFavorited(false);\n      props.removeFavoriteClicked(props.course);\n    } else {\n      setIsFavorited(true);\n      props.favoriteClicked(props.course);\n    }\n   \n  }\n\n  return (\n    <Card variant=\"outlined\" className={classes.root}>\n      <CardHeader\n        title={props.course.title}\n        subheader={props.course.owner.displayName}\n        action={\n          <IconButton aria-label=\"add to favorites\" onClick={favoriteButtonClicked}>\n           { isFavorited ? <FavoriteIcon /> : <FavoriteBorderOutlinedIcon />  } \n          </IconButton>\n        }\n      />\n      <CardMedia\n        className={classes.media}\n        image=\"/static/images/cards/paella.jpg\"\n        title=\"Paella dish\"\n      />\n      <CardContent className={classes.content}>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {props.course.description}\n        </Typography> \n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {props.course.owner.displayName}\n        </Typography>\n      </CardContent>\n      <CardActions className={classes.actionsRow} disableSpacing>\n        <Button \n          variant=\"contained\" \n          color=\"secondary\"\n          component={Link}\n          to={`/courseOverview/${props.course.id}`}\n          >\n            Overview\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}","import React from 'react';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport { IconButton  } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\n\nimport './SearchBar.css';\n\nfunction SearchBar(props) {\n    return(\n      <div className=\"search-bar\">\n          <TextField value={props.searchValue} onChange={props.onChange} id=\"outlined-search\" type=\"search\" variant=\"outlined\"  color=\"black\"/>\n          <IconButton className=\"menu-button\" onClick={props.onSearchClicked}>\n            <SearchIcon className=\"search-bar-icon\" />\n          </IconButton>\n      </div>\n    )\n  }\n\n  export default SearchBar\n  \n\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Radio from '@material-ui/core/Radio';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\n\nfunction CourseLibraryToolbarMenuItem(props){\n    return (\n      <FormControlLabel value={props.value} control={<Radio />} label={props.value} />\n    )\n  }\n\n  export default CourseLibraryToolbarMenuItem","import React from 'react';\n\nimport Menu from '@material-ui/core/Menu';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport CourseLibraryToolbarMenuItem from './CourseLibraryToolbarMenuItem/CourseLibraryToolbarMenuItem.component';\n\n\n\nfunction CourseLibraryToolbarMenu(props){\n\n  let menuItems = props.options.map( option => {\n    return (\n      <CourseLibraryToolbarMenuItem\n        handleClick={option.associatedClickFunction}\n        value={option.display}>\n      </CourseLibraryToolbarMenuItem>\n    )\n  })\n\n  const onChangeFunction = (event) => {\n    props.closeFunction(event.target.value)\n  }\n\n    return (\n      <Menu\n          id={props.menuId}\n          anchorEl={props.element}\n          keepMounted\n          open={Boolean(props.element)}\n          onClose={props.closeFunction}\n        >\n          <MenuItem>\n            <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">{props.menuLabel}</FormLabel>\n            <RadioGroup aria-label=\"gender\" name={props.radioGroupName} value={props.menuValue} onChange={onChangeFunction}>\n              {menuItems}\n            </RadioGroup>\n            </FormControl>\n          </MenuItem>\n      </Menu>\n    )\n  }\n\n  export default CourseLibraryToolbarMenu","import React from 'react';\n\nimport {AppBar, Toolbar, IconButton, Typography } from '@material-ui/core';\nimport {Button} from '@material-ui/core';\n\nimport SearchBar from './SearchBar/SearchBar.component';\nimport CourseLibraryToolbarMenu from './CourseLibraryToolbarMenu/CourseLibraryToolbarMenu.component'\n\n\n//<CourseLibraryMenu handleClose={this.handleClose} sortByElement={props.state.sortByElement}></CourseLibraryMenu>\n\n\nfunction CourseLibraryToolbar(props){\n\n    let menuButtons = props.menuItems.map(menuItem => {\n        return (\n            <Button\n                color=\"inherit\" \n                className=\"menu-button\"\n                onClick={menuItem.clickedFunction}\n            >\n                {menuItem.buttonText}\n            </Button>\n        )\n    })\n\n    let menus = props.menuItems.map(menuItem => {\n        return(\n            <CourseLibraryToolbarMenu\n                element={menuItem.element}\n                closeFunction = {menuItem.closeFunction}\n                options={menuItem.menuOptions}\n                menuId={menuItem.menuId}\n                menuLabel={menuItem.buttonText}\n            >\n            </CourseLibraryToolbarMenu>\n        )\n    })\n\n    return(\n        <AppBar position=\"static\" className=\"course-library-app-bar\">\n            <Toolbar>\n                {menuButtons}\n                <SearchBar searchValue={props.searchInfo.value} onChange={props.searchInfo.onChange} onSearchClicked={props.searchInfo.onClick}></SearchBar>\n            </Toolbar>\n            {menus}\n      </AppBar>\n    )\n}\n\nexport default CourseLibraryToolbar","// import * as firebase from \"firebase/app\";\n// import \"firebase/firestore\";\n// import \"firebase/auth\";\nimport firebase from 'firebase'\nimport { useRadioGroup } from '@material-ui/core';\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyA8tAHYGUiNkFHq6452W4Qr79eibVmtRZA\",\n    authDomain: \"mooc-in-a-box.firebaseapp.com\",\n    databaseURL: \"https://mooc-in-a-box.firebaseio.com\",\n    projectId: \"mooc-in-a-box\",\n    storageBucket: \"mooc-in-a-box.appspot.com\",\n    messagingSenderId: \"594314585164\",\n    appId: \"1:594314585164:web:3ae152452d1c238af100e9\",\n    measurementId: \"G-LXH34JCXZS\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\n\n\nexport const getUserById = userId => {\n    return db.collection('Users').doc(userId).get();\n}\n\n\nexport const getCourseById = courseId => {\n    return db.collection('Course')\n        .doc(courseId)\n        .get();\n};\n\nexport const getAllCourses = () => {\n    return db.collection('Course').get();\n}\n\nexport const getAllUsers = () => {\n    return db.collection('Users').get();\n}\n\nexport const updateUser = async (userId, updates) => {\n    return db.collection('Users')\n        .doc(userId)\n        .set(updates, { merge: true })\n}\n\nexport const createUser = async (userAuth) => {\n    return db.collection('Users')\n        .doc(userAuth.uid)\n        .set({\n            id: userAuth.uid,\n            name: userAuth.displayName,\n            photoURL: userAuth.photoURL,\n            email: userAuth.email,\n        },\n            { merge: true }\n        )\n}\n\nexport const getCurrentUser = () => {\n    var user = firebase.auth().currentUser;\n    if (user) {\n        return user;\n    } else {\n        return undefined;\n    }\n}\n\nexport const logUserInUser = async (isGoog) => {\n    let provider;\n    isGoog ? provider = new firebase.auth.GoogleAuthProvider() :\n        provider = new firebase.auth.FacebookAuthProvider();\n    let users = [];\n    let currentUser = undefined;\n    let authUser = undefined;\n    // Get all users so we can see if the logged in one is one of ours.\n    // TODO(jessi): store this data so we don't need to fetch it, or directly ask for the user\n    // once they log in and if no user exists create one. Sounds like work.\n    await getAllUsers()\n        .then((queryResults) => {\n            queryResults.forEach((doc) => {\n                const user = doc.data();\n                user.id = doc.id;\n                users.push(user);\n            })\n        });\n\n    return await firebase.auth().signInWithPopup(provider).then(async function (result) {\n        authUser = result.user;\n        users.forEach(u => {\n            if (u.id === authUser.uid) {\n                currentUser = u;\n            }\n        });\n        // Didn't find an existing user.\n        if (currentUser === undefined) {\n            // Create new user\n            await createUser(authUser).then(async () => {\n                // Get the new user to return\n                return getCurrentUser();\n            }).catch(error => {\n                console.log(error);\n            });\n        }\n        return currentUser;\n    }).catch(function (error) {\n        console.log(error);\n    });\n}\n\nexport const signOut = async () => {\n    return await firebase.auth().signOut().then(function () {\n        document.cookie = 'userid=; expires=Thu, 01 Jan 1970 00:00:01 GMT;';\n        return true;\n    }).catch(function (error) {\n        console.log(error);\n        return false;\n    });\n}\n\nexport const deleteUser = async () => {\n    var user = firebase.auth().currentUser;\n\n    return await user.delete().then(function () {\n        document.cookie = 'userid=; expires=Thu, 01 Jan 1970 00:00:01 GMT;';\n        return true;\n    }).catch(function (error) {\n        console.log(error);\n        return false;\n    });\n}\n\n\nexport const createCourse = async (user, courseInfo) => {\n    var storage = firebase.storage();\n    const userDocRef = db.doc(`Users/${user.id}`)\n    const lessonRef = db.doc(courseInfo.chapter.lessons);\n    courseInfo.chapter.lessons = lessonRef;\n    return await db.collection('Course').add({\n        owner: userDocRef,\n        title: courseInfo.title,\n        description: courseInfo.description,\n        chapters: courseInfo.chapters\n    })\n        .then(async courseDoc => {\n            let usersCreatedCourses;\n            if (user.createdCoursesRefs && user.createdCoursesRefs.length > 0) {\n                usersCreatedCourses = user.createdCoursesRefs;\n            } else {\n                usersCreatedCourses = []\n            }\n\n            const courseRef = db.doc(`Course/${courseDoc.id}`)\n            usersCreatedCourses.push(courseRef);\n            const updateObject = {\n                createdCoursesRefs: usersCreatedCourses\n            }\n\n            return await updateUser(user.id, updateObject);\n        })\n}\n\nexport const favoriteCourse = async (user, courseInfo) => {\n    const courseRef = db.doc(`Course/${courseInfo.id}`)\n    let favoritedCourses;\n\n    if (user.favoritedCoursesRefs && user.favoritedCoursesRefs.length > 0) {\n        favoritedCourses = user.favoritedCoursesRefs;\n    } else {\n        favoritedCourses = []\n    }\n\n    favoritedCourses.push(courseRef);\n\n    const updateObject = {\n        favoritedCoursesRefs: favoritedCourses\n    }\n\n    return await updateUser(user.id, updateObject);\n}\n\nexport const removeFavoriteCourse = async (user, courseInfo) => {\n    const favoritedCourses = user.favoritedCoursesRefs.filter(item => item.id !== courseInfo.id);\n    const updateObject = {\n        favoritedCoursesRefs: favoritedCourses\n    }\n\n    return await updateUser(user.id, updateObject);\n}\n\n\nexport const updateCourse = async (courseId, updates) => {\n    return db.collection('Course')\n        .doc(courseId)\n        .set(updates, { merge: true })\n}\n\nexport const updateCourseOverview = async (course, content) => {\n    const contentJSON = JSON.stringify(content);\n\n    const updateObject = {\n        overview: contentJSON\n    }\n\n    return await updateCourse(course.id, updateObject);\n\n}\n\nexport const addNewChapter = async (course, newChapterInfo) => {\n    const chapter = {}\n    chapter.title = newChapterInfo.title;\n    chapter.description = newChapterInfo.description;\n    chapter.id = 0\n    chapter.lessonsRef = [];\n\n    if (course.chapters && course.chapters.length > 0) {\n        course.chapters.push(chapter);\n    } else {\n        course.chapters = [];\n        course.chapters.push(chapter);\n    }\n\n    const updateObject = {\n        chapters: course.chapters\n    }\n\n    return await updateCourse(course.id, updateObject);\n\n}\n\nexport const addNewLesson = async (course, chapterInfo, lessonInfo) => {\n\n    return await db.collection('Course').doc(course.id).collection('Lessons').add(lessonInfo)\n        .then(async lessonDoc => {\n            console.log(\"Lesson Doc\", lessonDoc)\n            console.log(`Course/${course.id}/Lessons/${lessonDoc.id}`);\n            const lessonRef = db.doc(`Course/${course.id}/Lessons/${lessonDoc.id}`);\n            const chapters = course.chapters.map(chapter => {\n                if (chapter === chapterInfo) {\n                    chapter.lessonsRef.push(lessonRef);\n                }\n                return chapter\n            });\n\n            const updateObject = {\n                chapters\n            }\n            return await updateCourse(course.id, updateObject)\n        });\n}\n\n\nexport const getCourseByIdEvaluatePromise = courseId => {\n    return db.collection('Course')\n        .doc(courseId)\n        .get()\n        .then(courseResult => {\n            if (courseResult.exists) {\n                const course = courseResult.data();\n                course.id = courseId;\n                return course;\n            } else {\n                return null\n            }\n        });\n};\n\nexport const getDocFromDocRef = docRef => {\n    return docRef.get()\n        .then(result => {\n            if (result.exists) {\n                const myResult = result.data();\n                myResult.id = result.id;\n                console.log(myResult);\n                return myResult;\n            } else {\n                return null;\n            }\n        })\n}","import React from 'react';\nimport './CourseLibrary.css';\nimport {Button} from '@material-ui/core';\nimport CourseCard from '../CourseCard/CourseCard';\nimport { render } from '@testing-library/react';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Grid from '@material-ui/core/Grid';\nimport {AppBar, Toolbar, IconButton, Typography } from '@material-ui/core';\nimport SearchBar from './CourseLibraryToolbar/SearchBar/SearchBar.component';\nimport CourseLibraryMenu from './CourseLibraryToolbar/CourseLibraryToolbarMenu/CourseLibraryToolbarMenu.component'\nimport CourseLibraryToolbar from './CourseLibraryToolbar/CourseLibraryToolbar.component'\n\nimport * as FirebaseService from '../../service/firebase.service';\n\n\nclass CourseLibrary extends React.Component {\n  constructor(props) {\n    super(props);\n    // Bind Search\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n    this.handleSearchClicked = this.handleSearchClicked.bind(this);\n    // Bind Sort By\n    this.sortByClicked = this.sortByClicked.bind(this);\n    this.sortByHandleClose = this.sortByHandleClose.bind(this);\n    // Bind Topic\n    this.topicClicked = this.topicClicked.bind(this);\n    this.topicHandleClose = this.topicHandleClose.bind(this);\n    // Bind Organization\n    this.organizationClicked = this.organizationClicked.bind(this);\n    this.organizationHandleClosed = this.organizationHandleClosed.bind(this);\n\n    this.buildMenuItems = this.buildMenuItems.bind(this);\n    this.favoriteClicked = this.favoriteClicked.bind(this);\n    this.removeFavoriteClicked = this.removeFavoriteClicked.bind(this);\n\n    this.state = {\n      searchValue: \"\",\n      sortByElement: null,\n      topicElement: null,\n      organizationElement: null,\n      sortFilterValue: null,\n      topicFilterValue: null,\n      organizationFilterValue:null\n\n    }\n  }\n\n  /** Search Function */\n  handleSearchChange(e){\n    this.setState({\n      searchValue: e.target.value\n    })\n  }\n\n  handleSearchClicked(e){\n  }\n\n  /** Sort By Functions */\n  sortByClicked = event => {\n    this.setState({\n      sortByElement: event.currentTarget\n    });\n  };\n\n  sortByHandleClose = (value) => {\n    this.setState({\n      sortByElement: null,\n      sortFilterValue: value\n    });\n  };\n\n\n  /** Topic Functions */\n  topicClicked = event => {\n    this.setState({\n      topicElement: event.currentTarget\n    });\n  };\n\n  topicHandleClose = (value) => {\n    this.setState({\n      topicElement: null,\n      topicFilterValue: value\n    });\n  };\n\n  /** Organization functions */\n  organizationClicked = event => {\n    this.setState({\n      organizationElement: event.currentTarget\n    });\n  };\n\n  organizationHandleClosed = (value) => {\n    this.setState({\n      organizationElement: null,\n      organizationFilterValue: value\n    });\n  };\n\n  async favoriteClicked(course) {\n    await FirebaseService.favoriteCourse(this.props.user, course);\n    this.props.updateUser(this.props.user.id)\n  }\n\n  async removeFavoriteClicked(course){\n    await FirebaseService.removeFavoriteCourse(this.props.user, course);\n    this.props.updateUser(this.props.user.id)\n\n  }\n\n  buildMenuItems = () => {\n    const sortByInfo = {\n      buttonText: \"Sort By\",\n      menuId: \"menu-sort-by\",\n      clickedFunction: this.sortByClicked,\n      closeFunction: this.sortByHandleClose,\n      element: this.state.sortByElement,\n      radioGroupName: \"menuRadio\",\n      menuValue: this.state.sortFilterValue,\n      menuOptions: [\n        {\n          display: \"Newest\",\n          associatedClickFunction:  this.sortByHandleClose\n        },\n        {\n          display: \"Recommended\",\n          associatedClickFunction:  this.sortByHandleClose\n        },\n        {\n          display: \"Trending\",\n          associatedClickFunction:  this.sortByHandleClose\n        }\n      ]\n    }\n\n    const topicInfo = {\n      buttonText: \"Topic\",\n      menuId: \"menu-topic\",\n      clickedFunction: this.topicClicked,\n      element: this.state.topicElement,\n      closeFunction: this.topicHandleClose,\n      radioGroupName: \"topicRadio\",\n      menuValue: this.state.topicFilterValue,\n      menuOptions: [\n        {\n          display: \"Science\",\n          associatedClickFunction:  this.topicHandleClose\n        },\n        {\n          display: \"Technology\",\n          associatedClickFunction:  this.topicHandleClose\n        },\n        {\n          display: \"History\",\n          associatedClickFunction:  this.topicHandleClose\n        },\n        {\n          display: \"Arts\",\n          associatedClickFunction:  this.topicHandleClose\n        }\n      ]\n    }\n\n    const organizationInfo = {\n      buttonText: \"Organization\",\n      menuId: \"menu-organization\",\n      clickedFunction: this.organizationClicked,\n      element: this.state.organizationElement,\n      closeFunction: this.organizationHandleClosed,\n      radioGroupName: \"organizationRadio\",\n      menuValue: this.state.organizationFilterValue,\n      menuOptions: [\n        {\n          display: \"Required\",\n          associatedClickFunction:  this.organizationHandleClosed\n        },\n        {\n          display: \"Recommended\",\n          associatedClickFunction:  this.organizationHandleClosed\n        },\n        {\n          display: \"All Courses\",\n          associatedClickFunction:  this.organizationHandleClosed\n        }\n      ]\n    }\n\n    return [sortByInfo, topicInfo, organizationInfo];\n  }\n\n  isCourseAFavorite = (user, course) => {\n    \n    if( user.favoritedCourses && user.favoritedCourses.length > 0 ){\n      return user.favoritedCourses\n        .find(favoritedCourse => favoritedCourse.id === course.id);\n    }\n    return false;\n  }\n\n\n  render() {\n    // Mappings\n    const menuItems = this.buildMenuItems();\n    const favoriteClicked = this.favoriteClicked;\n    const isCourseAFavorite = this.isCourseAFavorite;\n    const removeFavoriteClicked = this.removeFavoriteClicked\n\n    const user = this.props.user;\n    const searchInfo = {\n      value: this.state.searchValue,\n      onChange: this.handleSearchChange,\n      onClick: this.handleSearchClicked\n    }\n    let listItems = []\n    if (user) {\n      listItems = this.props.courses.map(function(item) {\n        return (\n            <Grid item s={4}>\n              <CourseCard course={item} favoriteClicked={favoriteClicked} removeFavoriteClicked={removeFavoriteClicked} isCourseAFavorite={isCourseAFavorite(user, item)}></CourseCard>\n            </Grid>\n        );\n      });\n    }\n    \n    return (\n      <div class=\"course-library\">\n        <CourseLibraryToolbar menuItems={menuItems} searchInfo={searchInfo}></CourseLibraryToolbar>\n          <div className=\"course-list\">\n          <Grid container spacing={3}>\n            {listItems}\n          </Grid>\n          </div>\n      </div>\n\n      );\n  }\n}\n\nexport default CourseLibrary;\n","import React from 'react';\nimport './Login.css';\nimport { Button } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport { withRouter } from \"react-router-dom\";\nimport * as FirebaseService from '../../service/firebase.service';\n\nclass LoginPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { user: undefined };\n    this.loginGoogle = this.loginGoogle.bind(this);\n    this.loginFacebook = this.loginFacebook.bind(this);\n\n  }\n\n  async loginGoogle(event) {\n    // TODO(jessi): set a loading state\n    await FirebaseService.logUserInUser(/* isGoog= */ true).then(u => {\n      this.props.completeLogin(u);\n      this.props.history.push(\"/myCourses\");\n    });\n    // TODO(jessi): unset loading state\n  }\n\n  async loginFacebook(event) {\n    // TODO(jessi): set a loading state\n    await FirebaseService.logUserInUser(/* isGoog= */ false).then(u => {\n      this.props.completeLogin(u);\n      this.props.history.push(\"/myCourses\");\n    });\n    // TODO(jessi): unset loading state\n  }\n\n  render() {\n    // TODO(jessi): style these buttons, remove this page from nav\n    return (\n      <div className=\"login\">\n        <h1>Sign into Mooc in a Box</h1>\n        <Button color=\"inherit\" className=\"menu-button\" onClick={this.loginFacebook}>\n          Sign in with Facebook\n      </Button>\n        <Button color=\"inherit\" className=\"menu-button\" onClick={this.loginGoogle}>\n          Sign in with Google\n      </Button>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(LoginPage);\n","import React, { useState } from 'react';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport {Button} from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\n\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Grid from '@material-ui/core/Grid';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { IconButton } from '@material-ui/core';\n\nfunction CoursesDropdownComponent(props) {\n    return (\n      <ExpansionPanel>\n              <ExpansionPanelSummary\n              expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel1a-content\"\n              id=\"panel1a-header\"\n              >\n              <Typography variant=\"subtitle2\">{props.courses.length} Course(s)</Typography>\n              </ExpansionPanelSummary>\n              <ExpansionPanelDetails>\n              <Grid container spacing={2}>\n                  <Grid item xs={12} md={6}>\n                      <div>\n                          <List dense=\"true\">\n                          {\n                            props.courses.map( course => {\n                              return (\n                                <span>\n                                  <ListItem \n                                  >\n                                    <Button\n                                      component={RouterLink} \n                                      to={`/courseOverview/${course.id}`}\n                                    >\n                                      {course.title}\n                                    </Button>\n                                    { props.includeEditIcon && \n                                      <IconButton \n                                        className=\"menu-button\" \n                                        color=\"inherit\" \n                                        aria-label=\"menu\"\n                                        component={RouterLink}\n                                        to={`/editCourse/${course.id}`}\n                                      >\n                                        <EditIcon/>\n                                      </IconButton>\n                                    }\n                                  </ListItem>\n                                </span>\n                                \n                              )\n                            })\n                          }\n                          </List>\n                      </div>\n                      </Grid>\n                  </Grid>\n              </ExpansionPanelDetails>\n          </ExpansionPanel>\n    )\n  }\n\n  export default CoursesDropdownComponent;\n","import React, { useState } from 'react';\nimport './MyCourses.css';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport { Button } from '@material-ui/core';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Link } from 'react-router-dom'\n\nimport EditIcon from '@material-ui/icons/Edit';\nimport { IconButton } from '@material-ui/core';\n\nimport CoursesDropdownComponent from '../CoursesDropdown/CoursesDropdown.component';\n\n\n\n/**\n * \n * http://localhost:3000/courseOverview/rlfxOavBn4nPZLNTRMkL\n * http://localhost:3000/courseOverview/rlfxOavBn4nPZLNTRMkL\n */\n\n/**\n * \n * \n */\n\n\n\nfunction generate(element) {\n  return React.cloneElement(element, {\n    key: element,\n  })\n}\n\nfunction CurrentCoursesComponent(props) {\n  let numberOfCourses = props.currentCourses.length;\n\n  return (\n    <div>\n      <h1> Current Courses </h1>\n      <CoursesDropdownComponent courses={props.currentCourses}></CoursesDropdownComponent>\n    </div>\n  )\n}\n\n\nfunction PastCoursesComponent(props) {\n  return (\n    <div>\n      <h1> Past Courses </h1>\n      <CoursesDropdownComponent courses={props.pastCourses}></CoursesDropdownComponent>\n    </div>\n  )\n}\n\nfunction SavedCoursesComponent(props) {\n  return (\n    <div>\n      <h1> Favorited Courses </h1>\n      <CoursesDropdownComponent courses={props.savedCourses}></CoursesDropdownComponent>\n    </div>\n  )\n}\n\nfunction CreatedCoursesComponent(props) {\n  return (\n    <div>\n      <h1> Created Courses </h1>\n      <CoursesDropdownComponent courses={props.createdCourses} includeEditIcon={true}></CoursesDropdownComponent>\n    </div>\n  )\n}\n\n\n\nfunction MyCourses(props) {\n\n  const [user, setUser] = useState();\n\n  React.useEffect(() => {\n    setUser(props.user);\n  }, [props]);\n\n\n  if (user) {\n    const courseComponentList = []\n    let hasCourses = false;\n\n\n    if (user.currentCourses && user.currentCourses.length > 0) {\n      const element = <CurrentCoursesComponent currentCourses={user.currentCourses}></CurrentCoursesComponent>\n      courseComponentList.push(element);\n      hasCourses = true;\n    }\n\n    if (user.pastCourses && user.pastCourse.length > 0) {\n      const element = <PastCoursesComponent pastCourses={user.pastCourses}></PastCoursesComponent>\n      courseComponentList.push(element);\n      hasCourses = true;\n\n    }\n\n    if (user.favoritedCourses && user.favoritedCourses.length > 0) {\n      const element = <SavedCoursesComponent savedCourses={user.favoritedCourses}></SavedCoursesComponent>\n      courseComponentList.push(element);\n      hasCourses = true;\n\n    }\n\n    if (user.createdCourses && user.createdCourses.length > 0) {\n      const element = <CreatedCoursesComponent createdCourses={user.createdCourses}></CreatedCoursesComponent>\n      courseComponentList.push(element);\n      hasCourses = true;\n\n    }\n    if (hasCourses) {\n      return (\n        <div className=\"MyCourses\">\n          <CssBaseline />\n          <Typography className=\"center\" variant=\"h3\" component=\"h3\">\n            My Courses\n          </Typography>\n          <Container maxWidth=\"lg\">\n            <Paper className=\"paper\">\n              {\n                courseComponentList.map(element => element)\n              }\n            </Paper>\n          </Container>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"MyCourses\">\n          <CssBaseline />\n          <Typography className=\"center\" variant=\"h3\" component=\"h3\">\n            My Courses\n            </Typography>\n          <Container maxWidth=\"lg\">\n            <Paper className=\"paper\">\n              <h4>You don't have any courses saved yet!</h4>\n            </Paper>\n          </Container>\n        </div>\n      )\n    }\n\n\n  } else {\n    return (\n      <div>\n        Loading..\n        <CircularProgress></CircularProgress>\n      </div>\n    )\n  }\n\n}\n\nexport default MyCourses;\n","import React from 'react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {Button} from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\n\nfunction EditDialog(props){\n    return (\n      <div>\n        <Dialog open={props.isOpen} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n          <DialogTitle id=\"form-dialog-title\">{props.field}</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              Edit the Field below to update your {props.field}\n            </DialogContentText>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"name\"\n              label={props.field}\n              value={props.value}\n              onChange={props.onChange}\n              type=\"email\"\n              fullWidth\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={props.handleClose} color=\"secondary\">\n              Cancel\n            </Button>\n            <Button onClick={props.handleSubmit} color=\"secondary\">\n              Submit\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    )\n  }\n\n  export default EditDialog","import React from 'react';\n\n\nimport Typography from '@material-ui/core/Typography';\nimport { IconButton } from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport EditDialog from '../EditDialog/EditDialog.component';\n\nconst userKeyToDisplayMap = {\n    \"displayName\": \"Display Name\",\n    \"email\": \"Email Address\",\n    \"password\": \"Password\"\n  }\n\nfunction UserProfileSection(props){\n    return (\n      <div>\n        <Typography align=\"center\" variant=\"h6\" component=\"h6\">\n          <strong>{props.displayValue}</strong>\n        </Typography>\n        <Typography align=\"center\" variant=\"body1\" component=\"body1\">\n          <span>\n          {props.value}\n            <IconButton className=\"menu-button\" color=\"inherit\" aria-label=\"menu\">\n              <EditIcon onClick={props.openDialog}/>\n            </IconButton>\n          </span>\n        </Typography>\n        <EditDialog \n          isOpen={props.isDialogOpen}\n          handleClose={props.handleClose}\n          handleSubmit={props.handleSubmit}\n          field={userKeyToDisplayMap[props.displayKey]}\n          value={props.value}\n          onChange={props.onChange}\n        />\n      </div>\n    )\n}\n\nexport default UserProfileSection\n  ","import React, { useState } from 'react';\nimport './UserProfile.css';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport Divider from '@material-ui/core/Divider';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport UserProfileSection from './UserProfileSection/UserProfileSection.component';\nimport { Button } from '@material-ui/core';\nimport { withRouter } from \"react-router-dom\";\nimport * as FirebaseService from '../../service/firebase.service';\n\nconst passwordValue = \"*******\";\n\nfunction UserProfile(props) {\n\n\n  const [displayName, setDisplayName] = useState(null);\n  const [oldDisplayName, setOldDiplayName] = useState(null);\n  const [error, setError] = useState();\n  const [isDisplayNameDialogOpen, setIsDisplayNameDialogOpen] = useState(false)\n  const [userInterests, setUserInterests] = useState(null);\n  const [oldUserInterests, setOldUserInterests] = useState(null);\n  const [isUserInterestsDialogOpen, setIsUserInterestsDialogOpen] = useState(false);\n\n\n\n  function handleDisplayNameClose() {\n    setDisplayName(oldDisplayName)\n    setIsDisplayNameDialogOpen(false)\n  }\n\n  function handleDisplayNameSubmit() {\n    FirebaseService.updateUser(props.user.id, {\n      displayName\n    }).then(result => {\n      setIsDisplayNameDialogOpen(false)\n      setOldDiplayName(displayName)\n      props.updateUser(props.user.id);\n\n    })\n      .catch(err => {\n        console.log(err);\n      })\n  }\n\n  function openDisplayNameDialog() {\n    setOldDiplayName(displayName)\n    setIsDisplayNameDialogOpen(true)\n  }\n\n  function onDisplayNameChange(e) {\n    setDisplayName(e.target.value);\n  }\n\n  /**\n   * Begin User Interests\n   */\n  function handleUserInterestsDialogClose() {\n    setUserInterests(oldUserInterests)\n    setIsUserInterestsDialogOpen(false)\n  }\n\n  function openUserInterestDialog() {\n    setOldUserInterests(userInterests)\n    setIsUserInterestsDialogOpen(true)\n  }\n\n  function onUserInterestsChange(e) {\n    setUserInterests(e.target.value);\n  }\n\n  function handleUserInterestSubmit() {\n    FirebaseService.updateUser(props.user.id, {\n      interests: userInterests\n    }).then(result => {\n      setIsUserInterestsDialogOpen(false)\n      setUserInterests(userInterests)\n      props.updateUser(props.user.id);\n    })\n      .catch(err => {\n        console.log(err);\n      })\n  }\n\n  async function signOut() {\n    await FirebaseService.signOut().then((res) => {\n      if (res) {\n        props.history.push(\"/\");\n        props.updateUser(undefined);\n      }\n      // TODO(jessi) handle error\n    });\n  }\n\n  async function deleteAccount() {\n    await FirebaseService.deleteUser().then((res) => {\n      if (res) {\n        props.history.push(\"/\");\n        props.updateUser(undefined);\n      }\n      // TODO(jessi) handle error\n    });\n  }\n\n  if (props.user && displayName === null && userInterests === null) {\n    setDisplayName(props.user.displayName)\n    setUserInterests(props.user.interests)\n  }\n\n  if (props.user) {\n    return (\n      <div className=\"userProfile\">\n        <CssBaseline />\n        <Typography className=\"center\" variant=\"h3\" component=\"h3\">\n          User Profile\n        </Typography>\n        <Container className=\"userProfile-bottom-padding\" maxWidth=\"lg\">\n          <Paper className=\"paper\">\n\n            <UserProfileSection\n              displayValue=\"User Interests\"\n              value={userInterests}\n              handleClose={handleUserInterestsDialogClose}\n              handleSubmit={handleUserInterestSubmit}\n              isDialogOpen={isUserInterestsDialogOpen}\n              openDialog={openUserInterestDialog}\n              onChange={onUserInterestsChange}\n            ></UserProfileSection>\n\n          </Paper>\n        </Container>\n        <Divider />\n\n\n        <Container maxWidth=\"lg\">\n          <Paper className=\"paper\">\n\n            <UserProfileSection\n              displayValue=\"Display Name\"\n              value={displayName}\n              handleClose={handleDisplayNameClose}\n              handleSubmit={handleDisplayNameSubmit}\n              isDialogOpen={isDisplayNameDialogOpen}\n              openDialog={openDisplayNameDialog}\n              onChange={onDisplayNameChange}\n            ></UserProfileSection>\n            <Divider />\n            <UserProfileSection displayValue=\"Email\" value={props.user.email}></UserProfileSection>\n            <Divider />\n            <UserProfileSection displayValue=\"Password\" value={passwordValue}></UserProfileSection>\n            <Button color=\"inherit\" className=\"menu-button\" onClick={signOut}>\n              Sign out\n            </Button>\n            <Button color=\"inherit\" className=\"menu-button\" onClick={deleteAccount}>\n              Delete account\n            </Button>\n          </Paper>\n        </Container>\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        Loading..\n        <CircularProgress></CircularProgress>\n      </div>\n    )\n  }\n\n}\n\nexport default withRouter(UserProfile);\n","import React, { useState } from 'react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {Button} from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\n\nfunction CreateCourseDialog(props){\n  const [description, setDescription] = useState();\n  const [title, setTitle] = useState();\n\n  \n  function onCourseTitleChange(e){\n    setTitle(e.target.value);\n  }\n\n  function onCourseDescriptionChange(e){\n    setDescription(e.target.value);\n\n  }\n\n  function handleSubmit(){\n\n      const courseDetails = {\n          title,\n          description\n      }\n\n      props.handleSubmit(courseDetails);\n  }\n\n\n    return (\n      <div>\n        <Dialog open={props.isOpen} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n          <DialogTitle id=\"form-dialog-title\">Create A New Course</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n                Create a new course. Start by entering a title and description below!\n            </DialogContentText>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"title\"\n              label=\"Course Title\"\n              onChange={onCourseTitleChange}\n              type=\"text\"\n              fullWidth\n            />\n             <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"description\"\n              label=\"Course Description\"\n              onChange={onCourseDescriptionChange}\n              type=\"text\"\n              fullWidth\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={props.handleClose} color=\"secondary\">\n              Cancel\n            </Button>\n            <Button onClick={handleSubmit} color=\"secondary\">\n              Submit\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    )\n  }\n\n  export default CreateCourseDialog","import React, { useState } from 'react';\nimport './CreateCourse.css';\nimport { Button } from '@material-ui/core';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport Divider from '@material-ui/core/Divider';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { withRouter } from \"react-router-dom\";\nimport * as FirebaseService from '../../service/firebase.service';\nimport CreateCourseDialog from './CreateCourseDialog/CreateCourseDialog.component';\nimport CoursesDropdownComponent from '../CoursesDropdown/CoursesDropdown.component';\nimport { useHistory } from \"react-router-dom\";\n\n\nfunction CreatedCoursesComponent(props) {\n\n  return (\n    <div className=\"courses-section\">\n      <h1> Courses You've Created </h1>\n      <CoursesDropdownComponent courses={props.createdCourses} includeEditIcon={true}></CoursesDropdownComponent>\n    </div>\n  )\n}\n\nfunction CreateCourse(props) {\n  const [isCreateCourseDialogOpen, setIsCreateCourseDialogOpen] = useState(false);\n  const history = useHistory();\n\n\n  function handleCreateCourseDialogClose() {\n    setIsCreateCourseDialogOpen(false);\n  }\n\n  function openCreateCourseDialog() {\n    setIsCreateCourseDialogOpen(true);\n\n  }\n\n  async function handleSubmit(courseInfo) {\n    courseInfo.owner = props.user.id;\n\n    const chapter = {\n      id: 0,\n      lessons: \"Course/rlfxOavBn4nPZLNTRMkL/Lessons/kL5CwNARpoUhexocK7P4\",\n      sectionTitle: `${courseInfo.title} - Section`\n    }\n\n    courseInfo.chapters = []\n    courseInfo.chapter = chapter;\n    // courseInfo.chapters.push(chapter);\n\n    const response = await FirebaseService.createCourse(props.user, courseInfo)\n    setIsCreateCourseDialogOpen(false);\n    await props.updateCourses();\n    await props.updateUser(props.user.id);\n    // Navigate to Edit Course page\n    history.push(`/editCourse/${props.user.createdCoursesRefs[props.user.createdCoursesRefs.length - 1].id}`)\n  }\n\n  const hasCurrentCourses = false\n  let currnetCoursesSection = null;\n  if (props.user && props.user.createdCourses && props.user.createdCourses.length > 0) {\n    currnetCoursesSection = <CreatedCoursesComponent createdCourses={props.user.createdCourses}></CreatedCoursesComponent>\n  } else {\n    currnetCoursesSection = <h3>You have not created any courses</h3>\n  }\n\n\n  return (\n    <div className=\"Home\">\n      <CssBaseline />\n      <Typography className=\"center\" variant=\"h3\" component=\"h3\">\n        Create A Course\n        </Typography>\n      <Container className=\"userProfile-bottom-padding\" maxWidth=\"lg\">\n        <Paper className=\"paper\">\n          {\n            currnetCoursesSection\n          }\n          <span>\n            <Button variant=\"contained\" color=\"secondary\" onClick={openCreateCourseDialog}>\n              Create New Course\n              </Button>\n          </span>\n        </Paper>\n      </Container>\n      <Divider />\n\n      <CreateCourseDialog\n        isOpen={isCreateCourseDialogOpen}\n        handleClose={handleCreateCourseDialogClose}\n        handleSubmit={handleSubmit}\n        user={props.user}\n      />\n\n\n    </div>\n  );\n}\n\nexport default CreateCourse;\n","import React, { useState, useEffect } from 'react';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { Button } from '@material-ui/core';\n\nfunction CourseChapterPanel(props) {\n\n    function listItemClicked(lesson) {\n        props.setChapterInContext(props.chapter);\n        props.setActiveLesson(lesson);\n    }\n\n    let lessonItems = []\n\n    const lessonsLength = props.chapter?.lessons?.length;\n    if (lessonsLength > 0) {\n        lessonItems = props.chapter.lessons.map(lesson =>\n            <ListItem onClick={() => listItemClicked(lesson)} id={lesson.id} button>\n                <ListItemText primary={lesson.title} />\n            </ListItem>\n        )\n    } else {\n        lessonItems[0] = <ListItem> <ListItemText primary=\"No Lessons Added\" /> </ListItem>\n    }\n\n\n    function openLessonModal() {\n        props.setChapterInContext(props.chapter);\n        props.openLessonModal(true);\n    }\n\n    let addNewLessonButton;\n\n    if (props.editable) {\n        addNewLessonButton = <Button variant=\"contained\" onClick={openLessonModal} color=\"secondary\" className=\"add-content-btn\"> Add New Lesson </Button>\n    }\n\n\n    return (\n        <ExpansionPanel>\n            <ExpansionPanelSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"panel1a-content\"\n                id=\"panel1a-header\"\n            >\n                <Typography variant=\"subtitle2\">{props.chapter.title}</Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n                <Grid container spacing={2}>\n                    <Grid item xs={12} md={6}>\n                        <div>\n                            <List dense=\"true\">\n                                {lessonItems}\n                                {addNewLessonButton}\n                            </List>\n                        </div>\n                    </Grid>\n                </Grid>\n            </ExpansionPanelDetails>\n        </ExpansionPanel>\n    )\n}\n\nexport default CourseChapterPanel;","import React from 'react';\nimport './CourseNavigationPane.css';\nimport Paper from '@material-ui/core/Paper';\nimport { Button } from '@material-ui/core';\n\nimport CourseChapterPanel from './CourseChapterPanel/CourseChapterPanel.component';\n\n\n/**\n * Generate multiple function\n */\n\n\nfunction generate(element) {\n  return [0, 1, 2].map(value =>\n    React.cloneElement(element, {\n      key: value,\n    }),\n  );\n}\n\n\n\n\nfunction CourseNavigationPane(props) {\n\n  function setChapterInContext(chapter) {\n    props.setChapterInContext(chapter);\n  }\n\n  const courseOverviewClicked = () => {\n    props.setActiveLesson(undefined);\n    props.setChapterInContext(undefined);\n  }\n\n  let courseNavigationPanels = []\n  const chaptersLength = props.course?.chapters?.length;\n\n  if (chaptersLength > 0) {\n    courseNavigationPanels = props.course.chapters.map(chapter =>\n      <CourseChapterPanel editable={props.editable} setActiveLesson={props.setActiveLesson} activeLesson={props.activeLesson} openLessonModal={props.openLessonModal} setChapterInContext={setChapterInContext} chapter={chapter} />\n    )\n  }\n  \n  let addNewChapterButton;\n  if(props.editable){\n   addNewChapterButton = <Button variant=\"contained\" onClick={props.openCreateChapterDialog} color=\"secondary\"> Add New Chapter </Button> \n  }\n\n\n  return (\n    <Paper className=\"paper\">\n      <Button id=\"course-overview\"\n        onClick={courseOverviewClicked}>\n        <h1>{props.course.title}</h1>\n      </Button>\n      {courseNavigationPanels}\n      {addNewChapterButton}\n    </Paper>\n  )\n}\n\nexport default CourseNavigationPane;","import React from 'react';\nimport YouTube from 'react-youtube';\n\nfunction EditCourseLesson(props) {\n\n\n    function _onReady(event) {\n        // access to player in all event handlers via event.target\n        event.target.pauseVideo();\n      }\n\n      const opts = {\n        height: '390',\n        width: '640',\n        playerVars: {\n          // https://developers.google.com/youtube/player_parameters\n          autoplay: 1,\n        },\n      };\n   \n    \n    const defaultVideoId = \"BKorP55Aqvg\"\n    const url = props.lesson?.video;\n\n    let urlValue;\n    if (url.includes(\"youtube\") && (url.includes(\"v=\"))) {\n        const myParamters = url.split(\"?\");\n        var searchParams = new URLSearchParams(myParamters[1]);\n        urlValue = searchParams.get('v');\n    } else { \n        urlValue = defaultVideoId;\n    }\n\n    if(props.lesson){\n        return (\n            <div>\n                <h3>{props.lesson.title}</h3>\n                <h6>Link: {props.lesson.video}</h6>\n                <strong>Description: </strong>\n                <p>{props.lesson.description}</p>\n                <YouTube videoId={urlValue} opts={opts} onReady={_onReady} />\n            </div>\n        )\n    } else {\n        return (\n            <div>\n                <h5> No Lesson Details </h5>\n            </div>\n        )\n    }\n    \n}\n\nexport default EditCourseLesson;","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport CourseLesson from './CourseLesson/CourseLesson.component';\nimport { Button } from '@material-ui/core';\nimport { Editor } from 'react-draft-wysiwyg';\nimport { EditorState, convertFromRaw, ContentState } from \"draft-js\";\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\n\nfunction CourseOverviewPane(props) {\n\n    let openEditCourseOverviewDialogButton;\n    if (props.editable) {\n        openEditCourseOverviewDialogButton = <Button onClick={props.openEditCourseOverviewDialog} color=\"secondary\" variant=\"contained\"> Edit Overview </Button>\n    }\n\n    let content = undefined;\n    if (props.course.overview) {\n        const contentStateObj = JSON.parse(props.course.overview);\n        const editorState = EditorState.createWithContent(convertFromRaw(contentStateObj));\n        content = <Editor\n            toolbarHidden\n            editorState={editorState}\n            readOnly={true}\n        />\n    }\n    else {\n        content = <Editor\n            toolbarHidden\n            editorState={EditorState.createWithContent(ContentState.createFromText(\"No text entered.\"))}\n            readOnly={true}\n        />\n    }\n\n    return (\n        <Paper className=\"paper\">\n            {props.activeChapter ?\n                <div>\n                    <h2>Chapter: {props.activeChapter.title}</h2>\n                    <CourseLesson lesson={props.activeLesson} />\n                </div> :\n                <div>\n                    {content}\n                    {openEditCourseOverviewDialogButton}\n                </div>\n            }\n        </Paper>\n    )\n}\n\nexport default CourseOverviewPane;","import React, { useState } from 'react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {Button} from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\n\nfunction CreateChapterDialog(props){\n  const [description, setDescription] = useState();\n  const [title, setTitle] = useState();\n\n  \n  function onCourseTitleChange(e){\n    setTitle(e.target.value);\n  }\n\n  function onCourseDescriptionChange(e){\n    setDescription(e.target.value);\n\n  }\n\n  function handleSubmit(e){\n      const chapterInfo = {\n          title,\n          description\n      }\n\n      props.handleSubmit(chapterInfo);\n  }\n\n\n    return (\n      <div>\n        <Dialog open={props.isOpen} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n          <DialogTitle id=\"form-dialog-title\">Create New Chapter</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n                Create a new chapter within your course. Enter a title and description below.\n            </DialogContentText>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"title\"\n              label=\"Chapter Title\"\n              onChange={onCourseTitleChange}\n              type=\"text\"\n              fullWidth\n            />\n             <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"description\"\n              label=\"Chapter Description\"\n              onChange={onCourseDescriptionChange}\n              type=\"text\"\n              fullWidth\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={props.handleClose} color=\"secondary\">\n              Cancel\n            </Button>\n            <Button onClick={handleSubmit} color=\"secondary\">\n              Submit\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    )\n  }\n\n  export default CreateChapterDialog","import React, { useState } from 'react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {Button} from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\n\nfunction CreateLessonDialog(props){\n  const [description, setDescription] = useState();\n  const [title, setTitle] = useState();\n  const [video, setVideo] = useState();\n\n\n  \n  function onCourseTitleChange(e){\n    setTitle(e.target.value);\n  }\n\n  function onCourseDescriptionChange(e){\n    setDescription(e.target.value);\n\n  }\n\n  function onVideoUrlChange(e){\n      setVideo(e.target.value);\n  }\n\n\n\n  function handleSubmit(e){\n      const lessonInfo = {\n          title,\n          description,\n          video\n      }\n      props.addNewLesson(lessonInfo);\n\n  }\n\n    return (\n      <div>\n        <Dialog open={props.isOpen} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n          <DialogTitle id=\"form-dialog-title\">Create New Lesson</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n                Add a new lesson to your course\n            </DialogContentText>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"title\"\n              label=\"Lesson Title\"\n              onChange={onCourseTitleChange}\n              type=\"text\"\n              fullWidth\n            />\n             <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"description\"\n              label=\"Lesson Description\"\n              onChange={onCourseDescriptionChange}\n              type=\"text\"\n              fullWidth\n            />\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"video\"\n              label=\"Video URL\"\n              onChange={onVideoUrlChange}\n              type=\"text\"\n              fullWidth\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={props.handleClose} color=\"secondary\">\n              Cancel\n            </Button>\n            <Button onClick={handleSubmit} color=\"secondary\">\n              Submit\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    )\n  }\n\n  export default CreateLessonDialog","import React, { useState, useEffect } from 'react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Button } from '@material-ui/core';\nimport { Editor } from 'react-draft-wysiwyg';\nimport { EditorState, convertFromRaw, convertToRaw, RichUtils } from 'draft-js';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\n\nfunction EditCourseOverviewDialog(props) {\n  const [overview, setOverview] = useState();\n  const [contentState, setContentState] = useState(props.course.overview);\n  const [editorState, setEditorState] = useState();\n\n  function handleSubmit(e) {\n    const currentContentState = editorState.getCurrentContent();\n    setContentState(convertToRaw(currentContentState));\n    props.updateCourseOverview(convertToRaw(currentContentState));\n  }\n\n  useEffect(() => {\n    if (contentState) {\n      setEditorState(EditorState.createWithContent(convertFromRaw(JSON.parse(contentState))));\n    }\n    else {\n      setEditorState(EditorState.createEmpty());\n    }\n  }, []);\n\n  function onEditorStateChange(editorState) {\n    setEditorState(editorState);\n  };\n\n  function handleKeyCommand(command) {\n    const newState = RichUtils.handleKeyCommand(editorState, command);\n    if (newState) {\n      setEditorState(newState);\n      return 'handled';\n    }\n    return 'not-handled';\n  };\n\n  return (\n\n\n    <div>\n      <Dialog open={props.isOpen} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Edit Course Overview</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Edit course information, providing students with a basic description of the class and learning objectives.\n            </DialogContentText>\n          <Editor\n            editorState={editorState}\n            editorClassName=\"editor-textbox\"\n            handleKeyCommand={handleKeyCommand}\n            onEditorStateChange={onEditorStateChange}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.handleClose} color=\"secondary\">\n            Cancel\n            </Button>\n          <Button onClick={handleSubmit} color=\"secondary\">\n            Submit\n            </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n\nexport default EditCourseOverviewDialog","import React, { useEffect, useState } from 'react';\nimport './CourseOverview.css';\nimport {\n    Link as RouterLink,\n    useParams\n} from \"react-router-dom\";\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { withRouter } from \"react-router-dom\";\nimport { Button } from '@material-ui/core';\nimport * as FirebaseService from '../../service/firebase.service';\nimport CourseNavigationPane from './CourseNavigationPane/CourseNavigationPane.component';\n\nimport CourseOverviewPane from './CourseOverviewPane/CourseOverviewPane.component';\nimport CreateChapterDialog from './Dialogs/CreateChapterDialog/CreateChapterDialog.component';\nimport CreateLessonDialog from './Dialogs/CreateLessonDialog/CreateLessonDialog.component';\nimport EditCourseOverviewDialog from './Dialogs/EditCourseOverviewDialog/EditCourseOverviewDialog.component';\n\nfunction CourseOverview(props) {\n    // Get ID from Route Params\n    let { id } = useParams();\n    // Create State Variables\n    const [course, setCourse] = useState();\n    const [error, setError] = useState();\n    const [isCreateChapterDialogOpen, setIsCreateChapterDialogOpen] = useState(false);\n    const [isCreateLessonDialogOpen, setIsCreateLessonDialogOpen] = useState(false);\n    const [isEditCourseOverviewDialogOpen, setIsEditCourseOverviewDialogOpen] = useState(false);\n    const [chapterInContext, setChapterInContext] = useState();\n    const [activeLesson, setActiveLesson] = useState();\n\n\n    function handleCreateChapterClose() {\n        setIsCreateChapterDialogOpen(false);\n    }\n\n    function openCreateChapterDialog() {\n        setIsCreateChapterDialogOpen(true);\n    }\n\n    function handleCreateLessonDialogClose() {\n        setIsCreateLessonDialogOpen(false);\n    }\n\n    function openCreateLessonDialog() {\n        setIsCreateLessonDialogOpen(true);\n    }\n\n    function handleEditCourseOverviewDialogClose() {\n        setIsEditCourseOverviewDialogOpen(false);\n    }\n\n    function openEditCourseOverviewDialog() {\n        setIsEditCourseOverviewDialogOpen(true);\n    }\n\n    function viewPublished() {\n        // ensure course overview\n        setActiveLesson(undefined);\n        setChapterInContext(undefined);\n        // navigate\n        props.history.push(`/courseOverview/${course.id}`);\n    }\n\n\n    async function addNewLesson(lessonInfo) {\n        setIsCreateLessonDialogOpen(false);\n        await FirebaseService.addNewLesson(course, chapterInContext, lessonInfo);\n        getCourseById(id);\n    }\n\n    async function updateCourseOverview(overview) {\n        setIsEditCourseOverviewDialogOpen(false);\n        console.log(overview)\n        await FirebaseService.updateCourseOverview(course, overview);\n        getCourseById(id);\n    }\n\n    async function addNewChapter(chapterInfo) {\n        await FirebaseService.addNewChapter(course, chapterInfo);\n        getCourseById(id);\n    }\n\n\n    async function resolveLessons(chapter) {\n        const lessonsRefLength = chapter.lessonsRef?.length;\n        if (lessonsRefLength > 0) {\n            return Promise.all(\n                chapter.lessonsRef.map(async lessonRef => {\n                    const lesson = await FirebaseService.getDocFromDocRef(lessonRef)\n                    return lesson;\n                })\n            ).then(results => {\n                chapter.lessons = results;\n                return chapter;\n            });\n\n        } else {\n            return Promise.resolve(chapter);\n        }\n    }\n\n    async function resolveChapters(chapters) {\n        return Promise.all(chapters.map(chapter => resolveLessons(chapter)))\n    }\n\n    async function getCourseById(id) {\n        const course = await FirebaseService.getCourseByIdEvaluatePromise(id);\n        course.chapters = await resolveChapters(course.chapters);\n        setCourse(course);\n        console.log(course)\n    }\n\n    useEffect(() => {\n        if (id) {\n            getCourseById(id);\n        }\n    }, [id]);\n\n    let dialogs;\n    let viewPublishedCourseButton;\n    if (props.editable) {\n        dialogs = <div>\n            <CreateChapterDialog isOpen={isCreateChapterDialogOpen} handleSubmit={addNewChapter} handleClose={handleCreateChapterClose} />\n            <CreateLessonDialog isOpen={isCreateLessonDialogOpen} addNewLesson={addNewLesson} handleClose={handleCreateLessonDialogClose} />\n            <EditCourseOverviewDialog isOpen={isEditCourseOverviewDialogOpen} updateCourseOverview={updateCourseOverview} handleClose={handleEditCourseOverviewDialogClose} course={course} />\n        </div>\n\n        viewPublishedCourseButton = <Button variant=\"contained\" color=\"secondary\" onClick={viewPublished}> View Published Course </Button>\n    }\n\n\n\n    if (course) {\n        return (\n            <div className=\"edit-course\">\n                <Grid container spacing={3}>\n                    <Grid item xs={4}>\n                        <CourseNavigationPane editable={props.editable} activeLesson={activeLesson} setActiveLesson={setActiveLesson} openLessonModal={openCreateLessonDialog} setChapterInContext={setChapterInContext} course={course} openCreateChapterDialog={openCreateChapterDialog} />\n                    </Grid>\n                    <Grid item xs={8}>\n                        <CourseOverviewPane editable={props.editable} activeChapter={chapterInContext} activeLesson={activeLesson} course={course} openEditCourseOverviewDialog={openEditCourseOverviewDialog} />\n                    </Grid>\n                    {viewPublishedCourseButton}\n                </Grid>\n                {dialogs}\n            </div>\n        );\n    } else {\n        return (\n            <div>\n                Loading...\n                <CircularProgress></CircularProgress>\n            </div>\n        )\n    }\n\n\n}\n\nexport default withRouter(CourseOverview);","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { AppBar, Toolbar, IconButton, Typography, Button, } from '@material-ui/core';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport CourseLibrary from './components/CourseLibrary/CourseLibrary';\nimport Login from './components/Login/Login';\nimport MyCourses from './components/MyCourses/MyCourses';\nimport UserProfile from './components/UserProfile/UserProfile';\nimport CreateCourse from './components/CreateCourse/CreateCourse.component';\nimport CourseOverview from './components/CourseOverview/CourseOverview.component';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nimport * as FirebaseService from '../src/service/firebase.service'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: { // peaches\n      light: '#f44336',\n      main: '#f6eee7',\n      dark: '#dbbca1',\n    },\n    secondary: {  // purples\n      light: '#a17da5',\n      main: '#87618c',\n      dark: '#442b4a',\n    },\n  },\n  typography: {\n    useNextVariants: true\n  },\n  overrides: {\n    MuiButton: {\n      root: {\n        textTransform: 'none',\n      },\n    },\n  },\n})\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      courses: [],\n      users: [],\n      currentUser: undefined,\n    };\n    this.fetchCourses = this.fetchCourses.bind(this);\n    this.fetchUsers = this.fetchUsers.bind(this);\n    this.render = this.render.bind(this);\n    this.updateUser = this.updateUser.bind(this);\n    this.setUser = this.setUser.bind(this);\n    this.getUserOnLoad = this.getUserOnLoad.bind(this);\n    this.fetchCourses().then(() => {\n      this.getUserOnLoad();\n    });\n  }\n\n  async updateUser(userId) {\n    if (!userId) {\n      this.setState({ currentUser: undefined });\n      return;\n    }\n    await FirebaseService.getUserById(userId)\n      .then(result => {\n        const user = result.data();\n\n        if (user.createdCoursesRefs && user.createdCoursesRefs.length > 0) {\n\n          const newCourses = user.createdCoursesRefs\n            .map(courseRef => this.state.courses.find(course => course.id === courseRef.id));\n\n          user.createdCourses = user.createdCoursesRefs\n            .map(courseRef => this.state.courses.find(course => course.id === courseRef.id));\n        }\n\n        if (user.pastCoursesRefs && user.pastCoursesRefs.length > 0) {\n          user.pastCourses = user.pastCoursesRefs\n            .map(courseRef => this.state.courses.find(course => course.id === courseRef.id));\n        }\n\n        if (user.favoritedCoursesRefs && user.favoritedCoursesRefs.length > 0) {\n          user.favoritedCourses = user.favoritedCoursesRefs\n            .map(courseRef => this.state.courses.find(course => course.id === courseRef.id));\n        }\n\n        this.setState({ currentUser: user });\n\n      })\n  }\n\n  getUserOnLoad() {\n    let user = FirebaseService.getCurrentUser();\n    if (user) {\n      this.updateUser(user.uid);\n    } else if (document.cookie.split(';').some((item) => item.trim().startsWith('userid='))) {\n      var cookieValue = document.cookie.replace(/(?:(?:^|.*;\\s*)userid\\s*\\=\\s*([^;]*).*$)|^.*$/, \"$1\");\n      this.updateUser(cookieValue);\n    } else {\n      this.updateUser(undefined);\n    }\n  }\n\n  setUser(user) {\n    console.log(\"login\", user);\n    this.updateUser(user.id);\n    document.cookie = `userid=${user.id}`;\n  }\n\n  async fetchCourses() {\n    let courses = [];\n    await FirebaseService.getAllCourses().then((queryResults) => {\n      queryResults.forEach((doc) => {\n        const course = doc.data();\n        const courseId = doc.id;\n        course.owner.get().then(user => {\n          course.owner = user.data();\n        })\n        // course.chapter.lessons.get().then(lesson => {\n        //   course.chapter.lessons = lesson.data();\n        // })\n        course.id = courseId\n        courses.push(course);\n        this.setState({ courses: courses });\n      });\n    });\n  }\n\n  async fetchUsers() {\n    let users = [];\n    await FirebaseService.getAllUsers()\n      .then((queryResults) => {\n        queryResults.forEach((doc) => {\n          const user = doc.data();\n          user.id = doc.id;\n          users.push(user);\n          this.setState({\n            users\n          })\n        })\n      })\n  }\n\n  render() {\n\n    if (this.state.currentUser) {\n      console.log('logged in!')\n    }\n\n    return (\n      <MuiThemeProvider theme={theme}>\n        <Router>\n          <div>\n            <nav hidden={!this.state.currentUser}>\n              <AppBar position=\"static\">\n                <Toolbar>\n                  <Button variant=\"contained\" color=\"secondary\" className=\"menu-button main\" component={RouterLink} to=\"/myCourses\">My Courses</Button>\n                  <Button variant=\"contained\" color=\"secondary\" className=\"menu-button main\" component={RouterLink} to=\"/courseLibrary\">All Courses</Button>\n                  <Button variant=\"outlined\" color=\"secondary\" className=\"menu-button align-left\" component={RouterLink} to=\"/createCourse\">Create a Course</Button>\n                  <IconButton className=\"menu-button profile-icon\" component={RouterLink} to=\"/profile\" color=\"inherit\" aria-label=\"menu\">\n                    <AccountCircleIcon />\n                  </IconButton>\n                  <span>{this.props.user?.name}</span>\n                </Toolbar>\n              </AppBar>\n            </nav>\n\n            {/* A <Switch> looks through its children <Route>s and\n                renders the first one that matches the current URL. */}\n            <Switch>\n              <Route exact path=\"/\">\n                <Login completeLogin={this.setUser} />\n              </Route>\n              <Route path=\"/courseLibrary\">\n                <CourseLibrary courses={this.state.courses} user={this.state.currentUser} updateUser={this.updateUser} />\n              </Route>\n              <Route path=\"/courseOverview/:id\">\n                <CourseOverview editable={false} user={this.state.currentUser}></CourseOverview>\n              </Route>\n              <Route path=\"/myCourses\">\n                <MyCourses user={this.state.currentUser}></MyCourses>\n              </Route>\n              <Route path=\"/profile\">\n                <UserProfile user={this.state.currentUser} updateUser={this.updateUser}></UserProfile>\n              </Route>\n              <Route path=\"/createCourse\">\n                <CreateCourse user={this.state.currentUser} updateUser={this.updateUser} updateCourses={this.fetchCourses}></CreateCourse>\n              </Route>\n              <Route path=\"/editCourse/:id\">\n                <CourseOverview editable={true} user={this.state.currentUser}></CourseOverview>\n              </Route>\n            </Switch>\n          </div>\n        </Router>\n      </MuiThemeProvider>\n    )\n  }\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}