{"version":3,"sources":["logo.svg","components/CourseCard/CourseCard.js","service/firebase.service.js","components/CourseLibrary/CourseLibrary.js","components/CourseOverview/CourseOverview.js","components/Home/Home.js","components/MyCourses/MyCourses.js","components/UserProfile/UserProfile.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","maxWidth","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","CourseCard","props","classes","React","useState","console","log","Card","className","CardHeader","title","course","subheader","owner","displayName","CardMedia","image","CardContent","Typography","variant","color","component","description","CardActions","disableSpacing","IconButton","aria-label","Button","Link","to","id","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","getCourseById","courseId","collection","doc","get","getAllCourses","getAllUsers","CourseLibrary","this","courses","map","item","Component","generate","element","value","cloneElement","key","CourseOverviewNavigationPane","Paper","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","Grid","container","spacing","xs","md","List","dense","ListItem","ListItemText","primary","CourseOverviewCoursePane","CourseOverview","setCourse","setError","useParams","useEffect","FirebaseService","then","courseResult","exists","data","catch","CircularProgress","CoursesDropdownComponent","numberOfCourses","length","button","courseTitle","CurrentCoursesComponent","currentCourses","PastCoursesComponent","pastCourses","SavedCoursesComponent","savedCourses","CreatedCoursesComponent","createdCourses","MyCourses","user","courseComponentList","favoritedCourses","push","CssBaseline","Container","userKeyToDisplayMap","UserProfileSectionComponent","align","displayKey","UserProfile","Divider","email","App","state","users","fetchCourses","bind","fetchUsers","render","queryResults","forEach","chapter","lessons","lesson","setState","AppBar","position","Toolbar","edge","RouterLink","exact","path","service","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.49c0d79a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { Button } from '@material-ui/core';\nimport {Link} from 'react-router-dom'\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n}));\n\nexport default function CourseCard(props) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n  console.log(props)\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n        title={props.course.title}\n        subheader={props.course.owner.displayName}\n      />\n      <CardMedia\n        className={classes.media}\n        image=\"/static/images/cards/paella.jpg\"\n        title=\"Paella dish\"\n      />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {props.course.description}\n        </Typography> \n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {props.course.owner.displayName}\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n        <IconButton aria-label=\"add to favorites\">\n          <FavoriteIcon />\n        </IconButton>\n        <Button \n          variant=\"contained\" \n          color=\"primary\"\n          component={Link}\n          to={`/courseOverview/${props.course.id}`}\n          >\n            Overview\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}","// import * as firebase from \"firebase/app\";\n// import \"firebase/firestore\";\n// import \"firebase/auth\";\nimport firebase from 'firebase'\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyA8tAHYGUiNkFHq6452W4Qr79eibVmtRZA\",\n    authDomain: \"mooc-in-a-box.firebaseapp.com\",\n    databaseURL: \"https://mooc-in-a-box.firebaseio.com\",\n    projectId: \"mooc-in-a-box\",\n    storageBucket: \"mooc-in-a-box.appspot.com\",\n    messagingSenderId: \"594314585164\",\n    appId: \"1:594314585164:web:3ae152452d1c238af100e9\",\n    measurementId: \"G-LXH34JCXZS\"\n  };\n\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\n\n\nexport const getCourseById = courseId => {\n    return db.collection('Course')\n        .doc(courseId)\n        .get();\n};\n\nexport const getAllCourses = () => {\n    return db.collection('Course').get();\n}\n\nexport const getAllUsers = () => {\n    return db.collection('Users').get();\n}","import React from 'react';\nimport './CourseLibrary.css';\nimport {Button} from '@material-ui/core';\nimport CourseCard from '../CourseCard/CourseCard';\nimport { render } from '@testing-library/react';\n\nimport * as FirebaseService from '../../service/firebase.service'\n\nclass CourseLibrary extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  \n  render() {\n    let listItems = this.props.courses.map(function(item) {\n      return (\n        <div className=\"CurrentCourse\">\n          <CourseCard course={item}\n          ></CourseCard>\n        </div>\n      );\n    });\n    \n    return (listItems);\n  }\n}\n\nexport default CourseLibrary;\n","import React, { useState, useEffect } from 'react';\nimport './CourseOverview.css';\n\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport * as FirebaseService from '../../service/firebase.service';\n\nimport { useParams } from \"react-router-dom\";\n\n\n\nfunction generate(element) {\n    return [0, 1, 2].map(value =>\n      React.cloneElement(element, {\n        key: value,\n      }),\n    );\n  }\n\n\n \nfunction CourseOverviewNavigationPane() {\n    return (\n        <Paper className=\"paper\">\n\n        <ExpansionPanel>\n            <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n            >\n            <Typography variant=\"subtitle2\">Topic 1</Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n            <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                    <div>\n                        <List dense=\"true\">\n                        {generate(\n                            <ListItem>\n                                <ListItemText\n                                    primary=\"SubTopic\"\n                                />\n                            </ListItem>,\n                        )}\n                        </List>\n                    </div>\n                    </Grid>\n                </Grid>\n            </ExpansionPanelDetails>\n        </ExpansionPanel>\n        <ExpansionPanel>\n            <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel2a-content\"\n            id=\"panel2a-header\"\n            >\n            <Typography variant=\"subtitle2\">Topic 2</Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n            <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                    <div>\n                        <List dense=\"true\">\n                        {generate(\n                            <ListItem>\n                                <ListItemText\n                                    primary=\"SubTopic2\"\n                                />\n                            </ListItem>,\n                        )}\n                        </List>\n                    </div>\n                    </Grid>\n                </Grid>\n            </ExpansionPanelDetails>\n        </ExpansionPanel>\n\n    </Paper>\n    )\n}  \n\n\nfunction CourseOverviewCoursePane(props) {\n    return (\n        <Paper className=\"paper\">{props.course.title}</Paper>\n    )\n}\n\nfunction CourseOverview(props) {\n\n    const [course, setCourse] = useState();\n    const [error, setError] = useState();\n    let { id } = useParams();\n\n    useEffect(() => {\n        if (id) {\n            console.log(`ID: ${id}`);\n            FirebaseService.getCourseById(id)\n                .then(courseResult => {\n                    console.log(courseResult.exists)\n                    if (courseResult.exists) {\n                        setError(null);\n                        setCourse(courseResult.data());\n                    } else {\n                        setError('Course Not Found');\n                        setCourse();\n                    }\n                })\n                .catch(() => setError('Course Get Fail'));\n      }\n    }, [id]);\n\n    console.log(`Course Overiew: ${course}`)\n    if (course){\n        return (\n            <div className=\"courseOverview\">\n              <Typography className=\"center\" variant=\"h3\" component=\"h3\">\n                  Course Overview\n              </Typography>\n              <Grid container spacing={3}>\n                  <Grid item xs={4}>\n                      <CourseOverviewNavigationPane />\n                  </Grid>\n                  <Grid item xs={8}>\n                       <CourseOverviewCoursePane course={course} />\n                  </Grid>\n              </Grid>\n            </div>\n          );\n    } else {\n        return (\n            <div>\n                Loading...\n                <CircularProgress></CircularProgress>\n            </div>\n        )\n    }\n\n  }\n  \n  export default CourseOverview;","import React from 'react';\nimport './Home.css';\nimport {Button} from '@material-ui/core';\n\nfunction CourseLibrary() {\n  return (\n    <div className=\"Home\">\n      <h1>This Is MOOC IN A BOX</h1>\n    </div>\n  );\n}\n\nexport default CourseLibrary;\n","import React from 'react';\nimport './MyCourses.css';\nimport {Button} from '@material-ui/core';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {Link} from 'react-router-dom'\n\n\n/**\n * \n * http://localhost:3000/courseOverview/rlfxOavBn4nPZLNTRMkL\n * http://localhost:3000/courseOverview/rlfxOavBn4nPZLNTRMkL\n */\n\n /**\n  * \n  * \n  */\n\n\n\nfunction generate(element) {\n  return React.cloneElement(element, {\n      key: element,\n    })\n}\n\n\nfunction CoursesDropdownComponent(props) {\n  let numberOfCourses = props.courses.length;\n  console.log(numberOfCourses);\n  return (\n    <ExpansionPanel>\n            <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n            >\n            <Typography variant=\"subtitle2\">{numberOfCourses} Course(s)</Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n            <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                    <div>\n                        <List dense=\"true\">\n                        {\n                          props.courses.map( course => {\n                            return (\n                              <ListItem \n                                button\n                                component={Link}\n                                to={`/courseOverview/${course.courseId}`}\n                              >\n                                  <ListItemText\n                                      primary={course.courseTitle}\n                                  />\n                              </ListItem>\n                            )\n                          })\n                        }\n                        </List>\n                    </div>\n                    </Grid>\n                </Grid>\n            </ExpansionPanelDetails>\n        </ExpansionPanel>\n  )\n}\n\n\n\n\nfunction CurrentCoursesComponent(props){\n  console.log(`Current Courses Component Props`, props);\n  let numberOfCourses = props.currentCourses.length;\n  console.log(numberOfCourses);\n  return (\n    <div>\n      <h1> Current Courses </h1>\n      <CoursesDropdownComponent courses={props.currentCourses}></CoursesDropdownComponent>\n    </div>\n  )\n}\n\n\nfunction PastCoursesComponent(props){\n  console.log(`Past Courses Component Props: ${props}`);\n  return (\n    <div>\n      <h1> Past Courses </h1>\n      <CoursesDropdownComponent courses={props.pastCourses}></CoursesDropdownComponent>\n    </div>\n  )\n}\n\nfunction SavedCoursesComponent(props){\n  console.log(`Saved Courses Component Props: ${props}`);\n  return (\n    <div>\n      <h1> Saved Courses </h1>\n      <CoursesDropdownComponent courses={props.savedCourses}></CoursesDropdownComponent>\n    </div>\n  )\n}\n\nfunction CreatedCoursesComponent(props){\n  console.log(`Created Courses Component Props: ${props}`);\n  return (\n    <div>\n      <h1> Saved Courses </h1>\n      <CoursesDropdownComponent courses={props.createdCourses}></CoursesDropdownComponent>\n    </div>\n  )\n}\n\n\n\nfunction MyCourses(props) {\n  console.log(\"My Courses Component: \", props.user);\n  if (props.user) {\n    const courseComponentList = []\n    console.log(props.user.favoritedCourses);\n\n    \n    if (props.user.currentCourses && props.user.currentCourses.length > 0){\n      const element = <CurrentCoursesComponent currentCourses={props.user.currentCourses}></CurrentCoursesComponent>\n      courseComponentList.push(element);\n    }\n\n    if (props.user.pastCourses && props.user.currentCourses.pastCourses > 0){\n      const element = <PastCoursesComponent pastCourses={props.user.pastCourses}></PastCoursesComponent>\n      courseComponentList.push(element);\n    }\n\n    if (props.user.favoritedCourses && props.user.favoritedCourses.length > 0){\n      const element = <SavedCoursesComponent savedCourses={props.user.favoritedCourses}></SavedCoursesComponent>\n      courseComponentList.push(element);\n    }\n\n    if (props.user.createdCourses && props.user.createdCourses.length > 0){\n      const element = <CreatedCoursesComponent createdCourses={props.user.createdCourses}></CreatedCoursesComponent>\n      courseComponentList.push(element);\n    }\n\n    return (\n      <div className=\"MyCourses\">\n        <CssBaseline />\n        <Typography className=\"center\" variant=\"h3\" component=\"h3\">\n            My Courses\n        </Typography>\n        <Container maxWidth=\"lg\">\n          <Paper className=\"paper\">\n            {\n              courseComponentList.map( element => element)\n            }\n          </Paper>\n        </Container>\n      </div>\n    );\n  } else {\n    return (\n        <div>\n            You don't have any course history!\n        </div>\n    )\n  }\n\n}\n\nexport default MyCourses;\n","import React from 'react';\nimport './UserProfile.css';\nimport {Button} from '@material-ui/core';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Divider from '@material-ui/core/Divider';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\n\nimport { FormControl, FormHelperText, InputLabel, Input, IconButton } from '@material-ui/core';\n\n\nconst userKeyToDisplayMap = {\n  \"displayName\": \"Display Name\",\n  \"email\": \"Email Address\",\n  \"password\": \"Password\"\n}\n\nconst passwordValue = \"*******\";\n\nfunction UserProfileSectionComponent(props){\n  return (\n    <div>\n      <Typography align=\"center\" variant=\"h6\" component=\"h6\">\n        <strong>{userKeyToDisplayMap[props.displayKey]}</strong>\n      </Typography>\n      <Typography align=\"center\" variant=\"body1\" component=\"body1\">\n        <span>\n        {props.value}\n          <IconButton className=\"menu-button\" color=\"inherit\" aria-label=\"menu\">\n            <EditIcon />\n          </IconButton>\n        </span>\n      </Typography>\n    </div>\n  )\n}\n\n\n\n\n\nfunction UserProfile(props) {\n  console.log(props);\n  if (props.user){\n    return (\n      <div className=\"userProfile\">\n        <CssBaseline />\n        <Typography className=\"center\" variant=\"h3\" component=\"h3\">\n            User Profile\n        </Typography>\n        <Container maxWidth=\"lg\">\n          <Paper className=\"paper\">\n  \n            <UserProfileSectionComponent displayKey={\"displayName\"} value={props.user.displayName}></UserProfileSectionComponent>\n            <Divider />\n            <UserProfileSectionComponent displayKey=\"email\" value={props.user.email}></UserProfileSectionComponent>\n            <Divider />\n            <UserProfileSectionComponent displayKey=\"password\" value={passwordValue}></UserProfileSectionComponent>\n  \n          </Paper>\n        </Container>\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        Loading..\n        <CircularProgress></CircularProgress>\n      </div>\n    )\n  }\n\n}\n\nexport default UserProfile;\n","import React, { useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {AppBar, Toolbar, IconButton, Typography, Button, } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\n\n\n\n\nimport CourseLibrary from './components/CourseLibrary/CourseLibrary';\nimport CourseOverview from './components/CourseOverview/CourseOverview';\nimport Home from './components/Home/Home';\nimport MyCourses from './components/MyCourses/MyCourses';\nimport UserProfile from './components/UserProfile/UserProfile';\n\n\nimport * as FirebaseService from '../src/service/firebase.service'\nimport { render } from '@testing-library/react';\n\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      courses: [],\n      users: []\n    };\n    this.fetchCourses = this.fetchCourses.bind(this);\n    this.fetchUsers = this.fetchUsers.bind(this);\n    this.render = this.render.bind(this);\n    this.fetchCourses();\n    this.fetchUsers();\n  }\n\n  useEffect() {\n    // Update the document title using the browser API\n    FirebaseService.getAllCourses().then( (queryResults) => {\n        queryResults.forEach((doc) => {\n          console.log(`${doc.id} => ${doc.data()}`);\n          console.log(doc.data());\n        });\n      })\n    }\n    \n    async fetchCourses() {\n      let courses = [];\n      await FirebaseService.getAllCourses().then( (queryResults) => {\n        queryResults.forEach((doc) => {\n          const course = doc.data();\n          const courseId = doc.id;\n          course.owner.get().then(user => {\n            course.owner = user.data();\n          })\n          course.chapter.lessons.get().then(lesson => {\n            course.chapter.lessons = lesson.data();\n          })\n          course.id = courseId\n          courses.push(course);\n          this.setState({courses: courses});\n        });\n      });\n    }\n\n    async fetchUsers(){\n      let users = [];\n      await FirebaseService.getAllUsers()\n        .then( (queryResults) => {\n          queryResults.forEach( (doc) => {\n            const user = doc.data();\n            user.id = doc.id;\n            users.push(user);\n            this.setState({\n              users\n            })\n          })\n        })\n    }\n\n\n  render() {\n    return (\n      <Router>\n        <div>\n          <nav>\n          <AppBar position=\"static\">\n            <Toolbar>\n              <IconButton edge=\"start\" className=\"menu-button\" color=\"inherit\" aria-label=\"menu\">\n                <MenuIcon />\n              </IconButton>\n              <Button color=\"inherit\" className=\"menu-button\" component={RouterLink} to=\"/\">MOOC-In-A-Box</Button>\n              <Button color=\"inherit\" className=\"menu-button\" component={RouterLink} to=\"/myCourses\">My Courses</Button>\n              <Button color=\"inherit\" className=\"menu-button\" component={RouterLink} to=\"/courseLibrary\">All Courses</Button>\n              <IconButton className=\"menu-button profile-icon\" component={RouterLink} to=\"/profile\" color=\"inherit\" aria-label=\"menu\">\n                <AccountCircleIcon />\n              </IconButton>\n            </Toolbar>\n          </AppBar>\n          </nav>\n\n          {/* A <Switch> looks through its children <Route>s and\n              renders the first one that matches the current URL. */}\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route path=\"/courseLibrary\">\n              <CourseLibrary courses={this.state.courses}/>\n            </Route>\n            <Route path=\"/courseOverview/:id\">\n              <CourseOverview service={FirebaseService}></CourseOverview>\n            </Route>\n            <Route path=\"/myCourses\">\n              <MyCourses user={this.state.users[0]}></MyCourses>\n            </Route>\n            <Route path=\"/profile\">\n              <UserProfile user={this.state.users[0]}></UserProfile>\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    )\n  }\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}